{
    "format_version": "1.1",
    "terraform_version": "1.3.6",
    "variables": {
        "aws_account": {
            "value": "588487667149"
        },
        "aws_region": {
            "value": "us-west-2"
        },
        "env": {
            "value": "dev"
        },
        "lambda_execution_role": {
            "value": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        },
        "psk": {
            "value": "Dev999PSK"
        },
        "stack": {
            "value": "68c9d996ee3b87f"
        }
    },
    "planned_values": {
        "root_module": {
            "resources": [
                {
                    "address": "aws_iam_role.authorized_api_caller",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "authorized_api_caller",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "arn": "arn:aws:iam::588487667149:role/nomcomittal-api-caller",
                        "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                        "create_date": "2022-06-23T23:39:28Z",
                        "description": "",
                        "force_detach_policies": false,
                        "id": "nomcomittal-api-caller",
                        "inline_policy": [
                            {
                                "name": "authorized-api-calls",
                                "policy": "{\"Statement\":[{\"Action\":[\"lambda:InvokeFunction\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev\"}],\"Version\":\"2012-10-17\"}"
                            }
                        ],
                        "managed_policy_arns": [],
                        "max_session_duration": 3600,
                        "name": "nomcomittal-api-caller",
                        "name_prefix": "",
                        "path": "/",
                        "permissions_boundary": null,
                        "tags": {},
                        "tags_all": {},
                        "unique_id": "AROAYSBEZFXG72GJMA5P3"
                    },
                    "sensitive_values": {
                        "inline_policy": [
                            {}
                        ],
                        "managed_policy_arns": [],
                        "tags": {},
                        "tags_all": {}
                    }
                }
            ],
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.api_authorizer.aws_cloudwatch_log_group.lambda[0]",
                            "mode": "managed",
                            "type": "aws_cloudwatch_log_group",
                            "name": "lambda",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "id": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "kms_key_id": "",
                                "name": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "name_prefix": null,
                                "retention_in_days": 0,
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.api_authorizer.aws_iam_policy.logs[0]",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "logs",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                "description": "",
                                "id": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                "name_prefix": null,
                                "path": "/",
                                "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                                "policy_id": "ANPAYSBEZFXGSXRTXKD2Q",
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.api_authorizer.aws_iam_role.lambda[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "lambda",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                                "create_date": "2022-06-23T23:37:22Z",
                                "description": "",
                                "force_detach_policies": true,
                                "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "inline_policy": [
                                    {
                                        "name": "",
                                        "policy": ""
                                    }
                                ],
                                "managed_policy_arns": [
                                    "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs"
                                ],
                                "max_session_duration": 3600,
                                "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "name_prefix": "",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": {},
                                "tags_all": {},
                                "unique_id": "AROAYSBEZFXG6WSDO4BGG"
                            },
                            "sensitive_values": {
                                "inline_policy": [
                                    {}
                                ],
                                "managed_policy_arns": [
                                    false
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.api_authorizer.aws_iam_role_policy_attachment.logs[0]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "logs",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-20220623233723598900000001",
                                "policy_arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                "role": "noncommittal-api-authorizer-68c9d996ee3b87f-dev"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.api_authorizer.aws_lambda_function.this[0]",
                            "mode": "managed",
                            "type": "aws_lambda_function",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "architectures": [
                                    "x86_64"
                                ],
                                "arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "code_signing_config_arn": "",
                                "dead_letter_config": [],
                                "description": "",
                                "environment": [
                                    {
                                        "variables": {
                                            "PSK": "Dev999PSK"
                                        }
                                    }
                                ],
                                "ephemeral_storage": [
                                    {
                                        "size": 512
                                    }
                                ],
                                "file_system_config": [],
                                "filename": null,
                                "function_name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "handler": "authorizer.handler",
                                "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "image_config": [],
                                "image_uri": "",
                                "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev/invocations",
                                "kms_key_arn": "",
                                "last_modified": "2022-06-24T15:49:38.328+0000",
                                "layers": [],
                                "memory_size": 128,
                                "package_type": "Zip",
                                "publish": false,
                                "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev:1",
                                "reserved_concurrent_executions": -1,
                                "role": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                "runtime": "python3.9",
                                "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                                "s3_key": "dev/code/authorizer_lambda.zip",
                                "s3_object_version": null,
                                "signing_job_arn": "",
                                "signing_profile_version_arn": "",
                                "source_code_hash": "7S6q9KvQbQWy8ikISPqbnaoo3KS8l97oTtzhnX+9dZA=",
                                "source_code_size": 504,
                                "tags": {},
                                "tags_all": {},
                                "timeout": 3,
                                "timeouts": null,
                                "tracing_config": [
                                    {
                                        "mode": "PassThrough"
                                    }
                                ],
                                "version": "1",
                                "vpc_config": []
                            },
                            "sensitive_values": {
                                "architectures": [
                                    false
                                ],
                                "dead_letter_config": [],
                                "environment": [
                                    {
                                        "variables": {}
                                    }
                                ],
                                "ephemeral_storage": [
                                    {}
                                ],
                                "file_system_config": [],
                                "image_config": [],
                                "layers": [],
                                "tags": {},
                                "tags_all": {},
                                "tracing_config": [
                                    {}
                                ],
                                "vpc_config": []
                            }
                        }
                    ],
                    "address": "module.api_authorizer"
                },
                {
                    "resources": [
                        {
                            "address": "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda[0]",
                            "mode": "managed",
                            "type": "aws_cloudwatch_log_group",
                            "name": "lambda",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                                "id": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                                "kms_key_id": "",
                                "name": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                                "name_prefix": null,
                                "retention_in_days": 0,
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.create_instrument_lambda.aws_iam_policy.logs[0]",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "logs",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                "description": "",
                                "id": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                "name": "create-instrument-68c9d996ee3b87f-dev-logs",
                                "name_prefix": null,
                                "path": "/",
                                "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                                "policy_id": "ANPAYSBEZFXGWCZAM7Z6N",
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.create_instrument_lambda.aws_iam_role.lambda[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "lambda",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                                "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"},{\"Sid\":\"songwriter\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                                "create_date": "2022-06-24T23:29:30Z",
                                "description": "",
                                "force_detach_policies": true,
                                "id": "create-instrument-68c9d996ee3b87f-dev",
                                "inline_policy": [
                                    {
                                        "name": "",
                                        "policy": ""
                                    }
                                ],
                                "managed_policy_arns": [
                                    "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                    "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev"
                                ],
                                "max_session_duration": 3600,
                                "name": "create-instrument-68c9d996ee3b87f-dev",
                                "name_prefix": "",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": {},
                                "tags_all": {},
                                "unique_id": "AROAYSBEZFXG7FBAXX32N"
                            },
                            "sensitive_values": {
                                "inline_policy": [
                                    {}
                                ],
                                "managed_policy_arns": [
                                    false,
                                    false
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.create_instrument_lambda.aws_iam_role_policy_attachment.additional_many[0]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "additional_many",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931188300000002",
                                "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                "role": "create-instrument-68c9d996ee3b87f-dev"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.create_instrument_lambda.aws_iam_role_policy_attachment.logs[0]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "logs",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931180300000001",
                                "policy_arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                "role": "create-instrument-68c9d996ee3b87f-dev"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.create_instrument_lambda.aws_lambda_function.this[0]",
                            "mode": "managed",
                            "type": "aws_lambda_function",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "architectures": [
                                    "x86_64"
                                ],
                                "arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev",
                                "code_signing_config_arn": "",
                                "dead_letter_config": [],
                                "description": "",
                                "environment": [
                                    {
                                        "variables": {
                                            "BUCKET": "noncommittalband.com-68c9d996ee3b87f",
                                            "PART_TABLE": "Instrument-68c9d996ee3b87f-dev",
                                            "SONG_TABLE": "Song-68c9d996ee3b87f-dev"
                                        }
                                    }
                                ],
                                "ephemeral_storage": [
                                    {
                                        "size": 512
                                    }
                                ],
                                "file_system_config": [],
                                "filename": null,
                                "function_name": "create-instrument-68c9d996ee3b87f-dev",
                                "handler": "create_instrument.handler",
                                "id": "create-instrument-68c9d996ee3b87f-dev",
                                "image_config": [],
                                "image_uri": "",
                                "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations",
                                "kms_key_arn": "",
                                "last_modified": "2022-06-24T23:32:30.437+0000",
                                "layers": [],
                                "memory_size": 128,
                                "package_type": "Zip",
                                "publish": true,
                                "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev:1",
                                "reserved_concurrent_executions": -1,
                                "role": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                                "runtime": "python3.9",
                                "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                                "s3_key": "dev/code/create_instrument_lambda.zip",
                                "s3_object_version": null,
                                "signing_job_arn": "",
                                "signing_profile_version_arn": "",
                                "source_code_hash": "uSO0avvWlYE/aQL2KlnZ1PXxZ7On6rEiL0tF4Da0R/g=",
                                "source_code_size": 1150,
                                "tags": {},
                                "tags_all": {},
                                "timeout": 3,
                                "timeouts": null,
                                "tracing_config": [
                                    {
                                        "mode": "PassThrough"
                                    }
                                ],
                                "version": "1",
                                "vpc_config": []
                            },
                            "sensitive_values": {
                                "architectures": [
                                    false
                                ],
                                "dead_letter_config": [],
                                "environment": [
                                    {
                                        "variables": {}
                                    }
                                ],
                                "ephemeral_storage": [
                                    {}
                                ],
                                "file_system_config": [],
                                "image_config": [],
                                "layers": [],
                                "tags": {},
                                "tags_all": {},
                                "tracing_config": [
                                    {}
                                ],
                                "vpc_config": []
                            }
                        }
                    ],
                    "address": "module.create_instrument_lambda"
                },
                {
                    "resources": [
                        {
                            "address": "module.instrument_datastore.aws_dynamodb_table.this[0]",
                            "mode": "managed",
                            "type": "aws_dynamodb_table",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev",
                                "attribute": [
                                    {
                                        "name": "version",
                                        "type": "S"
                                    }
                                ],
                                "billing_mode": "PAY_PER_REQUEST",
                                "global_secondary_index": [],
                                "hash_key": "version",
                                "id": "Instrument-68c9d996ee3b87f-dev",
                                "local_secondary_index": [],
                                "name": "Instrument-68c9d996ee3b87f-dev",
                                "point_in_time_recovery": [
                                    {
                                        "enabled": false
                                    }
                                ],
                                "range_key": null,
                                "read_capacity": 0,
                                "replica": [],
                                "restore_date_time": null,
                                "restore_source_name": null,
                                "restore_to_latest_time": null,
                                "server_side_encryption": [],
                                "stream_arn": "",
                                "stream_enabled": false,
                                "stream_label": "",
                                "stream_view_type": "",
                                "table_class": "",
                                "tags": {
                                    "Name": "Instrument-68c9d996ee3b87f-dev"
                                },
                                "tags_all": {
                                    "Name": "Instrument-68c9d996ee3b87f-dev"
                                },
                                "timeouts": {
                                    "create": "10m",
                                    "delete": "10m",
                                    "update": "60m"
                                },
                                "ttl": [
                                    {
                                        "attribute_name": "",
                                        "enabled": false
                                    }
                                ],
                                "write_capacity": 0
                            },
                            "sensitive_values": {
                                "attribute": [
                                    {}
                                ],
                                "global_secondary_index": [],
                                "local_secondary_index": [],
                                "point_in_time_recovery": [
                                    {}
                                ],
                                "replica": [],
                                "server_side_encryption": [],
                                "tags": {},
                                "tags_all": {},
                                "timeouts": {},
                                "ttl": [
                                    {}
                                ]
                            }
                        }
                    ],
                    "address": "module.instrument_datastore"
                },
                {
                    "resources": [
                        {
                            "address": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "policy",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                "description": "Allows writing instrument data to S3",
                                "id": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                "name": "instrument-writer-68c9d996ee3b87f-dev",
                                "name_prefix": null,
                                "path": "/",
                                "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f\"]}],\"Version\":\"2012-10-17\"}",
                                "policy_id": "ANPAYSBEZFXGYFES5CC5Q",
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.instrument_writer_policy"
                },
                {
                    "resources": [
                        {
                            "address": "module.song_datastore.aws_dynamodb_table.this[0]",
                            "mode": "managed",
                            "type": "aws_dynamodb_table",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev",
                                "attribute": [
                                    {
                                        "name": "instrumentId",
                                        "type": "S"
                                    },
                                    {
                                        "name": "name",
                                        "type": "S"
                                    }
                                ],
                                "billing_mode": "PAY_PER_REQUEST",
                                "global_secondary_index": [],
                                "hash_key": "name",
                                "id": "Song-68c9d996ee3b87f-dev",
                                "local_secondary_index": [],
                                "name": "Song-68c9d996ee3b87f-dev",
                                "point_in_time_recovery": [
                                    {
                                        "enabled": false
                                    }
                                ],
                                "range_key": "instrumentId",
                                "read_capacity": 0,
                                "replica": [],
                                "restore_date_time": null,
                                "restore_source_name": null,
                                "restore_to_latest_time": null,
                                "server_side_encryption": [],
                                "stream_arn": "",
                                "stream_enabled": false,
                                "stream_label": "",
                                "stream_view_type": "",
                                "table_class": "",
                                "tags": {
                                    "Name": "Song-68c9d996ee3b87f-dev"
                                },
                                "tags_all": {
                                    "Name": "Song-68c9d996ee3b87f-dev"
                                },
                                "timeouts": {
                                    "create": "10m",
                                    "delete": "10m",
                                    "update": "60m"
                                },
                                "ttl": [
                                    {
                                        "attribute_name": "",
                                        "enabled": false
                                    }
                                ],
                                "write_capacity": 0
                            },
                            "sensitive_values": {
                                "attribute": [
                                    {},
                                    {}
                                ],
                                "global_secondary_index": [],
                                "local_secondary_index": [],
                                "point_in_time_recovery": [
                                    {}
                                ],
                                "replica": [],
                                "server_side_encryption": [],
                                "tags": {},
                                "tags_all": {},
                                "timeouts": {},
                                "ttl": [
                                    {}
                                ]
                            }
                        }
                    ],
                    "address": "module.song_datastore"
                },
                {
                    "resources": [
                        {
                            "address": "module.song_writer_policy.aws_iam_policy.policy[0]",
                            "mode": "managed",
                            "type": "aws_iam_policy",
                            "name": "policy",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                "description": "Allows writing Songs to DynamoDB",
                                "id": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                "name": "song-writer-68c9d996ee3b87f-dev",
                                "name_prefix": null,
                                "path": "/",
                                "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:PutItem\",\"dynamodb:GetItem\",\"dynamodb:Query\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev\",\"arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev\"]}],\"Version\":\"2012-10-17\"}",
                                "policy_id": "ANPAYSBEZFXGZVYTV32BS",
                                "tags": {},
                                "tags_all": {}
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.song_writer_policy"
                },
                {
                    "resources": [
                        {
                            "address": "module.song_writer_role.aws_iam_role.this[0]",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "arn": "arn:aws:iam::588487667149:role/song-writer-68c9d996ee3b87f-dev",
                                "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                                "create_date": "2022-06-19T04:10:09Z",
                                "description": "",
                                "force_detach_policies": false,
                                "id": "song-writer-68c9d996ee3b87f-dev",
                                "inline_policy": [
                                    {
                                        "name": "",
                                        "policy": ""
                                    }
                                ],
                                "managed_policy_arns": [
                                    "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                    "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                ],
                                "max_session_duration": 3600,
                                "name": "song-writer-68c9d996ee3b87f-dev",
                                "name_prefix": "",
                                "path": "/",
                                "permissions_boundary": "",
                                "tags": {},
                                "tags_all": {},
                                "unique_id": "AROAYSBEZFXGQYCMMFJ26"
                            },
                            "sensitive_values": {
                                "inline_policy": [
                                    {}
                                ],
                                "managed_policy_arns": [
                                    false,
                                    false,
                                    false
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[0]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "custom",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "song-writer-68c9d996ee3b87f-dev-20220619041010241100000002",
                                "policy_arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                "role": "song-writer-68c9d996ee3b87f-dev"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[1]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "custom",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "song-writer-68c9d996ee3b87f-dev-20220619041010125200000001",
                                "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                "role": "song-writer-68c9d996ee3b87f-dev"
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[2]",
                            "mode": "managed",
                            "type": "aws_iam_role_policy_attachment",
                            "name": "custom",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "id": "song-writer-68c9d996ee3b87f-dev-20220619041513778300000001",
                                "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                "role": "song-writer-68c9d996ee3b87f-dev"
                            },
                            "sensitive_values": {}
                        }
                    ],
                    "address": "module.song_writer_role"
                },
                {
                    "resources": [
                        {
                            "address": "module.storage.aws_s3_bucket.this[0]",
                            "mode": "managed",
                            "type": "aws_s3_bucket",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "acceleration_status": "",
                                "acl": null,
                                "arn": "arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f",
                                "bucket": "noncommittalband.com-68c9d996ee3b87f",
                                "bucket_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.amazonaws.com",
                                "bucket_prefix": null,
                                "bucket_regional_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.us-west-2.amazonaws.com",
                                "cors_rule": [],
                                "force_destroy": true,
                                "grant": [
                                    {
                                        "id": "1c6a184b086f944a317d716b5e7df457190ba4b77bf0b21ef9975628d2d3f8ac",
                                        "permissions": [
                                            "FULL_CONTROL"
                                        ],
                                        "type": "CanonicalUser",
                                        "uri": ""
                                    }
                                ],
                                "hosted_zone_id": "Z3BJ6K6RIION7M",
                                "id": "noncommittalband.com-68c9d996ee3b87f",
                                "lifecycle_rule": [],
                                "logging": [],
                                "object_lock_configuration": [],
                                "object_lock_enabled": false,
                                "policy": "",
                                "region": "us-west-2",
                                "replication_configuration": [],
                                "request_payer": "BucketOwner",
                                "server_side_encryption_configuration": [],
                                "tags": {},
                                "tags_all": {},
                                "versioning": [
                                    {
                                        "enabled": true,
                                        "mfa_delete": false
                                    }
                                ],
                                "website": [],
                                "website_domain": null,
                                "website_endpoint": null
                            },
                            "sensitive_values": {
                                "cors_rule": [],
                                "grant": [
                                    {
                                        "permissions": [
                                            false
                                        ]
                                    }
                                ],
                                "lifecycle_rule": [],
                                "logging": [],
                                "object_lock_configuration": [],
                                "replication_configuration": [],
                                "server_side_encryption_configuration": [],
                                "tags": {},
                                "tags_all": {},
                                "versioning": [
                                    {}
                                ],
                                "website": []
                            }
                        },
                        {
                            "address": "module.storage.aws_s3_bucket_public_access_block.this[0]",
                            "mode": "managed",
                            "type": "aws_s3_bucket_public_access_block",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "block_public_acls": false,
                                "block_public_policy": false,
                                "bucket": "noncommittalband.com-68c9d996ee3b87f",
                                "id": "noncommittalband.com-68c9d996ee3b87f",
                                "ignore_public_acls": false,
                                "restrict_public_buckets": false
                            },
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.storage.aws_s3_bucket_versioning.this[0]",
                            "mode": "managed",
                            "type": "aws_s3_bucket_versioning",
                            "name": "this",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "bucket": "noncommittalband.com-68c9d996ee3b87f",
                                "expected_bucket_owner": "",
                                "id": "noncommittalband.com-68c9d996ee3b87f",
                                "mfa": null,
                                "versioning_configuration": [
                                    {
                                        "mfa_delete": "",
                                        "status": "Enabled"
                                    }
                                ]
                            },
                            "sensitive_values": {
                                "versioning_configuration": [
                                    {}
                                ]
                            }
                        }
                    ],
                    "address": "module.storage"
                }
            ]
        }
    },
    "resource_drift": [
        {
            "address": "aws_api_gateway_stage.dev",
            "mode": "managed",
            "type": "aws_api_gateway_stage",
            "name": "dev",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "update"
                ],
                "before": {
                    "access_log_settings": [],
                    "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15/stages/dev",
                    "cache_cluster_enabled": false,
                    "cache_cluster_size": "",
                    "canary_settings": [],
                    "client_certificate_id": "",
                    "deployment_id": "594yf4",
                    "description": "",
                    "documentation_version": "",
                    "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/dev",
                    "id": "ags-8gjfakaw15-dev",
                    "invoke_url": "https://8gjfakaw15.execute-api.us-west-2.amazonaws.com/dev",
                    "rest_api_id": "8gjfakaw15",
                    "stage_name": "dev",
                    "tags": {},
                    "tags_all": {},
                    "variables": {},
                    "web_acl_arn": "",
                    "xray_tracing_enabled": false
                },
                "after": {
                    "access_log_settings": [],
                    "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15/stages/dev",
                    "cache_cluster_enabled": false,
                    "cache_cluster_size": "",
                    "canary_settings": [],
                    "client_certificate_id": "",
                    "deployment_id": "n9w5u5",
                    "description": "",
                    "documentation_version": "",
                    "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/dev",
                    "id": "ags-8gjfakaw15-dev",
                    "invoke_url": "https://8gjfakaw15.execute-api.us-west-2.amazonaws.com/dev",
                    "rest_api_id": "8gjfakaw15",
                    "stage_name": "dev",
                    "tags": {},
                    "tags_all": {},
                    "variables": {},
                    "web_acl_arn": "",
                    "xray_tracing_enabled": false
                },
                "after_unknown": {},
                "before_sensitive": {
                    "access_log_settings": [],
                    "canary_settings": [],
                    "tags": {},
                    "tags_all": {},
                    "variables": {}
                },
                "after_sensitive": {
                    "access_log_settings": [],
                    "canary_settings": [],
                    "tags": {},
                    "tags_all": {},
                    "variables": {}
                }
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_lambda_function",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "update"
                ],
                "before": {
                    "architectures": [
                        "x86_64"
                    ],
                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev",
                    "code_signing_config_arn": "",
                    "dead_letter_config": [],
                    "description": "",
                    "environment": [
                        {
                            "variables": {
                                "BUCKET": "noncommittalband.com-68c9d996ee3b87f",
                                "PART_TABLE": "Instrument-68c9d996ee3b87f-dev",
                                "SONG_TABLE": "Song-68c9d996ee3b87f-dev"
                            }
                        }
                    ],
                    "ephemeral_storage": [
                        {
                            "size": 512
                        }
                    ],
                    "file_system_config": [],
                    "filename": null,
                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                    "handler": "create_instrument.handler",
                    "id": "create-instrument-68c9d996ee3b87f-dev",
                    "image_config": [],
                    "image_uri": "",
                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations",
                    "kms_key_arn": "",
                    "last_modified": "2022-06-24T23:32:24.729+0000",
                    "layers": null,
                    "memory_size": 128,
                    "package_type": "Zip",
                    "publish": true,
                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev:1",
                    "reserved_concurrent_executions": -1,
                    "role": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                    "runtime": "python3.9",
                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "s3_key": "dev/code/create_instrument_lambda.zip",
                    "s3_object_version": null,
                    "signing_job_arn": "",
                    "signing_profile_version_arn": "",
                    "source_code_hash": "uSO0avvWlYE/aQL2KlnZ1PXxZ7On6rEiL0tF4Da0R/g=",
                    "source_code_size": 1150,
                    "tags": null,
                    "tags_all": {},
                    "timeout": 3,
                    "timeouts": null,
                    "tracing_config": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "1",
                    "vpc_config": []
                },
                "after": {
                    "architectures": [
                        "x86_64"
                    ],
                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev",
                    "code_signing_config_arn": "",
                    "dead_letter_config": [],
                    "description": "",
                    "environment": [
                        {
                            "variables": {
                                "BUCKET": "noncommittalband.com-68c9d996ee3b87f",
                                "PART_TABLE": "Instrument-68c9d996ee3b87f-dev",
                                "SONG_TABLE": "Song-68c9d996ee3b87f-dev"
                            }
                        }
                    ],
                    "ephemeral_storage": [
                        {
                            "size": 512
                        }
                    ],
                    "file_system_config": [],
                    "filename": null,
                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                    "handler": "create_instrument.handler",
                    "id": "create-instrument-68c9d996ee3b87f-dev",
                    "image_config": [],
                    "image_uri": "",
                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations",
                    "kms_key_arn": "",
                    "last_modified": "2022-06-24T23:32:30.437+0000",
                    "layers": [],
                    "memory_size": 128,
                    "package_type": "Zip",
                    "publish": true,
                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev:1",
                    "reserved_concurrent_executions": -1,
                    "role": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                    "runtime": "python3.9",
                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "s3_key": "dev/code/create_instrument_lambda.zip",
                    "s3_object_version": null,
                    "signing_job_arn": "",
                    "signing_profile_version_arn": "",
                    "source_code_hash": "uSO0avvWlYE/aQL2KlnZ1PXxZ7On6rEiL0tF4Da0R/g=",
                    "source_code_size": 1150,
                    "tags": {},
                    "tags_all": {},
                    "timeout": 3,
                    "timeouts": null,
                    "tracing_config": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "1",
                    "vpc_config": []
                },
                "after_unknown": {},
                "before_sensitive": {
                    "architectures": [
                        false
                    ],
                    "dead_letter_config": [],
                    "environment": [
                        {
                            "variables": {}
                        }
                    ],
                    "ephemeral_storage": [
                        {}
                    ],
                    "file_system_config": [],
                    "image_config": [],
                    "tags_all": {},
                    "tracing_config": [
                        {}
                    ],
                    "vpc_config": []
                },
                "after_sensitive": {
                    "architectures": [
                        false
                    ],
                    "dead_letter_config": [],
                    "environment": [
                        {
                            "variables": {}
                        }
                    ],
                    "ephemeral_storage": [
                        {}
                    ],
                    "file_system_config": [],
                    "image_config": [],
                    "layers": [],
                    "tags": {},
                    "tags_all": {},
                    "tracing_config": [
                        {}
                    ],
                    "vpc_config": []
                }
            }
        }
    ],
    "resource_changes": [
        {
            "address": "aws_api_gateway_authorizer.authorizer",
            "mode": "managed",
            "type": "aws_api_gateway_authorizer",
            "name": "authorizer",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15/authorizers/p9pol1",
                    "authorizer_credentials": "arn:aws:iam::588487667149:role/nomcomittal-api-caller",
                    "authorizer_result_ttl_in_seconds": 300,
                    "authorizer_uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev/invocations",
                    "id": "p9pol1",
                    "identity_source": "method.request.header.Authorization",
                    "identity_validation_expression": "",
                    "name": "authorizer",
                    "provider_arns": [],
                    "rest_api_id": "8gjfakaw15",
                    "type": "TOKEN"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "provider_arns": []
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_api_gateway_deployment.dev",
            "mode": "managed",
            "type": "aws_api_gateway_deployment",
            "name": "dev",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "created_date": "2022-06-24T14:39:17Z",
                    "description": "",
                    "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/",
                    "id": "594yf4",
                    "invoke_url": "https://8gjfakaw15.execute-api.us-west-2.amazonaws.com/",
                    "rest_api_id": "8gjfakaw15",
                    "stage_description": null,
                    "stage_name": null,
                    "triggers": null,
                    "variables": null
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_api_gateway_integration.post_instruments",
            "mode": "managed",
            "type": "aws_api_gateway_integration",
            "name": "post_instruments",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "cache_key_parameters": [],
                    "cache_namespace": "o9pfv5",
                    "connection_id": "",
                    "connection_type": "INTERNET",
                    "content_handling": "",
                    "credentials": "",
                    "http_method": "POST",
                    "id": "agi-8gjfakaw15-o9pfv5-POST",
                    "integration_http_method": "POST",
                    "passthrough_behavior": "WHEN_NO_MATCH",
                    "request_parameters": {},
                    "request_templates": {},
                    "resource_id": "o9pfv5",
                    "rest_api_id": "8gjfakaw15",
                    "timeout_milliseconds": 29000,
                    "tls_config": [],
                    "type": "AWS_PROXY",
                    "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "cache_key_parameters": [],
                    "request_parameters": {},
                    "request_templates": {},
                    "tls_config": []
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_api_gateway_method.post_instruments",
            "mode": "managed",
            "type": "aws_api_gateway_method",
            "name": "post_instruments",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "api_key_required": false,
                    "authorization": "CUSTOM",
                    "authorization_scopes": [],
                    "authorizer_id": "p9pol1",
                    "http_method": "POST",
                    "id": "agm-8gjfakaw15-o9pfv5-POST",
                    "operation_name": "",
                    "request_models": {},
                    "request_parameters": {},
                    "request_validator_id": "",
                    "resource_id": "o9pfv5",
                    "rest_api_id": "8gjfakaw15"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "authorization_scopes": [],
                    "request_models": {},
                    "request_parameters": {}
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_api_gateway_resource.instruments",
            "mode": "managed",
            "type": "aws_api_gateway_resource",
            "name": "instruments",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "id": "o9pfv5",
                    "parent_id": "xazszpcr0m",
                    "path": "/instruments",
                    "path_part": "instruments",
                    "rest_api_id": "8gjfakaw15"
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_api_gateway_rest_api.noncommittal_band",
            "mode": "managed",
            "type": "aws_api_gateway_rest_api",
            "name": "noncommittal_band",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "api_key_source": "HEADER",
                    "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15",
                    "binary_media_types": [],
                    "body": null,
                    "created_date": "2022-06-23T23:37:23Z",
                    "description": "",
                    "disable_execute_api_endpoint": false,
                    "endpoint_configuration": [
                        {
                            "types": [
                                "EDGE"
                            ],
                            "vpc_endpoint_ids": []
                        }
                    ],
                    "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15",
                    "id": "8gjfakaw15",
                    "minimum_compression_size": -1,
                    "name": "noncommittal-band-68c9d996ee3b87f-dev",
                    "parameters": null,
                    "policy": "",
                    "root_resource_id": "xazszpcr0m",
                    "tags": {},
                    "tags_all": {}
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "binary_media_types": [],
                    "endpoint_configuration": [
                        {
                            "types": [
                                false
                            ],
                            "vpc_endpoint_ids": []
                        }
                    ],
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_api_gateway_stage.dev",
            "mode": "managed",
            "type": "aws_api_gateway_stage",
            "name": "dev",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "access_log_settings": [],
                    "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15/stages/dev",
                    "cache_cluster_enabled": false,
                    "cache_cluster_size": "",
                    "canary_settings": [],
                    "client_certificate_id": "",
                    "deployment_id": "n9w5u5",
                    "description": "",
                    "documentation_version": "",
                    "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/dev",
                    "id": "ags-8gjfakaw15-dev",
                    "invoke_url": "https://8gjfakaw15.execute-api.us-west-2.amazonaws.com/dev",
                    "rest_api_id": "8gjfakaw15",
                    "stage_name": "dev",
                    "tags": {},
                    "tags_all": {},
                    "variables": {},
                    "web_acl_arn": "",
                    "xray_tracing_enabled": false
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {
                    "access_log_settings": [],
                    "canary_settings": [],
                    "tags": {},
                    "tags_all": {},
                    "variables": {}
                },
                "after_sensitive": false
            },
            "action_reason": "delete_because_no_resource_config"
        },
        {
            "address": "aws_iam_role.authorized_api_caller",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "authorized_api_caller",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:role/nomcomittal-api-caller",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-23T23:39:28Z",
                    "description": "",
                    "force_detach_policies": false,
                    "id": "nomcomittal-api-caller",
                    "inline_policy": [
                        {
                            "name": "authorized-api-calls",
                            "policy": "{\"Statement\":[{\"Action\":[\"lambda:InvokeFunction\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev\"}],\"Version\":\"2012-10-17\"}"
                        }
                    ],
                    "managed_policy_arns": [],
                    "max_session_duration": 3600,
                    "name": "nomcomittal-api-caller",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXG72GJMA5P3"
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:role/nomcomittal-api-caller",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-23T23:39:28Z",
                    "description": "",
                    "force_detach_policies": false,
                    "id": "nomcomittal-api-caller",
                    "inline_policy": [
                        {
                            "name": "authorized-api-calls",
                            "policy": "{\"Statement\":[{\"Action\":[\"lambda:InvokeFunction\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev\"}],\"Version\":\"2012-10-17\"}"
                        }
                    ],
                    "managed_policy_arns": [],
                    "max_session_duration": 3600,
                    "name": "nomcomittal-api-caller",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXG72GJMA5P3"
                },
                "after_unknown": {},
                "before_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [],
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.api_authorizer.aws_cloudwatch_log_group.lambda[0]",
            "module_address": "module.api_authorizer",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "lambda",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "id": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "kms_key_id": "",
                    "name": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "retention_in_days": 0,
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "id": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "kms_key_id": "",
                    "name": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "retention_in_days": 0,
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.api_authorizer.aws_iam_policy.logs[0]",
            "module_address": "module.api_authorizer",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "logs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "description": "",
                    "id": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGSXRTXKD2Q",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "description": "",
                    "id": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGSXRTXKD2Q",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.api_authorizer.aws_iam_role.lambda[0]",
            "module_address": "module.api_authorizer",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "lambda",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-23T23:37:22Z",
                    "description": "",
                    "force_detach_policies": true,
                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managed_policy_arns": [
                        "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs"
                    ],
                    "max_session_duration": 3600,
                    "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXG6WSDO4BGG"
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-23T23:37:22Z",
                    "description": "",
                    "force_detach_policies": true,
                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managed_policy_arns": [
                        "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs"
                    ],
                    "max_session_duration": 3600,
                    "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXG6WSDO4BGG"
                },
                "after_unknown": {},
                "before_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [
                        false
                    ],
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [
                        false
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.api_authorizer.aws_iam_role_policy_attachment.logs[0]",
            "module_address": "module.api_authorizer",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "logs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-20220623233723598900000001",
                    "policy_arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "role": "noncommittal-api-authorizer-68c9d996ee3b87f-dev"
                },
                "after": {
                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-20220623233723598900000001",
                    "policy_arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                    "role": "noncommittal-api-authorizer-68c9d996ee3b87f-dev"
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.api_authorizer.aws_lambda_function.this[0]",
            "module_address": "module.api_authorizer",
            "mode": "managed",
            "type": "aws_lambda_function",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "architectures": [
                        "x86_64"
                    ],
                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "code_signing_config_arn": "",
                    "dead_letter_config": [],
                    "description": "",
                    "environment": [
                        {
                            "variables": {
                                "PSK": "Dev999PSK"
                            }
                        }
                    ],
                    "ephemeral_storage": [
                        {
                            "size": 512
                        }
                    ],
                    "file_system_config": [],
                    "filename": null,
                    "function_name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "handler": "authorizer.handler",
                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "image_config": [],
                    "image_uri": "",
                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev/invocations",
                    "kms_key_arn": "",
                    "last_modified": "2022-06-24T15:49:38.328+0000",
                    "layers": [],
                    "memory_size": 128,
                    "package_type": "Zip",
                    "publish": false,
                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev:1",
                    "reserved_concurrent_executions": -1,
                    "role": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "runtime": "python3.9",
                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "s3_key": "dev/code/authorizer_lambda.zip",
                    "s3_object_version": null,
                    "signing_job_arn": "",
                    "signing_profile_version_arn": "",
                    "source_code_hash": "7S6q9KvQbQWy8ikISPqbnaoo3KS8l97oTtzhnX+9dZA=",
                    "source_code_size": 504,
                    "tags": {},
                    "tags_all": {},
                    "timeout": 3,
                    "timeouts": null,
                    "tracing_config": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "1",
                    "vpc_config": []
                },
                "after": {
                    "architectures": [
                        "x86_64"
                    ],
                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "code_signing_config_arn": "",
                    "dead_letter_config": [],
                    "description": "",
                    "environment": [
                        {
                            "variables": {
                                "PSK": "Dev999PSK"
                            }
                        }
                    ],
                    "ephemeral_storage": [
                        {
                            "size": 512
                        }
                    ],
                    "file_system_config": [],
                    "filename": null,
                    "function_name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "handler": "authorizer.handler",
                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "image_config": [],
                    "image_uri": "",
                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev/invocations",
                    "kms_key_arn": "",
                    "last_modified": "2022-06-24T15:49:38.328+0000",
                    "layers": [],
                    "memory_size": 128,
                    "package_type": "Zip",
                    "publish": false,
                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev:1",
                    "reserved_concurrent_executions": -1,
                    "role": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                    "runtime": "python3.9",
                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "s3_key": "dev/code/authorizer_lambda.zip",
                    "s3_object_version": null,
                    "signing_job_arn": "",
                    "signing_profile_version_arn": "",
                    "source_code_hash": "7S6q9KvQbQWy8ikISPqbnaoo3KS8l97oTtzhnX+9dZA=",
                    "source_code_size": 504,
                    "tags": {},
                    "tags_all": {},
                    "timeout": 3,
                    "timeouts": null,
                    "tracing_config": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "1",
                    "vpc_config": []
                },
                "after_unknown": {},
                "before_sensitive": {
                    "architectures": [
                        false
                    ],
                    "dead_letter_config": [],
                    "environment": [
                        {
                            "variables": {}
                        }
                    ],
                    "ephemeral_storage": [
                        {}
                    ],
                    "file_system_config": [],
                    "image_config": [],
                    "layers": [],
                    "tags": {},
                    "tags_all": {},
                    "tracing_config": [
                        {}
                    ],
                    "vpc_config": []
                },
                "after_sensitive": {
                    "architectures": [
                        false
                    ],
                    "dead_letter_config": [],
                    "environment": [
                        {
                            "variables": {}
                        }
                    ],
                    "ephemeral_storage": [
                        {}
                    ],
                    "file_system_config": [],
                    "image_config": [],
                    "layers": [],
                    "tags": {},
                    "tags_all": {},
                    "tracing_config": [
                        {}
                    ],
                    "vpc_config": []
                }
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_cloudwatch_log_group",
            "name": "lambda",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                    "id": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                    "kms_key_id": "",
                    "name": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "retention_in_days": 0,
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                    "id": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                    "kms_key_id": "",
                    "name": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "retention_in_days": 0,
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_iam_policy.logs[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "logs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                    "description": "",
                    "id": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                    "name": "create-instrument-68c9d996ee3b87f-dev-logs",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGWCZAM7Z6N",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                    "description": "",
                    "id": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                    "name": "create-instrument-68c9d996ee3b87f-dev-logs",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGWCZAM7Z6N",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_iam_role.lambda[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "lambda",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"},{\"Sid\":\"songwriter\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-24T23:29:30Z",
                    "description": "",
                    "force_detach_policies": true,
                    "id": "create-instrument-68c9d996ee3b87f-dev",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managed_policy_arns": [
                        "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                        "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev"
                    ],
                    "max_session_duration": 3600,
                    "name": "create-instrument-68c9d996ee3b87f-dev",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXG7FBAXX32N"
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"},{\"Sid\":\"songwriter\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-24T23:29:30Z",
                    "description": "",
                    "force_detach_policies": true,
                    "id": "create-instrument-68c9d996ee3b87f-dev",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managed_policy_arns": [
                        "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                        "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev"
                    ],
                    "max_session_duration": 3600,
                    "name": "create-instrument-68c9d996ee3b87f-dev",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXG7FBAXX32N"
                },
                "after_unknown": {},
                "before_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [
                        false,
                        false
                    ],
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [
                        false,
                        false
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_iam_role_policy_attachment.additional_many[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "additional_many",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931188300000002",
                    "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "role": "create-instrument-68c9d996ee3b87f-dev"
                },
                "after": {
                    "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931188300000002",
                    "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "role": "create-instrument-68c9d996ee3b87f-dev"
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_iam_role_policy_attachment.logs[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "logs",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931180300000001",
                    "policy_arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                    "role": "create-instrument-68c9d996ee3b87f-dev"
                },
                "after": {
                    "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931180300000001",
                    "policy_arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                    "role": "create-instrument-68c9d996ee3b87f-dev"
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_lambda_function",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "architectures": [
                        "x86_64"
                    ],
                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev",
                    "code_signing_config_arn": "",
                    "dead_letter_config": [],
                    "description": "",
                    "environment": [
                        {
                            "variables": {
                                "BUCKET": "noncommittalband.com-68c9d996ee3b87f",
                                "PART_TABLE": "Instrument-68c9d996ee3b87f-dev",
                                "SONG_TABLE": "Song-68c9d996ee3b87f-dev"
                            }
                        }
                    ],
                    "ephemeral_storage": [
                        {
                            "size": 512
                        }
                    ],
                    "file_system_config": [],
                    "filename": null,
                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                    "handler": "create_instrument.handler",
                    "id": "create-instrument-68c9d996ee3b87f-dev",
                    "image_config": [],
                    "image_uri": "",
                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations",
                    "kms_key_arn": "",
                    "last_modified": "2022-06-24T23:32:30.437+0000",
                    "layers": [],
                    "memory_size": 128,
                    "package_type": "Zip",
                    "publish": true,
                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev:1",
                    "reserved_concurrent_executions": -1,
                    "role": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                    "runtime": "python3.9",
                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "s3_key": "dev/code/create_instrument_lambda.zip",
                    "s3_object_version": null,
                    "signing_job_arn": "",
                    "signing_profile_version_arn": "",
                    "source_code_hash": "uSO0avvWlYE/aQL2KlnZ1PXxZ7On6rEiL0tF4Da0R/g=",
                    "source_code_size": 1150,
                    "tags": {},
                    "tags_all": {},
                    "timeout": 3,
                    "timeouts": null,
                    "tracing_config": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "1",
                    "vpc_config": []
                },
                "after": {
                    "architectures": [
                        "x86_64"
                    ],
                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev",
                    "code_signing_config_arn": "",
                    "dead_letter_config": [],
                    "description": "",
                    "environment": [
                        {
                            "variables": {
                                "BUCKET": "noncommittalband.com-68c9d996ee3b87f",
                                "PART_TABLE": "Instrument-68c9d996ee3b87f-dev",
                                "SONG_TABLE": "Song-68c9d996ee3b87f-dev"
                            }
                        }
                    ],
                    "ephemeral_storage": [
                        {
                            "size": 512
                        }
                    ],
                    "file_system_config": [],
                    "filename": null,
                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                    "handler": "create_instrument.handler",
                    "id": "create-instrument-68c9d996ee3b87f-dev",
                    "image_config": [],
                    "image_uri": "",
                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations",
                    "kms_key_arn": "",
                    "last_modified": "2022-06-24T23:32:30.437+0000",
                    "layers": [],
                    "memory_size": 128,
                    "package_type": "Zip",
                    "publish": true,
                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev:1",
                    "reserved_concurrent_executions": -1,
                    "role": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                    "runtime": "python3.9",
                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "s3_key": "dev/code/create_instrument_lambda.zip",
                    "s3_object_version": null,
                    "signing_job_arn": "",
                    "signing_profile_version_arn": "",
                    "source_code_hash": "uSO0avvWlYE/aQL2KlnZ1PXxZ7On6rEiL0tF4Da0R/g=",
                    "source_code_size": 1150,
                    "tags": {},
                    "tags_all": {},
                    "timeout": 3,
                    "timeouts": null,
                    "tracing_config": [
                        {
                            "mode": "PassThrough"
                        }
                    ],
                    "version": "1",
                    "vpc_config": []
                },
                "after_unknown": {},
                "before_sensitive": {
                    "architectures": [
                        false
                    ],
                    "dead_letter_config": [],
                    "environment": [
                        {
                            "variables": {}
                        }
                    ],
                    "ephemeral_storage": [
                        {}
                    ],
                    "file_system_config": [],
                    "image_config": [],
                    "layers": [],
                    "tags": {},
                    "tags_all": {},
                    "tracing_config": [
                        {}
                    ],
                    "vpc_config": []
                },
                "after_sensitive": {
                    "architectures": [
                        false
                    ],
                    "dead_letter_config": [],
                    "environment": [
                        {
                            "variables": {}
                        }
                    ],
                    "ephemeral_storage": [
                        {}
                    ],
                    "file_system_config": [],
                    "image_config": [],
                    "layers": [],
                    "tags": {},
                    "tags_all": {},
                    "tracing_config": [
                        {}
                    ],
                    "vpc_config": []
                }
            }
        },
        {
            "address": "module.create_instrument_lambda.aws_lambda_permission.current_version_triggers[\"devApiGateway\"]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_lambda_permission",
            "name": "current_version_triggers",
            "index": "devApiGateway",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "action": "lambda:InvokeFunction",
                    "event_source_token": null,
                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                    "function_url_auth_type": null,
                    "id": "devApiGateway",
                    "principal": "apigateway.amazonaws.com",
                    "principal_org_id": null,
                    "qualifier": "1",
                    "source_account": null,
                    "source_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/*",
                    "statement_id": "devApiGateway",
                    "statement_id_prefix": ""
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            },
            "action_reason": "delete_because_each_key"
        },
        {
            "address": "module.create_instrument_lambda.aws_lambda_permission.unqualified_alias_triggers[\"devApiGateway\"]",
            "module_address": "module.create_instrument_lambda",
            "mode": "managed",
            "type": "aws_lambda_permission",
            "name": "unqualified_alias_triggers",
            "index": "devApiGateway",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "delete"
                ],
                "before": {
                    "action": "lambda:InvokeFunction",
                    "event_source_token": null,
                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                    "function_url_auth_type": null,
                    "id": "devApiGateway",
                    "principal": "apigateway.amazonaws.com",
                    "principal_org_id": null,
                    "qualifier": "",
                    "source_account": null,
                    "source_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/*",
                    "statement_id": "devApiGateway",
                    "statement_id_prefix": ""
                },
                "after": null,
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": false
            },
            "action_reason": "delete_because_each_key"
        },
        {
            "address": "module.instrument_datastore.aws_dynamodb_table.this[0]",
            "module_address": "module.instrument_datastore",
            "mode": "managed",
            "type": "aws_dynamodb_table",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev",
                    "attribute": [
                        {
                            "name": "version",
                            "type": "S"
                        }
                    ],
                    "billing_mode": "PAY_PER_REQUEST",
                    "global_secondary_index": [],
                    "hash_key": "version",
                    "id": "Instrument-68c9d996ee3b87f-dev",
                    "local_secondary_index": [],
                    "name": "Instrument-68c9d996ee3b87f-dev",
                    "point_in_time_recovery": [
                        {
                            "enabled": false
                        }
                    ],
                    "range_key": null,
                    "read_capacity": 0,
                    "replica": [],
                    "restore_date_time": null,
                    "restore_source_name": null,
                    "restore_to_latest_time": null,
                    "server_side_encryption": [],
                    "stream_arn": "",
                    "stream_enabled": false,
                    "stream_label": "",
                    "stream_view_type": "",
                    "table_class": "",
                    "tags": {
                        "Name": "Instrument-68c9d996ee3b87f-dev"
                    },
                    "tags_all": {
                        "Name": "Instrument-68c9d996ee3b87f-dev"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "10m",
                        "update": "60m"
                    },
                    "ttl": [
                        {
                            "attribute_name": "",
                            "enabled": false
                        }
                    ],
                    "write_capacity": 0
                },
                "after": {
                    "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev",
                    "attribute": [
                        {
                            "name": "version",
                            "type": "S"
                        }
                    ],
                    "billing_mode": "PAY_PER_REQUEST",
                    "global_secondary_index": [],
                    "hash_key": "version",
                    "id": "Instrument-68c9d996ee3b87f-dev",
                    "local_secondary_index": [],
                    "name": "Instrument-68c9d996ee3b87f-dev",
                    "point_in_time_recovery": [
                        {
                            "enabled": false
                        }
                    ],
                    "range_key": null,
                    "read_capacity": 0,
                    "replica": [],
                    "restore_date_time": null,
                    "restore_source_name": null,
                    "restore_to_latest_time": null,
                    "server_side_encryption": [],
                    "stream_arn": "",
                    "stream_enabled": false,
                    "stream_label": "",
                    "stream_view_type": "",
                    "table_class": "",
                    "tags": {
                        "Name": "Instrument-68c9d996ee3b87f-dev"
                    },
                    "tags_all": {
                        "Name": "Instrument-68c9d996ee3b87f-dev"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "10m",
                        "update": "60m"
                    },
                    "ttl": [
                        {
                            "attribute_name": "",
                            "enabled": false
                        }
                    ],
                    "write_capacity": 0
                },
                "after_unknown": {},
                "before_sensitive": {
                    "attribute": [
                        {}
                    ],
                    "global_secondary_index": [],
                    "local_secondary_index": [],
                    "point_in_time_recovery": [
                        {}
                    ],
                    "replica": [],
                    "server_side_encryption": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "ttl": [
                        {}
                    ]
                },
                "after_sensitive": {
                    "attribute": [
                        {}
                    ],
                    "global_secondary_index": [],
                    "local_secondary_index": [],
                    "point_in_time_recovery": [
                        {}
                    ],
                    "replica": [],
                    "server_side_encryption": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "ttl": [
                        {}
                    ]
                }
            }
        },
        {
            "address": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "module_address": "module.instrument_writer_policy",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "policy",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "description": "Allows writing instrument data to S3",
                    "id": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "name": "instrument-writer-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f\"]}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGYFES5CC5Q",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "description": "Allows writing instrument data to S3",
                    "id": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "name": "instrument-writer-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f\"]}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGYFES5CC5Q",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.song_datastore.aws_dynamodb_table.this[0]",
            "module_address": "module.song_datastore",
            "mode": "managed",
            "type": "aws_dynamodb_table",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev",
                    "attribute": [
                        {
                            "name": "instrumentId",
                            "type": "S"
                        },
                        {
                            "name": "name",
                            "type": "S"
                        }
                    ],
                    "billing_mode": "PAY_PER_REQUEST",
                    "global_secondary_index": [],
                    "hash_key": "name",
                    "id": "Song-68c9d996ee3b87f-dev",
                    "local_secondary_index": [],
                    "name": "Song-68c9d996ee3b87f-dev",
                    "point_in_time_recovery": [
                        {
                            "enabled": false
                        }
                    ],
                    "range_key": "instrumentId",
                    "read_capacity": 0,
                    "replica": [],
                    "restore_date_time": null,
                    "restore_source_name": null,
                    "restore_to_latest_time": null,
                    "server_side_encryption": [],
                    "stream_arn": "",
                    "stream_enabled": false,
                    "stream_label": "",
                    "stream_view_type": "",
                    "table_class": "",
                    "tags": {
                        "Name": "Song-68c9d996ee3b87f-dev"
                    },
                    "tags_all": {
                        "Name": "Song-68c9d996ee3b87f-dev"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "10m",
                        "update": "60m"
                    },
                    "ttl": [
                        {
                            "attribute_name": "",
                            "enabled": false
                        }
                    ],
                    "write_capacity": 0
                },
                "after": {
                    "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev",
                    "attribute": [
                        {
                            "name": "instrumentId",
                            "type": "S"
                        },
                        {
                            "name": "name",
                            "type": "S"
                        }
                    ],
                    "billing_mode": "PAY_PER_REQUEST",
                    "global_secondary_index": [],
                    "hash_key": "name",
                    "id": "Song-68c9d996ee3b87f-dev",
                    "local_secondary_index": [],
                    "name": "Song-68c9d996ee3b87f-dev",
                    "point_in_time_recovery": [
                        {
                            "enabled": false
                        }
                    ],
                    "range_key": "instrumentId",
                    "read_capacity": 0,
                    "replica": [],
                    "restore_date_time": null,
                    "restore_source_name": null,
                    "restore_to_latest_time": null,
                    "server_side_encryption": [],
                    "stream_arn": "",
                    "stream_enabled": false,
                    "stream_label": "",
                    "stream_view_type": "",
                    "table_class": "",
                    "tags": {
                        "Name": "Song-68c9d996ee3b87f-dev"
                    },
                    "tags_all": {
                        "Name": "Song-68c9d996ee3b87f-dev"
                    },
                    "timeouts": {
                        "create": "10m",
                        "delete": "10m",
                        "update": "60m"
                    },
                    "ttl": [
                        {
                            "attribute_name": "",
                            "enabled": false
                        }
                    ],
                    "write_capacity": 0
                },
                "after_unknown": {},
                "before_sensitive": {
                    "attribute": [
                        {},
                        {}
                    ],
                    "global_secondary_index": [],
                    "local_secondary_index": [],
                    "point_in_time_recovery": [
                        {}
                    ],
                    "replica": [],
                    "server_side_encryption": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "ttl": [
                        {}
                    ]
                },
                "after_sensitive": {
                    "attribute": [
                        {},
                        {}
                    ],
                    "global_secondary_index": [],
                    "local_secondary_index": [],
                    "point_in_time_recovery": [
                        {}
                    ],
                    "replica": [],
                    "server_side_encryption": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "ttl": [
                        {}
                    ]
                }
            }
        },
        {
            "address": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "module_address": "module.song_writer_policy",
            "mode": "managed",
            "type": "aws_iam_policy",
            "name": "policy",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                    "description": "Allows writing Songs to DynamoDB",
                    "id": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                    "name": "song-writer-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:PutItem\",\"dynamodb:GetItem\",\"dynamodb:Query\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev\",\"arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev\"]}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGZVYTV32BS",
                    "tags": {},
                    "tags_all": {}
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                    "description": "Allows writing Songs to DynamoDB",
                    "id": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                    "name": "song-writer-68c9d996ee3b87f-dev",
                    "name_prefix": null,
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:PutItem\",\"dynamodb:GetItem\",\"dynamodb:Query\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev\",\"arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev\"]}],\"Version\":\"2012-10-17\"}",
                    "policy_id": "ANPAYSBEZFXGZVYTV32BS",
                    "tags": {},
                    "tags_all": {}
                },
                "after_unknown": {},
                "before_sensitive": {
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.song_writer_role.aws_iam_role.this[0]",
            "module_address": "module.song_writer_role",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "arn": "arn:aws:iam::588487667149:role/song-writer-68c9d996ee3b87f-dev",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-19T04:10:09Z",
                    "description": "",
                    "force_detach_policies": false,
                    "id": "song-writer-68c9d996ee3b87f-dev",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managed_policy_arns": [
                        "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                        "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    ],
                    "max_session_duration": 3600,
                    "name": "song-writer-68c9d996ee3b87f-dev",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": "",
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXGQYCMMFJ26"
                },
                "after": {
                    "arn": "arn:aws:iam::588487667149:role/song-writer-68c9d996ee3b87f-dev",
                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "create_date": "2022-06-19T04:10:09Z",
                    "description": "",
                    "force_detach_policies": false,
                    "id": "song-writer-68c9d996ee3b87f-dev",
                    "inline_policy": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managed_policy_arns": [
                        "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                        "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                    ],
                    "max_session_duration": 3600,
                    "name": "song-writer-68c9d996ee3b87f-dev",
                    "name_prefix": "",
                    "path": "/",
                    "permissions_boundary": "",
                    "tags": {},
                    "tags_all": {},
                    "unique_id": "AROAYSBEZFXGQYCMMFJ26"
                },
                "after_unknown": {},
                "before_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [
                        false,
                        false,
                        false
                    ],
                    "tags": {},
                    "tags_all": {}
                },
                "after_sensitive": {
                    "inline_policy": [
                        {}
                    ],
                    "managed_policy_arns": [
                        false,
                        false,
                        false
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[0]",
            "module_address": "module.song_writer_role",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "custom",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041010241100000002",
                    "policy_arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                    "role": "song-writer-68c9d996ee3b87f-dev"
                },
                "after": {
                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041010241100000002",
                    "policy_arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                    "role": "song-writer-68c9d996ee3b87f-dev"
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[1]",
            "module_address": "module.song_writer_role",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "custom",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041010125200000001",
                    "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "role": "song-writer-68c9d996ee3b87f-dev"
                },
                "after": {
                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041010125200000001",
                    "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                    "role": "song-writer-68c9d996ee3b87f-dev"
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[2]",
            "module_address": "module.song_writer_role",
            "mode": "managed",
            "type": "aws_iam_role_policy_attachment",
            "name": "custom",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041513778300000001",
                    "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "role": "song-writer-68c9d996ee3b87f-dev"
                },
                "after": {
                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041513778300000001",
                    "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "role": "song-writer-68c9d996ee3b87f-dev"
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.storage.aws_s3_bucket.this[0]",
            "module_address": "module.storage",
            "mode": "managed",
            "type": "aws_s3_bucket",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "acceleration_status": "",
                    "acl": null,
                    "arn": "arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f",
                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "bucket_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.amazonaws.com",
                    "bucket_prefix": null,
                    "bucket_regional_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.us-west-2.amazonaws.com",
                    "cors_rule": [],
                    "force_destroy": true,
                    "grant": [
                        {
                            "id": "1c6a184b086f944a317d716b5e7df457190ba4b77bf0b21ef9975628d2d3f8ac",
                            "permissions": [
                                "FULL_CONTROL"
                            ],
                            "type": "CanonicalUser",
                            "uri": ""
                        }
                    ],
                    "hosted_zone_id": "Z3BJ6K6RIION7M",
                    "id": "noncommittalband.com-68c9d996ee3b87f",
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "object_lock_enabled": false,
                    "policy": "",
                    "region": "us-west-2",
                    "replication_configuration": [],
                    "request_payer": "BucketOwner",
                    "server_side_encryption_configuration": [],
                    "tags": {},
                    "tags_all": {},
                    "versioning": [
                        {
                            "enabled": true,
                            "mfa_delete": false
                        }
                    ],
                    "website": [],
                    "website_domain": null,
                    "website_endpoint": null
                },
                "after": {
                    "acceleration_status": "",
                    "acl": null,
                    "arn": "arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f",
                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "bucket_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.amazonaws.com",
                    "bucket_prefix": null,
                    "bucket_regional_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.us-west-2.amazonaws.com",
                    "cors_rule": [],
                    "force_destroy": true,
                    "grant": [
                        {
                            "id": "1c6a184b086f944a317d716b5e7df457190ba4b77bf0b21ef9975628d2d3f8ac",
                            "permissions": [
                                "FULL_CONTROL"
                            ],
                            "type": "CanonicalUser",
                            "uri": ""
                        }
                    ],
                    "hosted_zone_id": "Z3BJ6K6RIION7M",
                    "id": "noncommittalband.com-68c9d996ee3b87f",
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "object_lock_enabled": false,
                    "policy": "",
                    "region": "us-west-2",
                    "replication_configuration": [],
                    "request_payer": "BucketOwner",
                    "server_side_encryption_configuration": [],
                    "tags": {},
                    "tags_all": {},
                    "versioning": [
                        {
                            "enabled": true,
                            "mfa_delete": false
                        }
                    ],
                    "website": [],
                    "website_domain": null,
                    "website_endpoint": null
                },
                "after_unknown": {},
                "before_sensitive": {
                    "cors_rule": [],
                    "grant": [
                        {
                            "permissions": [
                                false
                            ]
                        }
                    ],
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "replication_configuration": [],
                    "server_side_encryption_configuration": [],
                    "tags": {},
                    "tags_all": {},
                    "versioning": [
                        {}
                    ],
                    "website": []
                },
                "after_sensitive": {
                    "cors_rule": [],
                    "grant": [
                        {
                            "permissions": [
                                false
                            ]
                        }
                    ],
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "replication_configuration": [],
                    "server_side_encryption_configuration": [],
                    "tags": {},
                    "tags_all": {},
                    "versioning": [
                        {}
                    ],
                    "website": []
                }
            }
        },
        {
            "address": "module.storage.aws_s3_bucket_public_access_block.this[0]",
            "module_address": "module.storage",
            "mode": "managed",
            "type": "aws_s3_bucket_public_access_block",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "block_public_acls": false,
                    "block_public_policy": false,
                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "id": "noncommittalband.com-68c9d996ee3b87f",
                    "ignore_public_acls": false,
                    "restrict_public_buckets": false
                },
                "after": {
                    "block_public_acls": false,
                    "block_public_policy": false,
                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "id": "noncommittalband.com-68c9d996ee3b87f",
                    "ignore_public_acls": false,
                    "restrict_public_buckets": false
                },
                "after_unknown": {},
                "before_sensitive": {},
                "after_sensitive": {}
            }
        },
        {
            "address": "module.storage.aws_s3_bucket_versioning.this[0]",
            "module_address": "module.storage",
            "mode": "managed",
            "type": "aws_s3_bucket_versioning",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "no-op"
                ],
                "before": {
                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "expected_bucket_owner": "",
                    "id": "noncommittalband.com-68c9d996ee3b87f",
                    "mfa": null,
                    "versioning_configuration": [
                        {
                            "mfa_delete": "",
                            "status": "Enabled"
                        }
                    ]
                },
                "after": {
                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                    "expected_bucket_owner": "",
                    "id": "noncommittalband.com-68c9d996ee3b87f",
                    "mfa": null,
                    "versioning_configuration": [
                        {
                            "mfa_delete": "",
                            "status": "Enabled"
                        }
                    ]
                },
                "after_unknown": {},
                "before_sensitive": {
                    "versioning_configuration": [
                        {}
                    ]
                },
                "after_sensitive": {
                    "versioning_configuration": [
                        {}
                    ]
                }
            }
        }
    ],
    "prior_state": {
        "format_version": "1.0",
        "terraform_version": "1.3.6",
        "values": {
            "root_module": {
                "resources": [
                    {
                        "address": "aws_api_gateway_authorizer.authorizer",
                        "mode": "managed",
                        "type": "aws_api_gateway_authorizer",
                        "name": "authorizer",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15/authorizers/p9pol1",
                            "authorizer_credentials": "arn:aws:iam::588487667149:role/nomcomittal-api-caller",
                            "authorizer_result_ttl_in_seconds": 300,
                            "authorizer_uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev/invocations",
                            "id": "p9pol1",
                            "identity_source": "method.request.header.Authorization",
                            "identity_validation_expression": "",
                            "name": "authorizer",
                            "provider_arns": [],
                            "rest_api_id": "8gjfakaw15",
                            "type": "TOKEN"
                        },
                        "sensitive_values": {
                            "provider_arns": []
                        },
                        "depends_on": [
                            "aws_api_gateway_rest_api.noncommittal_band",
                            "aws_iam_role.authorized_api_caller",
                            "module.api_authorizer.aws_cloudwatch_log_group.lambda",
                            "module.api_authorizer.aws_iam_role.lambda",
                            "module.api_authorizer.aws_lambda_function.this",
                            "module.api_authorizer.aws_s3_object.lambda_package",
                            "module.api_authorizer.data.aws_iam_policy_document.assume_role",
                            "module.api_authorizer.data.external.archive_prepare",
                            "module.api_authorizer.local_file.archive_plan",
                            "module.api_authorizer.null_resource.archive",
                            "module.storage.aws_s3_bucket.this",
                            "module.storage.aws_s3_bucket_policy.this",
                            "module.storage.data.aws_elb_service_account.this",
                            "module.storage.data.aws_iam_policy_document.combined",
                            "module.storage.data.aws_iam_policy_document.deny_insecure_transport",
                            "module.storage.data.aws_iam_policy_document.elb_log_delivery",
                            "module.storage.data.aws_iam_policy_document.lb_log_delivery",
                            "module.storage.data.aws_iam_policy_document.require_latest_tls"
                        ]
                    },
                    {
                        "address": "aws_api_gateway_deployment.dev",
                        "mode": "managed",
                        "type": "aws_api_gateway_deployment",
                        "name": "dev",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "created_date": "2022-06-24T14:39:17Z",
                            "description": "",
                            "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/",
                            "id": "594yf4",
                            "invoke_url": "https://8gjfakaw15.execute-api.us-west-2.amazonaws.com/",
                            "rest_api_id": "8gjfakaw15",
                            "stage_description": null,
                            "stage_name": null,
                            "triggers": null,
                            "variables": null
                        },
                        "sensitive_values": {},
                        "depends_on": [
                            "aws_api_gateway_rest_api.noncommittal_band"
                        ]
                    },
                    {
                        "address": "aws_api_gateway_integration.post_instruments",
                        "mode": "managed",
                        "type": "aws_api_gateway_integration",
                        "name": "post_instruments",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "cache_key_parameters": [],
                            "cache_namespace": "o9pfv5",
                            "connection_id": "",
                            "connection_type": "INTERNET",
                            "content_handling": "",
                            "credentials": "",
                            "http_method": "POST",
                            "id": "agi-8gjfakaw15-o9pfv5-POST",
                            "integration_http_method": "POST",
                            "passthrough_behavior": "WHEN_NO_MATCH",
                            "request_parameters": {},
                            "request_templates": {},
                            "resource_id": "o9pfv5",
                            "rest_api_id": "8gjfakaw15",
                            "timeout_milliseconds": 29000,
                            "tls_config": [],
                            "type": "AWS_PROXY",
                            "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations"
                        },
                        "sensitive_values": {
                            "cache_key_parameters": [],
                            "request_parameters": {},
                            "request_templates": {},
                            "tls_config": []
                        },
                        "depends_on": [
                            "aws_api_gateway_method.post_instruments",
                            "aws_api_gateway_resource.instruments",
                            "aws_api_gateway_rest_api.noncommittal_band",
                            "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda",
                            "module.create_instrument_lambda.aws_iam_role.lambda",
                            "module.create_instrument_lambda.aws_lambda_function.this",
                            "module.create_instrument_lambda.aws_s3_object.lambda_package",
                            "module.create_instrument_lambda.data.external.archive_prepare",
                            "module.create_instrument_lambda.null_resource.archive",
                            "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                            "module.instrument_datastore.aws_dynamodb_table.this",
                            "module.song_datastore.aws_dynamodb_table.autoscaled",
                            "module.song_datastore.aws_dynamodb_table.this",
                            "module.storage.aws_s3_bucket.this",
                            "module.storage.aws_s3_bucket_policy.this"
                        ]
                    },
                    {
                        "address": "aws_api_gateway_method.post_instruments",
                        "mode": "managed",
                        "type": "aws_api_gateway_method",
                        "name": "post_instruments",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "api_key_required": false,
                            "authorization": "CUSTOM",
                            "authorization_scopes": [],
                            "authorizer_id": "p9pol1",
                            "http_method": "POST",
                            "id": "agm-8gjfakaw15-o9pfv5-POST",
                            "operation_name": "",
                            "request_models": {},
                            "request_parameters": {},
                            "request_validator_id": "",
                            "resource_id": "o9pfv5",
                            "rest_api_id": "8gjfakaw15"
                        },
                        "sensitive_values": {
                            "authorization_scopes": [],
                            "request_models": {},
                            "request_parameters": {}
                        },
                        "depends_on": [
                            "aws_api_gateway_authorizer.authorizer",
                            "aws_api_gateway_resource.instruments",
                            "aws_api_gateway_rest_api.noncommittal_band",
                            "aws_iam_role.authorized_api_caller",
                            "module.api_authorizer.aws_cloudwatch_log_group.lambda",
                            "module.api_authorizer.aws_iam_role.lambda",
                            "module.api_authorizer.aws_lambda_function.this",
                            "module.api_authorizer.aws_s3_object.lambda_package",
                            "module.api_authorizer.data.aws_iam_policy_document.assume_role",
                            "module.api_authorizer.data.external.archive_prepare",
                            "module.api_authorizer.local_file.archive_plan",
                            "module.api_authorizer.null_resource.archive",
                            "module.storage.aws_s3_bucket.this",
                            "module.storage.aws_s3_bucket_policy.this",
                            "module.storage.data.aws_elb_service_account.this",
                            "module.storage.data.aws_iam_policy_document.combined",
                            "module.storage.data.aws_iam_policy_document.deny_insecure_transport",
                            "module.storage.data.aws_iam_policy_document.elb_log_delivery",
                            "module.storage.data.aws_iam_policy_document.lb_log_delivery",
                            "module.storage.data.aws_iam_policy_document.require_latest_tls"
                        ]
                    },
                    {
                        "address": "aws_api_gateway_resource.instruments",
                        "mode": "managed",
                        "type": "aws_api_gateway_resource",
                        "name": "instruments",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "id": "o9pfv5",
                            "parent_id": "xazszpcr0m",
                            "path": "/instruments",
                            "path_part": "instruments",
                            "rest_api_id": "8gjfakaw15"
                        },
                        "sensitive_values": {},
                        "depends_on": [
                            "aws_api_gateway_rest_api.noncommittal_band"
                        ]
                    },
                    {
                        "address": "aws_api_gateway_rest_api.noncommittal_band",
                        "mode": "managed",
                        "type": "aws_api_gateway_rest_api",
                        "name": "noncommittal_band",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "api_key_source": "HEADER",
                            "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15",
                            "binary_media_types": [],
                            "body": null,
                            "created_date": "2022-06-23T23:37:23Z",
                            "description": "",
                            "disable_execute_api_endpoint": false,
                            "endpoint_configuration": [
                                {
                                    "types": [
                                        "EDGE"
                                    ],
                                    "vpc_endpoint_ids": []
                                }
                            ],
                            "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15",
                            "id": "8gjfakaw15",
                            "minimum_compression_size": -1,
                            "name": "noncommittal-band-68c9d996ee3b87f-dev",
                            "parameters": null,
                            "policy": "",
                            "root_resource_id": "xazszpcr0m",
                            "tags": {},
                            "tags_all": {}
                        },
                        "sensitive_values": {
                            "binary_media_types": [],
                            "endpoint_configuration": [
                                {
                                    "types": [
                                        false
                                    ],
                                    "vpc_endpoint_ids": []
                                }
                            ],
                            "tags": {},
                            "tags_all": {}
                        }
                    },
                    {
                        "address": "aws_api_gateway_stage.dev",
                        "mode": "managed",
                        "type": "aws_api_gateway_stage",
                        "name": "dev",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "access_log_settings": [],
                            "arn": "arn:aws:apigateway:us-west-2::/restapis/8gjfakaw15/stages/dev",
                            "cache_cluster_enabled": false,
                            "cache_cluster_size": "",
                            "canary_settings": [],
                            "client_certificate_id": "",
                            "deployment_id": "n9w5u5",
                            "description": "",
                            "documentation_version": "",
                            "execution_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/dev",
                            "id": "ags-8gjfakaw15-dev",
                            "invoke_url": "https://8gjfakaw15.execute-api.us-west-2.amazonaws.com/dev",
                            "rest_api_id": "8gjfakaw15",
                            "stage_name": "dev",
                            "tags": {},
                            "tags_all": {},
                            "variables": {},
                            "web_acl_arn": "",
                            "xray_tracing_enabled": false
                        },
                        "sensitive_values": {
                            "access_log_settings": [],
                            "canary_settings": [],
                            "tags": {},
                            "tags_all": {},
                            "variables": {}
                        },
                        "depends_on": [
                            "aws_api_gateway_deployment.dev",
                            "aws_api_gateway_rest_api.noncommittal_band"
                        ]
                    },
                    {
                        "address": "aws_iam_role.authorized_api_caller",
                        "mode": "managed",
                        "type": "aws_iam_role",
                        "name": "authorized_api_caller",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                            "arn": "arn:aws:iam::588487667149:role/nomcomittal-api-caller",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2022-06-23T23:39:28Z",
                            "description": "",
                            "force_detach_policies": false,
                            "id": "nomcomittal-api-caller",
                            "inline_policy": [
                                {
                                    "name": "authorized-api-calls",
                                    "policy": "{\"Statement\":[{\"Action\":[\"lambda:InvokeFunction\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev\"}],\"Version\":\"2012-10-17\"}"
                                }
                            ],
                            "managed_policy_arns": [],
                            "max_session_duration": 3600,
                            "name": "nomcomittal-api-caller",
                            "name_prefix": "",
                            "path": "/",
                            "permissions_boundary": null,
                            "tags": {},
                            "tags_all": {},
                            "unique_id": "AROAYSBEZFXG72GJMA5P3"
                        },
                        "sensitive_values": {
                            "inline_policy": [
                                {}
                            ],
                            "managed_policy_arns": [],
                            "tags": {},
                            "tags_all": {}
                        },
                        "depends_on": [
                            "module.api_authorizer.aws_cloudwatch_log_group.lambda",
                            "module.api_authorizer.aws_iam_role.lambda",
                            "module.api_authorizer.aws_lambda_function.this",
                            "module.api_authorizer.aws_s3_object.lambda_package",
                            "module.api_authorizer.data.aws_iam_policy_document.assume_role",
                            "module.api_authorizer.data.external.archive_prepare",
                            "module.api_authorizer.local_file.archive_plan",
                            "module.api_authorizer.null_resource.archive",
                            "module.storage.aws_s3_bucket.this",
                            "module.storage.aws_s3_bucket_policy.this",
                            "module.storage.data.aws_elb_service_account.this",
                            "module.storage.data.aws_iam_policy_document.combined",
                            "module.storage.data.aws_iam_policy_document.deny_insecure_transport",
                            "module.storage.data.aws_iam_policy_document.elb_log_delivery",
                            "module.storage.data.aws_iam_policy_document.lb_log_delivery",
                            "module.storage.data.aws_iam_policy_document.require_latest_tls"
                        ]
                    }
                ],
                "child_modules": [
                    {
                        "resources": [
                            {
                                "address": "module.api_authorizer.aws_cloudwatch_log_group.lambda[0]",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "lambda",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "id": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "kms_key_id": "",
                                    "name": "/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "name_prefix": null,
                                    "retention_in_days": 0,
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.api_authorizer.aws_iam_policy.logs[0]",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "logs",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                    "description": "",
                                    "id": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                    "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                    "name_prefix": null,
                                    "path": "/",
                                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                                    "policy_id": "ANPAYSBEZFXGSXRTXKD2Q",
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.api_authorizer.aws_cloudwatch_log_group.lambda",
                                    "module.api_authorizer.data.aws_arn.log_group_arn",
                                    "module.api_authorizer.data.aws_cloudwatch_log_group.lambda",
                                    "module.api_authorizer.data.aws_iam_policy_document.logs"
                                ]
                            },
                            {
                                "address": "module.api_authorizer.aws_iam_role.lambda[0]",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "lambda",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                                    "create_date": "2022-06-23T23:37:22Z",
                                    "description": "",
                                    "force_detach_policies": true,
                                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "inline_policy": [
                                        {
                                            "name": "",
                                            "policy": ""
                                        }
                                    ],
                                    "managed_policy_arns": [
                                        "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs"
                                    ],
                                    "max_session_duration": 3600,
                                    "name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "name_prefix": "",
                                    "path": "/",
                                    "permissions_boundary": null,
                                    "tags": {},
                                    "tags_all": {},
                                    "unique_id": "AROAYSBEZFXG6WSDO4BGG"
                                },
                                "sensitive_values": {
                                    "inline_policy": [
                                        {}
                                    ],
                                    "managed_policy_arns": [
                                        false
                                    ],
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.api_authorizer.data.aws_iam_policy_document.assume_role"
                                ]
                            },
                            {
                                "address": "module.api_authorizer.aws_iam_role_policy_attachment.logs[0]",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "logs",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev-20220623233723598900000001",
                                    "policy_arn": "arn:aws:iam::588487667149:policy/noncommittal-api-authorizer-68c9d996ee3b87f-dev-logs",
                                    "role": "noncommittal-api-authorizer-68c9d996ee3b87f-dev"
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.api_authorizer.aws_cloudwatch_log_group.lambda",
                                    "module.api_authorizer.aws_iam_policy.logs",
                                    "module.api_authorizer.aws_iam_role.lambda",
                                    "module.api_authorizer.data.aws_arn.log_group_arn",
                                    "module.api_authorizer.data.aws_cloudwatch_log_group.lambda",
                                    "module.api_authorizer.data.aws_iam_policy_document.assume_role",
                                    "module.api_authorizer.data.aws_iam_policy_document.logs"
                                ]
                            },
                            {
                                "address": "module.api_authorizer.aws_lambda_function.this[0]",
                                "mode": "managed",
                                "type": "aws_lambda_function",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "architectures": [
                                        "x86_64"
                                    ],
                                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "code_signing_config_arn": "",
                                    "dead_letter_config": [],
                                    "description": "",
                                    "environment": [
                                        {
                                            "variables": {
                                                "PSK": "Dev999PSK"
                                            }
                                        }
                                    ],
                                    "ephemeral_storage": [
                                        {
                                            "size": 512
                                        }
                                    ],
                                    "file_system_config": [],
                                    "filename": null,
                                    "function_name": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "handler": "authorizer.handler",
                                    "id": "noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "image_config": [],
                                    "image_uri": "",
                                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev/invocations",
                                    "kms_key_arn": "",
                                    "last_modified": "2022-06-24T15:49:38.328+0000",
                                    "layers": [],
                                    "memory_size": 128,
                                    "package_type": "Zip",
                                    "publish": false,
                                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:noncommittal-api-authorizer-68c9d996ee3b87f-dev:1",
                                    "reserved_concurrent_executions": -1,
                                    "role": "arn:aws:iam::588487667149:role/noncommittal-api-authorizer-68c9d996ee3b87f-dev",
                                    "runtime": "python3.9",
                                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                                    "s3_key": "dev/code/authorizer_lambda.zip",
                                    "s3_object_version": null,
                                    "signing_job_arn": "",
                                    "signing_profile_version_arn": "",
                                    "source_code_hash": "7S6q9KvQbQWy8ikISPqbnaoo3KS8l97oTtzhnX+9dZA=",
                                    "source_code_size": 504,
                                    "tags": {},
                                    "tags_all": {},
                                    "timeout": 3,
                                    "timeouts": null,
                                    "tracing_config": [
                                        {
                                            "mode": "PassThrough"
                                        }
                                    ],
                                    "version": "1",
                                    "vpc_config": []
                                },
                                "sensitive_values": {
                                    "architectures": [
                                        false
                                    ],
                                    "dead_letter_config": [],
                                    "environment": [
                                        {
                                            "variables": {}
                                        }
                                    ],
                                    "ephemeral_storage": [
                                        {}
                                    ],
                                    "file_system_config": [],
                                    "image_config": [],
                                    "layers": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "tracing_config": [
                                        {}
                                    ],
                                    "vpc_config": []
                                },
                                "depends_on": [
                                    "module.api_authorizer.aws_cloudwatch_log_group.lambda",
                                    "module.api_authorizer.aws_iam_role.lambda",
                                    "module.api_authorizer.aws_s3_object.lambda_package",
                                    "module.api_authorizer.data.aws_iam_policy_document.assume_role",
                                    "module.api_authorizer.data.external.archive_prepare",
                                    "module.api_authorizer.local_file.archive_plan",
                                    "module.api_authorizer.null_resource.archive",
                                    "module.storage.aws_s3_bucket.this",
                                    "module.storage.aws_s3_bucket_policy.this",
                                    "module.storage.data.aws_elb_service_account.this",
                                    "module.storage.data.aws_iam_policy_document.combined",
                                    "module.storage.data.aws_iam_policy_document.deny_insecure_transport",
                                    "module.storage.data.aws_iam_policy_document.elb_log_delivery",
                                    "module.storage.data.aws_iam_policy_document.lb_log_delivery",
                                    "module.storage.data.aws_iam_policy_document.require_latest_tls"
                                ]
                            },
                            {
                                "address": "module.api_authorizer.data.aws_iam_policy_document.assume_role[0]",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "3693445097",
                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                    "override_json": null,
                                    "override_policy_documents": null,
                                    "policy_id": null,
                                    "source_json": null,
                                    "source_policy_documents": null,
                                    "statement": [
                                        {
                                            "actions": [
                                                "sts:AssumeRole"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        "lambda.amazonaws.com"
                                                    ],
                                                    "type": "Service"
                                                }
                                            ],
                                            "resources": [],
                                            "sid": ""
                                        }
                                    ],
                                    "version": "2012-10-17"
                                },
                                "sensitive_values": {
                                    "statement": [
                                        {
                                            "actions": [
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "resources": []
                                        }
                                    ]
                                }
                            },
                            {
                                "address": "module.api_authorizer.data.aws_iam_policy_document.logs[0]",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "logs",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "638838382",
                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*:*\",\n        \"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*\"\n      ]\n    }\n  ]\n}",
                                    "override_json": null,
                                    "override_policy_documents": null,
                                    "policy_id": null,
                                    "source_json": null,
                                    "source_policy_documents": null,
                                    "statement": [
                                        {
                                            "actions": [
                                                "logs:CreateLogGroup",
                                                "logs:CreateLogStream",
                                                "logs:PutLogEvents"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [],
                                            "resources": [
                                                "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*",
                                                "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/noncommittal-api-authorizer-68c9d996ee3b87f-dev:*:*"
                                            ],
                                            "sid": ""
                                        }
                                    ],
                                    "version": "2012-10-17"
                                },
                                "sensitive_values": {
                                    "statement": [
                                        {
                                            "actions": [
                                                false,
                                                false,
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [],
                                            "resources": [
                                                false,
                                                false
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "address": "module.api_authorizer.data.aws_partition.current",
                                "mode": "data",
                                "type": "aws_partition",
                                "name": "current",
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "dns_suffix": "amazonaws.com",
                                    "id": "aws",
                                    "partition": "aws",
                                    "reverse_dns_prefix": "com.amazonaws"
                                },
                                "sensitive_values": {}
                            }
                        ],
                        "address": "module.api_authorizer"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda[0]",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "lambda",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                                    "id": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                                    "kms_key_id": "",
                                    "name": "/aws/lambda/create-instrument-68c9d996ee3b87f-dev",
                                    "name_prefix": null,
                                    "retention_in_days": 0,
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                }
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_iam_policy.logs[0]",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "logs",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                    "description": "",
                                    "id": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                    "name": "create-instrument-68c9d996ee3b87f-dev-logs",
                                    "name_prefix": null,
                                    "path": "/",
                                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogStream\",\"logs:CreateLogGroup\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*:*\",\"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*\"],\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
                                    "policy_id": "ANPAYSBEZFXGWCZAM7Z6N",
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.data.aws_arn.log_group_arn",
                                    "module.create_instrument_lambda.data.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.data.aws_iam_policy_document.logs"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_iam_role.lambda[0]",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "lambda",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"},{\"Sid\":\"songwriter\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                                    "create_date": "2022-06-24T23:29:30Z",
                                    "description": "",
                                    "force_detach_policies": true,
                                    "id": "create-instrument-68c9d996ee3b87f-dev",
                                    "inline_policy": [
                                        {
                                            "name": "",
                                            "policy": ""
                                        }
                                    ],
                                    "managed_policy_arns": [
                                        "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                        "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev"
                                    ],
                                    "max_session_duration": 3600,
                                    "name": "create-instrument-68c9d996ee3b87f-dev",
                                    "name_prefix": "",
                                    "path": "/",
                                    "permissions_boundary": null,
                                    "tags": {},
                                    "tags_all": {},
                                    "unique_id": "AROAYSBEZFXG7FBAXX32N"
                                },
                                "sensitive_values": {
                                    "inline_policy": [
                                        {}
                                    ],
                                    "managed_policy_arns": [
                                        false,
                                        false
                                    ],
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.create_instrument_lambda.data.aws_iam_policy_document.assume_role"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_iam_role_policy_attachment.additional_many[0]",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_many",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931188300000002",
                                    "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                    "role": "create-instrument-68c9d996ee3b87f-dev"
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.create_instrument_lambda.aws_iam_role.lambda",
                                    "module.create_instrument_lambda.data.aws_iam_policy_document.assume_role",
                                    "module.instrument_writer_policy.aws_iam_policy.policy",
                                    "module.storage.aws_s3_bucket.this"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_iam_role_policy_attachment.logs[0]",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "logs",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "create-instrument-68c9d996ee3b87f-dev-20220624232931180300000001",
                                    "policy_arn": "arn:aws:iam::588487667149:policy/create-instrument-68c9d996ee3b87f-dev-logs",
                                    "role": "create-instrument-68c9d996ee3b87f-dev"
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.aws_iam_policy.logs",
                                    "module.create_instrument_lambda.aws_iam_role.lambda",
                                    "module.create_instrument_lambda.data.aws_arn.log_group_arn",
                                    "module.create_instrument_lambda.data.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.data.aws_iam_policy_document.assume_role",
                                    "module.create_instrument_lambda.data.aws_iam_policy_document.logs"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_lambda_function.this[0]",
                                "mode": "managed",
                                "type": "aws_lambda_function",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "architectures": [
                                        "x86_64"
                                    ],
                                    "arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev",
                                    "code_signing_config_arn": "",
                                    "dead_letter_config": [],
                                    "description": "",
                                    "environment": [
                                        {
                                            "variables": {
                                                "BUCKET": "noncommittalband.com-68c9d996ee3b87f",
                                                "PART_TABLE": "Instrument-68c9d996ee3b87f-dev",
                                                "SONG_TABLE": "Song-68c9d996ee3b87f-dev"
                                            }
                                        }
                                    ],
                                    "ephemeral_storage": [
                                        {
                                            "size": 512
                                        }
                                    ],
                                    "file_system_config": [],
                                    "filename": null,
                                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                                    "handler": "create_instrument.handler",
                                    "id": "create-instrument-68c9d996ee3b87f-dev",
                                    "image_config": [],
                                    "image_uri": "",
                                    "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev/invocations",
                                    "kms_key_arn": "",
                                    "last_modified": "2022-06-24T23:32:30.437+0000",
                                    "layers": [],
                                    "memory_size": 128,
                                    "package_type": "Zip",
                                    "publish": true,
                                    "qualified_arn": "arn:aws:lambda:us-west-2:588487667149:function:create-instrument-68c9d996ee3b87f-dev:1",
                                    "reserved_concurrent_executions": -1,
                                    "role": "arn:aws:iam::588487667149:role/create-instrument-68c9d996ee3b87f-dev",
                                    "runtime": "python3.9",
                                    "s3_bucket": "noncommittalband.com-68c9d996ee3b87f",
                                    "s3_key": "dev/code/create_instrument_lambda.zip",
                                    "s3_object_version": null,
                                    "signing_job_arn": "",
                                    "signing_profile_version_arn": "",
                                    "source_code_hash": "uSO0avvWlYE/aQL2KlnZ1PXxZ7On6rEiL0tF4Da0R/g=",
                                    "source_code_size": 1150,
                                    "tags": {},
                                    "tags_all": {},
                                    "timeout": 3,
                                    "timeouts": null,
                                    "tracing_config": [
                                        {
                                            "mode": "PassThrough"
                                        }
                                    ],
                                    "version": "1",
                                    "vpc_config": []
                                },
                                "sensitive_values": {
                                    "architectures": [
                                        false
                                    ],
                                    "dead_letter_config": [],
                                    "environment": [
                                        {
                                            "variables": {}
                                        }
                                    ],
                                    "ephemeral_storage": [
                                        {}
                                    ],
                                    "file_system_config": [],
                                    "image_config": [],
                                    "layers": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "tracing_config": [
                                        {}
                                    ],
                                    "vpc_config": []
                                },
                                "depends_on": [
                                    "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.aws_iam_role.lambda",
                                    "module.create_instrument_lambda.aws_s3_object.lambda_package",
                                    "module.create_instrument_lambda.data.aws_iam_policy_document.assume_role",
                                    "module.create_instrument_lambda.data.external.archive_prepare",
                                    "module.create_instrument_lambda.local_file.archive_plan",
                                    "module.create_instrument_lambda.null_resource.archive",
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this",
                                    "module.storage.aws_s3_bucket.this",
                                    "module.storage.aws_s3_bucket_policy.this",
                                    "module.storage.data.aws_elb_service_account.this",
                                    "module.storage.data.aws_iam_policy_document.combined",
                                    "module.storage.data.aws_iam_policy_document.deny_insecure_transport",
                                    "module.storage.data.aws_iam_policy_document.elb_log_delivery",
                                    "module.storage.data.aws_iam_policy_document.lb_log_delivery",
                                    "module.storage.data.aws_iam_policy_document.require_latest_tls"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_lambda_permission.current_version_triggers[\"devApiGateway\"]",
                                "mode": "managed",
                                "type": "aws_lambda_permission",
                                "name": "current_version_triggers",
                                "index": "devApiGateway",
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "action": "lambda:InvokeFunction",
                                    "event_source_token": null,
                                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                                    "function_url_auth_type": null,
                                    "id": "devApiGateway",
                                    "principal": "apigateway.amazonaws.com",
                                    "principal_org_id": null,
                                    "qualifier": "1",
                                    "source_account": null,
                                    "source_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/*",
                                    "statement_id": "devApiGateway",
                                    "statement_id_prefix": ""
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "aws_api_gateway_rest_api.noncommittal_band",
                                    "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.aws_iam_role.lambda",
                                    "module.create_instrument_lambda.aws_lambda_function.this",
                                    "module.create_instrument_lambda.aws_s3_object.lambda_package",
                                    "module.create_instrument_lambda.data.external.archive_prepare",
                                    "module.create_instrument_lambda.null_resource.archive",
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this",
                                    "module.storage.aws_s3_bucket.this",
                                    "module.storage.aws_s3_bucket_policy.this"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.aws_lambda_permission.unqualified_alias_triggers[\"devApiGateway\"]",
                                "mode": "managed",
                                "type": "aws_lambda_permission",
                                "name": "unqualified_alias_triggers",
                                "index": "devApiGateway",
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "action": "lambda:InvokeFunction",
                                    "event_source_token": null,
                                    "function_name": "create-instrument-68c9d996ee3b87f-dev",
                                    "function_url_auth_type": null,
                                    "id": "devApiGateway",
                                    "principal": "apigateway.amazonaws.com",
                                    "principal_org_id": null,
                                    "qualifier": "",
                                    "source_account": null,
                                    "source_arn": "arn:aws:execute-api:us-west-2:588487667149:8gjfakaw15/*",
                                    "statement_id": "devApiGateway",
                                    "statement_id_prefix": ""
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "aws_api_gateway_rest_api.noncommittal_band",
                                    "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda",
                                    "module.create_instrument_lambda.aws_iam_role.lambda",
                                    "module.create_instrument_lambda.aws_lambda_function.this",
                                    "module.create_instrument_lambda.aws_s3_object.lambda_package",
                                    "module.create_instrument_lambda.data.external.archive_prepare",
                                    "module.create_instrument_lambda.null_resource.archive",
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this",
                                    "module.storage.aws_s3_bucket.this",
                                    "module.storage.aws_s3_bucket_policy.this"
                                ]
                            },
                            {
                                "address": "module.create_instrument_lambda.data.aws_iam_policy_document.assume_role[0]",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "3727555548",
                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    },\n    {\n      \"Sid\": \"songwriter\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                    "override_json": null,
                                    "override_policy_documents": null,
                                    "policy_id": null,
                                    "source_json": null,
                                    "source_policy_documents": null,
                                    "statement": [
                                        {
                                            "actions": [
                                                "sts:AssumeRole"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        "lambda.amazonaws.com"
                                                    ],
                                                    "type": "Service"
                                                }
                                            ],
                                            "resources": [],
                                            "sid": ""
                                        },
                                        {
                                            "actions": [
                                                "sts:AssumeRole"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        "lambda.amazonaws.com"
                                                    ],
                                                    "type": "Service"
                                                }
                                            ],
                                            "resources": [],
                                            "sid": "songwriter"
                                        }
                                    ],
                                    "version": "2012-10-17"
                                },
                                "sensitive_values": {
                                    "statement": [
                                        {
                                            "actions": [
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "resources": []
                                        },
                                        {
                                            "actions": [
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "resources": []
                                        }
                                    ]
                                }
                            },
                            {
                                "address": "module.create_instrument_lambda.data.aws_iam_policy_document.logs[0]",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "logs",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "2637144714",
                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*:*\",\n        \"arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*\"\n      ]\n    }\n  ]\n}",
                                    "override_json": null,
                                    "override_policy_documents": null,
                                    "policy_id": null,
                                    "source_json": null,
                                    "source_policy_documents": null,
                                    "statement": [
                                        {
                                            "actions": [
                                                "logs:CreateLogGroup",
                                                "logs:CreateLogStream",
                                                "logs:PutLogEvents"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [],
                                            "resources": [
                                                "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*",
                                                "arn:aws:logs:us-west-2:588487667149:log-group:/aws/lambda/create-instrument-68c9d996ee3b87f-dev:*:*"
                                            ],
                                            "sid": ""
                                        }
                                    ],
                                    "version": "2012-10-17"
                                },
                                "sensitive_values": {
                                    "statement": [
                                        {
                                            "actions": [
                                                false,
                                                false,
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [],
                                            "resources": [
                                                false,
                                                false
                                            ]
                                        }
                                    ]
                                }
                            },
                            {
                                "address": "module.create_instrument_lambda.data.aws_partition.current",
                                "mode": "data",
                                "type": "aws_partition",
                                "name": "current",
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "dns_suffix": "amazonaws.com",
                                    "id": "aws",
                                    "partition": "aws",
                                    "reverse_dns_prefix": "com.amazonaws"
                                },
                                "sensitive_values": {}
                            }
                        ],
                        "address": "module.create_instrument_lambda"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.instrument_datastore.aws_dynamodb_table.this[0]",
                                "mode": "managed",
                                "type": "aws_dynamodb_table",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev",
                                    "attribute": [
                                        {
                                            "name": "version",
                                            "type": "S"
                                        }
                                    ],
                                    "billing_mode": "PAY_PER_REQUEST",
                                    "global_secondary_index": [],
                                    "hash_key": "version",
                                    "id": "Instrument-68c9d996ee3b87f-dev",
                                    "local_secondary_index": [],
                                    "name": "Instrument-68c9d996ee3b87f-dev",
                                    "point_in_time_recovery": [
                                        {
                                            "enabled": false
                                        }
                                    ],
                                    "range_key": null,
                                    "read_capacity": 0,
                                    "replica": [],
                                    "restore_date_time": null,
                                    "restore_source_name": null,
                                    "restore_to_latest_time": null,
                                    "server_side_encryption": [],
                                    "stream_arn": "",
                                    "stream_enabled": false,
                                    "stream_label": "",
                                    "stream_view_type": "",
                                    "table_class": "",
                                    "tags": {
                                        "Name": "Instrument-68c9d996ee3b87f-dev"
                                    },
                                    "tags_all": {
                                        "Name": "Instrument-68c9d996ee3b87f-dev"
                                    },
                                    "timeouts": {
                                        "create": "10m",
                                        "delete": "10m",
                                        "update": "60m"
                                    },
                                    "ttl": [
                                        {
                                            "attribute_name": "",
                                            "enabled": false
                                        }
                                    ],
                                    "write_capacity": 0
                                },
                                "sensitive_values": {
                                    "attribute": [
                                        {}
                                    ],
                                    "global_secondary_index": [],
                                    "local_secondary_index": [],
                                    "point_in_time_recovery": [
                                        {}
                                    ],
                                    "replica": [],
                                    "server_side_encryption": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "timeouts": {},
                                    "ttl": [
                                        {}
                                    ]
                                }
                            }
                        ],
                        "address": "module.instrument_datastore"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "policy",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                    "description": "Allows writing instrument data to S3",
                                    "id": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                    "name": "instrument-writer-68c9d996ee3b87f-dev",
                                    "name_prefix": null,
                                    "path": "/",
                                    "policy": "{\"Statement\":[{\"Action\":[\"s3:PutObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f\"]}],\"Version\":\"2012-10-17\"}",
                                    "policy_id": "ANPAYSBEZFXGYFES5CC5Q",
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.storage.aws_s3_bucket.this"
                                ]
                            }
                        ],
                        "address": "module.instrument_writer_policy"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.song_datastore.aws_dynamodb_table.this[0]",
                                "mode": "managed",
                                "type": "aws_dynamodb_table",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 1,
                                "values": {
                                    "arn": "arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev",
                                    "attribute": [
                                        {
                                            "name": "instrumentId",
                                            "type": "S"
                                        },
                                        {
                                            "name": "name",
                                            "type": "S"
                                        }
                                    ],
                                    "billing_mode": "PAY_PER_REQUEST",
                                    "global_secondary_index": [],
                                    "hash_key": "name",
                                    "id": "Song-68c9d996ee3b87f-dev",
                                    "local_secondary_index": [],
                                    "name": "Song-68c9d996ee3b87f-dev",
                                    "point_in_time_recovery": [
                                        {
                                            "enabled": false
                                        }
                                    ],
                                    "range_key": "instrumentId",
                                    "read_capacity": 0,
                                    "replica": [],
                                    "restore_date_time": null,
                                    "restore_source_name": null,
                                    "restore_to_latest_time": null,
                                    "server_side_encryption": [],
                                    "stream_arn": "",
                                    "stream_enabled": false,
                                    "stream_label": "",
                                    "stream_view_type": "",
                                    "table_class": "",
                                    "tags": {
                                        "Name": "Song-68c9d996ee3b87f-dev"
                                    },
                                    "tags_all": {
                                        "Name": "Song-68c9d996ee3b87f-dev"
                                    },
                                    "timeouts": {
                                        "create": "10m",
                                        "delete": "10m",
                                        "update": "60m"
                                    },
                                    "ttl": [
                                        {
                                            "attribute_name": "",
                                            "enabled": false
                                        }
                                    ],
                                    "write_capacity": 0
                                },
                                "sensitive_values": {
                                    "attribute": [
                                        {},
                                        {}
                                    ],
                                    "global_secondary_index": [],
                                    "local_secondary_index": [],
                                    "point_in_time_recovery": [
                                        {}
                                    ],
                                    "replica": [],
                                    "server_side_encryption": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "timeouts": {},
                                    "ttl": [
                                        {}
                                    ]
                                }
                            }
                        ],
                        "address": "module.song_datastore"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.song_writer_policy.aws_iam_policy.policy[0]",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "policy",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                    "description": "Allows writing Songs to DynamoDB",
                                    "id": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                    "name": "song-writer-68c9d996ee3b87f-dev",
                                    "name_prefix": null,
                                    "path": "/",
                                    "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:PutItem\",\"dynamodb:GetItem\",\"dynamodb:Query\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-west-2:588487667149:table/Instrument-68c9d996ee3b87f-dev\",\"arn:aws:dynamodb:us-west-2:588487667149:table/Song-68c9d996ee3b87f-dev\"]}],\"Version\":\"2012-10-17\"}",
                                    "policy_id": "ANPAYSBEZFXGZVYTV32BS",
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "sensitive_values": {
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this"
                                ]
                            }
                        ],
                        "address": "module.song_writer_policy"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.song_writer_role.aws_iam_role.this[0]",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "arn": "arn:aws:iam::588487667149:role/song-writer-68c9d996ee3b87f-dev",
                                    "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                                    "create_date": "2022-06-19T04:10:09Z",
                                    "description": "",
                                    "force_detach_policies": false,
                                    "id": "song-writer-68c9d996ee3b87f-dev",
                                    "inline_policy": [
                                        {
                                            "name": "",
                                            "policy": ""
                                        }
                                    ],
                                    "managed_policy_arns": [
                                        "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                        "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                    ],
                                    "max_session_duration": 3600,
                                    "name": "song-writer-68c9d996ee3b87f-dev",
                                    "name_prefix": "",
                                    "path": "/",
                                    "permissions_boundary": "",
                                    "tags": {},
                                    "tags_all": {},
                                    "unique_id": "AROAYSBEZFXGQYCMMFJ26"
                                },
                                "sensitive_values": {
                                    "inline_policy": [
                                        {}
                                    ],
                                    "managed_policy_arns": [
                                        false,
                                        false,
                                        false
                                    ],
                                    "tags": {},
                                    "tags_all": {}
                                },
                                "depends_on": [
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role_with_mfa"
                                ]
                            },
                            {
                                "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[0]",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "custom",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041010241100000002",
                                    "policy_arn": "arn:aws:iam::588487667149:policy/song-writer-68c9d996ee3b87f-dev",
                                    "role": "song-writer-68c9d996ee3b87f-dev"
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.instrument_writer_policy.aws_iam_policy.policy",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this",
                                    "module.song_writer_policy.aws_iam_policy.policy",
                                    "module.song_writer_role.aws_iam_role.this",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role_with_mfa",
                                    "module.storage.aws_s3_bucket.this"
                                ]
                            },
                            {
                                "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[1]",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "custom",
                                "index": 1,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041010125200000001",
                                    "policy_arn": "arn:aws:iam::588487667149:policy/instrument-writer-68c9d996ee3b87f-dev",
                                    "role": "song-writer-68c9d996ee3b87f-dev"
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.instrument_writer_policy.aws_iam_policy.policy",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this",
                                    "module.song_writer_policy.aws_iam_policy.policy",
                                    "module.song_writer_role.aws_iam_role.this",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role_with_mfa",
                                    "module.storage.aws_s3_bucket.this"
                                ]
                            },
                            {
                                "address": "module.song_writer_role.aws_iam_role_policy_attachment.custom[2]",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "custom",
                                "index": 2,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "song-writer-68c9d996ee3b87f-dev-20220619041513778300000001",
                                    "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    "role": "song-writer-68c9d996ee3b87f-dev"
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.instrument_datastore.aws_dynamodb_table.autoscaled",
                                    "module.instrument_datastore.aws_dynamodb_table.this",
                                    "module.instrument_writer_policy.aws_iam_policy.policy",
                                    "module.song_datastore.aws_dynamodb_table.autoscaled",
                                    "module.song_datastore.aws_dynamodb_table.this",
                                    "module.song_writer_policy.aws_iam_policy.policy",
                                    "module.song_writer_role.aws_iam_role.this",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role",
                                    "module.song_writer_role.data.aws_iam_policy_document.assume_role_with_mfa",
                                    "module.storage.aws_s3_bucket.this"
                                ]
                            },
                            {
                                "address": "module.song_writer_role.data.aws_iam_policy_document.assume_role[0]",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "id": "2783130461",
                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": [],\n        \"Service\": []\n      }\n    }\n  ]\n}",
                                    "override_json": null,
                                    "override_policy_documents": null,
                                    "policy_id": null,
                                    "source_json": null,
                                    "source_policy_documents": null,
                                    "statement": [
                                        {
                                            "actions": [
                                                "sts:AssumeRole"
                                            ],
                                            "condition": [],
                                            "effect": "Allow",
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": [],
                                                    "type": "AWS"
                                                },
                                                {
                                                    "identifiers": [],
                                                    "type": "Service"
                                                }
                                            ],
                                            "resources": [],
                                            "sid": ""
                                        }
                                    ],
                                    "version": "2012-10-17"
                                },
                                "sensitive_values": {
                                    "statement": [
                                        {
                                            "actions": [
                                                false
                                            ],
                                            "condition": [],
                                            "not_actions": [],
                                            "not_principals": [],
                                            "not_resources": [],
                                            "principals": [
                                                {
                                                    "identifiers": []
                                                },
                                                {
                                                    "identifiers": []
                                                }
                                            ],
                                            "resources": []
                                        }
                                    ]
                                }
                            }
                        ],
                        "address": "module.song_writer_role"
                    },
                    {
                        "resources": [
                            {
                                "address": "module.storage.aws_s3_bucket.this[0]",
                                "mode": "managed",
                                "type": "aws_s3_bucket",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "acceleration_status": "",
                                    "acl": null,
                                    "arn": "arn:aws:s3:::noncommittalband.com-68c9d996ee3b87f",
                                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                                    "bucket_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.amazonaws.com",
                                    "bucket_prefix": null,
                                    "bucket_regional_domain_name": "noncommittalband.com-68c9d996ee3b87f.s3.us-west-2.amazonaws.com",
                                    "cors_rule": [],
                                    "force_destroy": true,
                                    "grant": [
                                        {
                                            "id": "1c6a184b086f944a317d716b5e7df457190ba4b77bf0b21ef9975628d2d3f8ac",
                                            "permissions": [
                                                "FULL_CONTROL"
                                            ],
                                            "type": "CanonicalUser",
                                            "uri": ""
                                        }
                                    ],
                                    "hosted_zone_id": "Z3BJ6K6RIION7M",
                                    "id": "noncommittalband.com-68c9d996ee3b87f",
                                    "lifecycle_rule": [],
                                    "logging": [],
                                    "object_lock_configuration": [],
                                    "object_lock_enabled": false,
                                    "policy": "",
                                    "region": "us-west-2",
                                    "replication_configuration": [],
                                    "request_payer": "BucketOwner",
                                    "server_side_encryption_configuration": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "versioning": [
                                        {
                                            "enabled": true,
                                            "mfa_delete": false
                                        }
                                    ],
                                    "website": [],
                                    "website_domain": null,
                                    "website_endpoint": null
                                },
                                "sensitive_values": {
                                    "cors_rule": [],
                                    "grant": [
                                        {
                                            "permissions": [
                                                false
                                            ]
                                        }
                                    ],
                                    "lifecycle_rule": [],
                                    "logging": [],
                                    "object_lock_configuration": [],
                                    "replication_configuration": [],
                                    "server_side_encryption_configuration": [],
                                    "tags": {},
                                    "tags_all": {},
                                    "versioning": [
                                        {}
                                    ],
                                    "website": []
                                }
                            },
                            {
                                "address": "module.storage.aws_s3_bucket_public_access_block.this[0]",
                                "mode": "managed",
                                "type": "aws_s3_bucket_public_access_block",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "block_public_acls": false,
                                    "block_public_policy": false,
                                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                                    "id": "noncommittalband.com-68c9d996ee3b87f",
                                    "ignore_public_acls": false,
                                    "restrict_public_buckets": false
                                },
                                "sensitive_values": {},
                                "depends_on": [
                                    "module.storage.aws_s3_bucket.this",
                                    "module.storage.aws_s3_bucket_policy.this",
                                    "module.storage.data.aws_elb_service_account.this",
                                    "module.storage.data.aws_iam_policy_document.combined",
                                    "module.storage.data.aws_iam_policy_document.deny_insecure_transport",
                                    "module.storage.data.aws_iam_policy_document.elb_log_delivery",
                                    "module.storage.data.aws_iam_policy_document.lb_log_delivery",
                                    "module.storage.data.aws_iam_policy_document.require_latest_tls"
                                ]
                            },
                            {
                                "address": "module.storage.aws_s3_bucket_versioning.this[0]",
                                "mode": "managed",
                                "type": "aws_s3_bucket_versioning",
                                "name": "this",
                                "index": 0,
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "bucket": "noncommittalband.com-68c9d996ee3b87f",
                                    "expected_bucket_owner": "",
                                    "id": "noncommittalband.com-68c9d996ee3b87f",
                                    "mfa": null,
                                    "versioning_configuration": [
                                        {
                                            "mfa_delete": "",
                                            "status": "Enabled"
                                        }
                                    ]
                                },
                                "sensitive_values": {
                                    "versioning_configuration": [
                                        {}
                                    ]
                                },
                                "depends_on": [
                                    "module.storage.aws_s3_bucket.this"
                                ]
                            },
                            {
                                "address": "module.storage.data.aws_canonical_user_id.this",
                                "mode": "data",
                                "type": "aws_canonical_user_id",
                                "name": "this",
                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                "schema_version": 0,
                                "values": {
                                    "display_name": "mcmoranbjr",
                                    "id": "1c6a184b086f944a317d716b5e7df457190ba4b77bf0b21ef9975628d2d3f8ac"
                                },
                                "sensitive_values": {}
                            }
                        ],
                        "address": "module.storage"
                    }
                ]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "version_constraint": ">= 4.0.0",
                "expressions": {
                    "region": {
                        "constant_value": "us-west-2"
                    },
                    "skip_credentials_validation": {
                        "constant_value": true
                    },
                    "skip_get_ec2_platforms": {
                        "constant_value": true
                    },
                    "skip_metadata_api_check": {
                        "constant_value": true
                    },
                    "skip_region_validation": {
                        "constant_value": true
                    }
                }
            },
            "module.api_authorizer:external": {
                "name": "external",
                "full_name": "registry.terraform.io/hashicorp/external",
                "version_constraint": ">= 1.0.0",
                "module_address": "module.api_authorizer"
            },
            "module.api_authorizer:local": {
                "name": "local",
                "full_name": "registry.terraform.io/hashicorp/local",
                "version_constraint": ">= 1.0.0",
                "module_address": "module.api_authorizer"
            },
            "module.api_authorizer:null": {
                "name": "null",
                "full_name": "registry.terraform.io/hashicorp/null",
                "version_constraint": ">= 2.0.0",
                "module_address": "module.api_authorizer"
            },
            "module.create_instrument_lambda:external": {
                "name": "external",
                "full_name": "registry.terraform.io/hashicorp/external",
                "version_constraint": ">= 1.0.0",
                "module_address": "module.create_instrument_lambda"
            },
            "module.create_instrument_lambda:local": {
                "name": "local",
                "full_name": "registry.terraform.io/hashicorp/local",
                "version_constraint": ">= 1.0.0",
                "module_address": "module.create_instrument_lambda"
            },
            "module.create_instrument_lambda:null": {
                "name": "null",
                "full_name": "registry.terraform.io/hashicorp/null",
                "version_constraint": ">= 2.0.0",
                "module_address": "module.create_instrument_lambda"
            }
        },
        "root_module": {
            "resources": [
                {
                    "address": "aws_iam_role.authorized_api_caller",
                    "mode": "managed",
                    "type": "aws_iam_role",
                    "name": "authorized_api_caller",
                    "provider_config_key": "aws",
                    "expressions": {
                        "assume_role_policy": {},
                        "inline_policy": [
                            {
                                "name": {
                                    "constant_value": "authorized-api-calls"
                                },
                                "policy": {
                                    "references": [
                                        "module.api_authorizer.lambda_function_arn",
                                        "module.api_authorizer"
                                    ]
                                }
                            }
                        ],
                        "name": {
                            "constant_value": "nomcomittal-api-caller"
                        }
                    },
                    "schema_version": 0
                }
            ],
            "module_calls": {
                "api_authorizer": {
                    "source": "terraform-aws-modules/lambda/aws",
                    "expressions": {
                        "create_package": {
                            "constant_value": false
                        },
                        "environment_variables": {
                            "references": [
                                "var.psk"
                            ]
                        },
                        "function_name": {
                            "references": [
                                "local.stackenv"
                            ]
                        },
                        "handler": {
                            "constant_value": "authorizer.handler"
                        },
                        "runtime": {
                            "constant_value": "python3.9"
                        },
                        "s3_existing_package": {
                            "references": [
                                "module.storage.s3_bucket_id",
                                "module.storage",
                                "var.env"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "lambda_cloudwatch_log_group_arn": {
                                "expression": {
                                    "references": [
                                        "local.log_group_arn"
                                    ]
                                },
                                "description": "The ARN of the Cloudwatch Log Group"
                            },
                            "lambda_cloudwatch_log_group_name": {
                                "expression": {
                                    "references": [
                                        "local.log_group_name"
                                    ]
                                },
                                "description": "The name of the Cloudwatch Log Group"
                            },
                            "lambda_event_source_mapping_function_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The the ARN of the Lambda function the event source mapping is sending events to"
                            },
                            "lambda_event_source_mapping_state": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The state of the event source mapping"
                            },
                            "lambda_event_source_mapping_state_transition_reason": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The reason the event source mapping is in its current state"
                            },
                            "lambda_event_source_mapping_uuid": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The UUID of the created event source mapping"
                            },
                            "lambda_function_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The ARN of the Lambda Function"
                            },
                            "lambda_function_invoke_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].invoke_arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The Invoke ARN of the Lambda Function"
                            },
                            "lambda_function_kms_key_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].kms_key_arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The ARN for the KMS encryption key of Lambda Function"
                            },
                            "lambda_function_last_modified": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].last_modified",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The date Lambda Function resource was last modified"
                            },
                            "lambda_function_name": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].function_name",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The name of the Lambda Function"
                            },
                            "lambda_function_qualified_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].qualified_arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The ARN identifying your Lambda Function Version"
                            },
                            "lambda_function_source_code_hash": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].source_code_hash",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "Base64-encoded representation of raw SHA-256 sum of the zip file"
                            },
                            "lambda_function_source_code_size": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].source_code_size",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The size in bytes of the function .zip file"
                            },
                            "lambda_function_url": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function_url.this[0].function_url",
                                        "aws_lambda_function_url.this[0]",
                                        "aws_lambda_function_url.this"
                                    ]
                                },
                                "description": "The URL of the Lambda Function URL"
                            },
                            "lambda_function_url_id": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function_url.this[0].url_id",
                                        "aws_lambda_function_url.this[0]",
                                        "aws_lambda_function_url.this"
                                    ]
                                },
                                "description": "The Lambda Function URL generated id"
                            },
                            "lambda_function_version": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].version",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "Latest published version of Lambda Function"
                            },
                            "lambda_layer_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].arn",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The ARN of the Lambda Layer with version"
                            },
                            "lambda_layer_created_date": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].created_date",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The date Lambda Layer resource was created"
                            },
                            "lambda_layer_layer_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].layer_arn",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The ARN of the Lambda Layer without version"
                            },
                            "lambda_layer_source_code_size": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].source_code_size",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The size in bytes of the Lambda Layer .zip file"
                            },
                            "lambda_layer_version": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].version",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The Lambda Layer version"
                            },
                            "lambda_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.lambda[0].arn",
                                        "aws_iam_role.lambda[0]",
                                        "aws_iam_role.lambda"
                                    ]
                                },
                                "description": "The ARN of the IAM role created for the Lambda Function"
                            },
                            "lambda_role_name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.lambda[0].name",
                                        "aws_iam_role.lambda[0]",
                                        "aws_iam_role.lambda"
                                    ]
                                },
                                "description": "The name of the IAM role created for the Lambda Function"
                            },
                            "lambda_role_unique_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.lambda[0].unique_id",
                                        "aws_iam_role.lambda[0]",
                                        "aws_iam_role.lambda"
                                    ]
                                },
                                "description": "The unique id of the IAM role created for the Lambda Function"
                            },
                            "local_filename": {
                                "expression": {
                                    "references": [
                                        "local.filename"
                                    ]
                                },
                                "description": "The filename of zip archive deployed (if deployment was from local)"
                            },
                            "s3_object": {
                                "expression": {
                                    "references": [
                                        "local.s3_bucket",
                                        "local.s3_key",
                                        "local.s3_object_version"
                                    ]
                                },
                                "description": "The map with S3 object data of zip archive deployed (if deployment was from S3)"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_cloudwatch_log_group.lambda",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "kms_key_id": {
                                        "references": [
                                            "var.cloudwatch_logs_kms_key_id"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.function_name"
                                        ]
                                    },
                                    "retention_in_days": {
                                        "references": [
                                            "var.cloudwatch_logs_retention_in_days"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.cloudwatch_logs_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.use_existing_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.additional_inline",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "additional_inline",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.additional_inline[0].json",
                                            "data.aws_iam_policy_document.additional_inline[0]",
                                            "data.aws_iam_policy_document.additional_inline"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_statements"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.additional_json",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "additional_json",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "var.policy_json"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_json"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.additional_jsons",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "additional_jsons",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name",
                                            "count.index"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "var.policy_jsons",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_jsons",
                                        "var.number_of_policy_jsons"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.async",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "async",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.async[0].json",
                                            "data.aws_iam_policy_document.async[0]",
                                            "data.aws_iam_policy_document.async"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_async_event_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.dead_letter",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "dead_letter",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.dead_letter[0].json",
                                            "data.aws_iam_policy_document.dead_letter[0]",
                                            "data.aws_iam_policy_document.dead_letter"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_dead_letter_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.logs",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.logs[0].json",
                                            "data.aws_iam_policy_document.logs[0]",
                                            "data.aws_iam_policy_document.logs"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_cloudwatch_logs_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.tracing",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "tracing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy.tracing[0].policy",
                                            "data.aws_iam_policy.tracing[0]",
                                            "data.aws_iam_policy.tracing"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_tracing_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.vpc",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "vpc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy.vpc[0].policy",
                                            "data.aws_iam_policy.vpc[0]",
                                            "data.aws_iam_policy.vpc"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_network_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.lambda",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.assume_role[0].json",
                                            "data.aws_iam_policy_document.assume_role[0]",
                                            "data.aws_iam_policy_document.assume_role"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.role_description"
                                        ]
                                    },
                                    "force_detach_policies": {
                                        "references": [
                                            "var.role_force_detach_policies"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.role_path"
                                        ]
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.role_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.role_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_inline",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_inline",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.additional_inline[0].arn",
                                            "aws_iam_policy.additional_inline[0]",
                                            "aws_iam_policy.additional_inline"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_statements"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_json",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_json",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.additional_json[0].arn",
                                            "aws_iam_policy.additional_json[0]",
                                            "aws_iam_policy.additional_json"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_json"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_jsons",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_jsons",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.additional_jsons",
                                            "count.index"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_jsons",
                                        "var.number_of_policy_jsons"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_many",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_many",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.policies",
                                            "count.index"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policies",
                                        "var.number_of_policies"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_one",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_one",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.policy"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.async",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "async",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.async[0].arn",
                                            "aws_iam_policy.async[0]",
                                            "aws_iam_policy.async"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_async_event_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.dead_letter",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "dead_letter",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.dead_letter[0].arn",
                                            "aws_iam_policy.dead_letter[0]",
                                            "aws_iam_policy.dead_letter"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_dead_letter_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.logs",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.logs[0].arn",
                                            "aws_iam_policy.logs[0]",
                                            "aws_iam_policy.logs"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_cloudwatch_logs_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.tracing",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "tracing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.tracing[0].arn",
                                            "aws_iam_policy.tracing[0]",
                                            "aws_iam_policy.tracing"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_tracing_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.vpc",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "vpc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.vpc[0].arn",
                                            "aws_iam_policy.vpc[0]",
                                            "aws_iam_policy.vpc"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_network_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_event_source_mapping.this",
                                "mode": "managed",
                                "type": "aws_lambda_event_source_mapping",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "batch_size": {
                                        "references": [
                                            "each.value.batch_size",
                                            "each.value"
                                        ]
                                    },
                                    "bisect_batch_on_function_error": {
                                        "references": [
                                            "each.value.bisect_batch_on_function_error",
                                            "each.value"
                                        ]
                                    },
                                    "enabled": {
                                        "references": [
                                            "each.value.enabled",
                                            "each.value"
                                        ]
                                    },
                                    "event_source_arn": {
                                        "references": [
                                            "each.value.event_source_arn",
                                            "each.value"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].arn",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "function_response_types": {
                                        "references": [
                                            "each.value.function_response_types",
                                            "each.value"
                                        ]
                                    },
                                    "maximum_batching_window_in_seconds": {
                                        "references": [
                                            "each.value.maximum_batching_window_in_seconds",
                                            "each.value"
                                        ]
                                    },
                                    "maximum_record_age_in_seconds": {
                                        "references": [
                                            "each.value.maximum_record_age_in_seconds",
                                            "each.value"
                                        ]
                                    },
                                    "maximum_retry_attempts": {
                                        "references": [
                                            "each.value.maximum_retry_attempts",
                                            "each.value"
                                        ]
                                    },
                                    "parallelization_factor": {
                                        "references": [
                                            "each.value.parallelization_factor",
                                            "each.value"
                                        ]
                                    },
                                    "queues": {
                                        "references": [
                                            "each.value.queues",
                                            "each.value"
                                        ]
                                    },
                                    "starting_position": {
                                        "references": [
                                            "each.value.starting_position",
                                            "each.value"
                                        ]
                                    },
                                    "starting_position_timestamp": {
                                        "references": [
                                            "each.value.starting_position_timestamp",
                                            "each.value"
                                        ]
                                    },
                                    "topics": {
                                        "references": [
                                            "each.value.topics",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.event_source_mapping",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_unqualified_alias_allowed_triggers"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_function.this",
                                "mode": "managed",
                                "type": "aws_lambda_function",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "architectures": {
                                        "references": [
                                            "var.architectures"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "filename": {
                                        "references": [
                                            "local.filename"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "var.function_name"
                                        ]
                                    },
                                    "handler": {
                                        "references": [
                                            "var.package_type",
                                            "var.handler"
                                        ]
                                    },
                                    "image_uri": {
                                        "references": [
                                            "var.image_uri"
                                        ]
                                    },
                                    "kms_key_arn": {
                                        "references": [
                                            "var.kms_key_arn"
                                        ]
                                    },
                                    "layers": {
                                        "references": [
                                            "var.layers"
                                        ]
                                    },
                                    "memory_size": {
                                        "references": [
                                            "var.memory_size"
                                        ]
                                    },
                                    "package_type": {
                                        "references": [
                                            "var.package_type"
                                        ]
                                    },
                                    "publish": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.publish"
                                        ]
                                    },
                                    "reserved_concurrent_executions": {
                                        "references": [
                                            "var.reserved_concurrent_executions"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "var.create_role",
                                            "aws_iam_role.lambda[0].arn",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda",
                                            "var.lambda_role"
                                        ]
                                    },
                                    "runtime": {
                                        "references": [
                                            "var.package_type",
                                            "var.runtime"
                                        ]
                                    },
                                    "s3_bucket": {
                                        "references": [
                                            "local.s3_bucket"
                                        ]
                                    },
                                    "s3_key": {
                                        "references": [
                                            "local.s3_key"
                                        ]
                                    },
                                    "s3_object_version": {
                                        "references": [
                                            "local.s3_object_version"
                                        ]
                                    },
                                    "source_code_hash": {
                                        "references": [
                                            "var.ignore_source_code_hash",
                                            "local.filename",
                                            "local.filename",
                                            "local.was_missing",
                                            "local.filename"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    },
                                    "timeout": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.timeout",
                                            "var.timeout"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer"
                                    ]
                                },
                                "depends_on": [
                                    "null_resource.archive",
                                    "aws_s3_object.lambda_package",
                                    "aws_cloudwatch_log_group.lambda"
                                ]
                            },
                            {
                                "address": "aws_lambda_function_event_invoke_config.this",
                                "mode": "managed",
                                "type": "aws_lambda_function_event_invoke_config",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "maximum_event_age_in_seconds": {
                                        "references": [
                                            "var.maximum_event_age_in_seconds"
                                        ]
                                    },
                                    "maximum_retry_attempts": {
                                        "references": [
                                            "var.maximum_retry_attempts"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "each.key",
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "local.qualifiers",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_async_event_config"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_function_url.this",
                                "mode": "managed",
                                "type": "aws_lambda_function_url",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "authorization_type": {
                                        "references": [
                                            "var.authorization_type"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "var.create_unqualified_alias_lambda_function_url",
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_lambda_function_url"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_layer_version.this",
                                "mode": "managed",
                                "type": "aws_lambda_layer_version",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "compatible_architectures": {
                                        "references": [
                                            "var.compatible_architectures"
                                        ]
                                    },
                                    "compatible_runtimes": {
                                        "references": [
                                            "var.compatible_runtimes",
                                            "var.compatible_runtimes",
                                            "var.runtime"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "filename": {
                                        "references": [
                                            "local.filename"
                                        ]
                                    },
                                    "layer_name": {
                                        "references": [
                                            "var.layer_name"
                                        ]
                                    },
                                    "license_info": {
                                        "references": [
                                            "var.license_info"
                                        ]
                                    },
                                    "s3_bucket": {
                                        "references": [
                                            "local.s3_bucket"
                                        ]
                                    },
                                    "s3_key": {
                                        "references": [
                                            "local.s3_key"
                                        ]
                                    },
                                    "s3_object_version": {
                                        "references": [
                                            "local.s3_object_version"
                                        ]
                                    },
                                    "skip_destroy": {
                                        "references": [
                                            "var.layer_skip_destroy"
                                        ]
                                    },
                                    "source_code_hash": {
                                        "references": [
                                            "var.ignore_source_code_hash",
                                            "local.filename",
                                            "local.filename",
                                            "local.was_missing",
                                            "local.filename"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_layer"
                                    ]
                                },
                                "depends_on": [
                                    "null_resource.archive",
                                    "aws_s3_object.lambda_package"
                                ]
                            },
                            {
                                "address": "aws_lambda_permission.current_version_triggers",
                                "mode": "managed",
                                "type": "aws_lambda_permission",
                                "name": "current_version_triggers",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "action": {
                                        "references": [
                                            "each.value.action",
                                            "each.value"
                                        ]
                                    },
                                    "event_source_token": {
                                        "references": [
                                            "each.value.event_source_token",
                                            "each.value"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "principal": {
                                        "references": [
                                            "each.value.principal",
                                            "each.value",
                                            "each.value.service",
                                            "each.value"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "source_account": {
                                        "references": [
                                            "each.value.source_account",
                                            "each.value"
                                        ]
                                    },
                                    "source_arn": {
                                        "references": [
                                            "each.value.source_arn",
                                            "each.value"
                                        ]
                                    },
                                    "statement_id": {
                                        "references": [
                                            "each.value.statement_id",
                                            "each.value",
                                            "each.key"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.allowed_triggers",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_current_version_allowed_triggers"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_permission.unqualified_alias_triggers",
                                "mode": "managed",
                                "type": "aws_lambda_permission",
                                "name": "unqualified_alias_triggers",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "action": {
                                        "references": [
                                            "each.value.action",
                                            "each.value"
                                        ]
                                    },
                                    "event_source_token": {
                                        "references": [
                                            "each.value.event_source_token",
                                            "each.value"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "principal": {
                                        "references": [
                                            "each.value.principal",
                                            "each.value",
                                            "each.value.service",
                                            "each.value"
                                        ]
                                    },
                                    "source_account": {
                                        "references": [
                                            "each.value.source_account",
                                            "each.value"
                                        ]
                                    },
                                    "source_arn": {
                                        "references": [
                                            "each.value.source_arn",
                                            "each.value"
                                        ]
                                    },
                                    "statement_id": {
                                        "references": [
                                            "each.value.statement_id",
                                            "each.value",
                                            "each.key"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.allowed_triggers",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_unqualified_alias_allowed_triggers"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_provisioned_concurrency_config.current_version",
                                "mode": "managed",
                                "type": "aws_lambda_provisioned_concurrency_config",
                                "name": "current_version",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "provisioned_concurrent_executions": {
                                        "references": [
                                            "var.provisioned_concurrent_executions"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.provisioned_concurrent_executions"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_object.lambda_package",
                                "mode": "managed",
                                "type": "aws_s3_object",
                                "name": "lambda_package",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "acl": {
                                        "references": [
                                            "var.s3_acl"
                                        ]
                                    },
                                    "bucket": {
                                        "references": [
                                            "var.s3_bucket"
                                        ]
                                    },
                                    "key": {
                                        "references": [
                                            "local.s3_key"
                                        ]
                                    },
                                    "server_side_encryption": {
                                        "references": [
                                            "var.s3_server_side_encryption"
                                        ]
                                    },
                                    "source": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.filename",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    },
                                    "storage_class": {
                                        "references": [
                                            "var.s3_object_storage_class"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.s3_object_tags_only",
                                            "var.s3_object_tags",
                                            "var.tags",
                                            "var.s3_object_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.store_on_s3",
                                        "var.create_package"
                                    ]
                                },
                                "depends_on": [
                                    "null_resource.archive"
                                ]
                            },
                            {
                                "address": "local_file.archive_plan",
                                "mode": "managed",
                                "type": "local_file",
                                "name": "archive_plan",
                                "provider_config_key": "module.api_authorizer:local",
                                "expressions": {
                                    "content": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.build_plan",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    },
                                    "directory_permission": {
                                        "constant_value": "0755"
                                    },
                                    "file_permission": {
                                        "constant_value": "0644"
                                    },
                                    "filename": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.build_plan_filename",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_package"
                                    ]
                                }
                            },
                            {
                                "address": "null_resource.archive",
                                "mode": "managed",
                                "type": "null_resource",
                                "name": "archive",
                                "provider_config_key": "module.api_authorizer:null",
                                "provisioners": [
                                    {
                                        "type": "local-exec",
                                        "expressions": {
                                            "command": {
                                                "references": [
                                                    "data.external.archive_prepare[0].result.build_plan_filename",
                                                    "data.external.archive_prepare[0].result",
                                                    "data.external.archive_prepare[0]",
                                                    "data.external.archive_prepare"
                                                ]
                                            },
                                            "interpreter": {
                                                "references": [
                                                    "local.python",
                                                    "path.module",
                                                    "data.external.archive_prepare[0].result.timestamp",
                                                    "data.external.archive_prepare[0].result",
                                                    "data.external.archive_prepare[0]",
                                                    "data.external.archive_prepare"
                                                ]
                                            }
                                        }
                                    }
                                ],
                                "expressions": {
                                    "triggers": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.filename",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare",
                                            "data.external.archive_prepare[0].result.timestamp",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_package"
                                    ]
                                },
                                "depends_on": [
                                    "local_file.archive_plan"
                                ]
                            },
                            {
                                "address": "data.aws_arn.log_group_arn",
                                "mode": "data",
                                "type": "aws_arn",
                                "name": "log_group_arn",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "arn": {
                                        "references": [
                                            "local.log_group_arn_regional"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.lambda_at_edge"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_cloudwatch_log_group.lambda",
                                "mode": "data",
                                "type": "aws_cloudwatch_log_group",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.function_name"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.use_existing_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy.tracing",
                                "mode": "data",
                                "type": "aws_iam_policy",
                                "name": "tracing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "arn": {
                                        "references": [
                                            "data.aws_partition.current.partition",
                                            "data.aws_partition.current"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_tracing_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy.vpc",
                                "mode": "data",
                                "type": "aws_iam_policy",
                                "name": "vpc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "arn": {
                                        "references": [
                                            "data.aws_partition.current.partition",
                                            "data.aws_partition.current"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_network_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.additional_inline",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "additional_inline",
                                "provider_config_key": "aws",
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_statements"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.assume_role",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "local.trusted_entities_services"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.async",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "async",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sns:Publish",
                                                    "sqs:SendMessage",
                                                    "events:PutEvents",
                                                    "lambda:InvokeFunction"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.destination_on_failure",
                                                    "var.destination_on_success"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_async_event_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.dead_letter",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "dead_letter",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sns:Publish",
                                                    "sqs:SendMessage"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.dead_letter_target_arn"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_dead_letter_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.logs",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "references": [
                                                    "var.use_existing_cloudwatch_log_group"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "local.log_group_arn"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_cloudwatch_logs_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_partition.current",
                                "mode": "data",
                                "type": "aws_partition",
                                "name": "current",
                                "provider_config_key": "aws",
                                "schema_version": 0
                            },
                            {
                                "address": "data.external.archive_prepare",
                                "mode": "data",
                                "type": "external",
                                "name": "archive_prepare",
                                "provider_config_key": "module.api_authorizer:external",
                                "expressions": {
                                    "program": {
                                        "references": [
                                            "local.python",
                                            "path.module"
                                        ]
                                    },
                                    "query": {
                                        "references": [
                                            "path.module",
                                            "path.root",
                                            "path.cwd",
                                            "var.build_in_docker",
                                            "var.docker_pip_cache",
                                            "var.docker_build_root",
                                            "var.docker_file",
                                            "var.docker_image",
                                            "var.docker_with_ssh_agent",
                                            "var.artifacts_dir",
                                            "var.runtime",
                                            "var.source_path",
                                            "var.hash_extra",
                                            "var.recreate_missing_package"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_package"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "allowed_triggers": {
                                "default": {},
                                "description": "Map of allowed triggers to create Lambda permissions"
                            },
                            "architectures": {
                                "default": null,
                                "description": "Instruction set architecture for your Lambda function. Valid values are [\"x86_64\"] and [\"arm64\"]."
                            },
                            "artifacts_dir": {
                                "default": "builds",
                                "description": "Directory name where artifacts should be stored"
                            },
                            "assume_role_policy_statements": {
                                "default": {},
                                "description": "Map of dynamic policy statements for assuming Lambda Function role (trust relationship)"
                            },
                            "attach_async_event_policy": {
                                "default": false,
                                "description": "Controls whether async event policy should be added to IAM role for Lambda Function"
                            },
                            "attach_cloudwatch_logs_policy": {
                                "default": true,
                                "description": "Controls whether CloudWatch Logs policy should be added to IAM role for Lambda Function"
                            },
                            "attach_dead_letter_policy": {
                                "default": false,
                                "description": "Controls whether SNS/SQS dead letter notification policy should be added to IAM role for Lambda Function"
                            },
                            "attach_network_policy": {
                                "default": false,
                                "description": "Controls whether VPC/network policy should be added to IAM role for Lambda Function"
                            },
                            "attach_policies": {
                                "default": false,
                                "description": "Controls whether list of policies should be added to IAM role for Lambda Function"
                            },
                            "attach_policy": {
                                "default": false,
                                "description": "Controls whether policy should be added to IAM role for Lambda Function"
                            },
                            "attach_policy_json": {
                                "default": false,
                                "description": "Controls whether policy_json should be added to IAM role for Lambda Function"
                            },
                            "attach_policy_jsons": {
                                "default": false,
                                "description": "Controls whether policy_jsons should be added to IAM role for Lambda Function"
                            },
                            "attach_policy_statements": {
                                "default": false,
                                "description": "Controls whether policy_statements should be added to IAM role for Lambda Function"
                            },
                            "attach_tracing_policy": {
                                "default": false,
                                "description": "Controls whether X-Ray tracing policy should be added to IAM role for Lambda Function"
                            },
                            "authorization_type": {
                                "default": "NONE",
                                "description": "The type of authentication that the Lambda Function URL uses. Set to 'AWS_IAM' to restrict access to authenticated IAM users only. Set to 'NONE' to bypass IAM authentication and create a public endpoint."
                            },
                            "build_in_docker": {
                                "default": false,
                                "description": "Whether to build dependencies in Docker"
                            },
                            "cloudwatch_logs_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data."
                            },
                            "cloudwatch_logs_retention_in_days": {
                                "default": null,
                                "description": "Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653."
                            },
                            "cloudwatch_logs_tags": {
                                "default": {},
                                "description": "A map of tags to assign to the resource."
                            },
                            "compatible_architectures": {
                                "default": null,
                                "description": "A list of Architectures Lambda layer is compatible with. Currently x86_64 and arm64 can be specified."
                            },
                            "compatible_runtimes": {
                                "default": [],
                                "description": "A list of Runtimes this layer is compatible with. Up to 5 runtimes can be specified."
                            },
                            "cors": {
                                "default": {},
                                "description": "CORS settings to be used by the Lambda Function URL"
                            },
                            "create": {
                                "default": true,
                                "description": "Controls whether resources should be created"
                            },
                            "create_async_event_config": {
                                "default": false,
                                "description": "Controls whether async event configuration for Lambda Function/Alias should be created"
                            },
                            "create_current_version_allowed_triggers": {
                                "default": true,
                                "description": "Whether to allow triggers on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
                            },
                            "create_current_version_async_event_config": {
                                "default": true,
                                "description": "Whether to allow async event configuration on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
                            },
                            "create_function": {
                                "default": true,
                                "description": "Controls whether Lambda Function resource should be created"
                            },
                            "create_lambda_function_url": {
                                "default": false,
                                "description": "Controls whether the Lambda Function URL resource should be created"
                            },
                            "create_layer": {
                                "default": false,
                                "description": "Controls whether Lambda Layer resource should be created"
                            },
                            "create_package": {
                                "default": true,
                                "description": "Controls whether Lambda package should be created"
                            },
                            "create_role": {
                                "default": true,
                                "description": "Controls whether IAM role for Lambda Function should be created"
                            },
                            "create_unqualified_alias_allowed_triggers": {
                                "default": true,
                                "description": "Whether to allow triggers on unqualified alias pointing to $LATEST version"
                            },
                            "create_unqualified_alias_async_event_config": {
                                "default": true,
                                "description": "Whether to allow async event configuration on unqualified alias pointing to $LATEST version"
                            },
                            "create_unqualified_alias_lambda_function_url": {
                                "default": true,
                                "description": "Whether to use unqualified alias pointing to $LATEST version in Lambda Function URL"
                            },
                            "dead_letter_target_arn": {
                                "default": null,
                                "description": "The ARN of an SNS topic or SQS queue to notify when an invocation fails."
                            },
                            "description": {
                                "default": "",
                                "description": "Description of your Lambda Function (or Layer)"
                            },
                            "destination_on_failure": {
                                "default": null,
                                "description": "Amazon Resource Name (ARN) of the destination resource for failed asynchronous invocations"
                            },
                            "destination_on_success": {
                                "default": null,
                                "description": "Amazon Resource Name (ARN) of the destination resource for successful asynchronous invocations"
                            },
                            "docker_build_root": {
                                "default": "",
                                "description": "Root dir where to build in Docker"
                            },
                            "docker_file": {
                                "default": "",
                                "description": "Path to a Dockerfile when building in Docker"
                            },
                            "docker_image": {
                                "default": "",
                                "description": "Docker image to use for the build"
                            },
                            "docker_pip_cache": {
                                "default": null,
                                "description": "Whether to mount a shared pip cache folder into docker environment or not"
                            },
                            "docker_with_ssh_agent": {
                                "default": false,
                                "description": "Whether to pass SSH_AUTH_SOCK into docker environment or not"
                            },
                            "environment_variables": {
                                "default": {},
                                "description": "A map that defines environment variables for the Lambda Function."
                            },
                            "ephemeral_storage_size": {
                                "default": 512,
                                "description": "Amount of ephemeral storage (/tmp) in MB your Lambda Function can use at runtime. Valid value between 512 MB to 10,240 MB (10 GB)."
                            },
                            "event_source_mapping": {
                                "default": {},
                                "description": "Map of event source mapping"
                            },
                            "file_system_arn": {
                                "default": null,
                                "description": "The Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system."
                            },
                            "file_system_local_mount_path": {
                                "default": null,
                                "description": "The path where the function can access the file system, starting with /mnt/."
                            },
                            "function_name": {
                                "default": "",
                                "description": "A unique name for your Lambda Function"
                            },
                            "handler": {
                                "default": "",
                                "description": "Lambda Function entrypoint in your code"
                            },
                            "hash_extra": {
                                "default": "",
                                "description": "The string to add into hashing function. Useful when building same source path for different functions."
                            },
                            "ignore_source_code_hash": {
                                "default": false,
                                "description": "Whether to ignore changes to the function's source code hash. Set to true if you manage infrastructure and code deployments separately."
                            },
                            "image_config_command": {
                                "default": [],
                                "description": "The CMD for the docker image"
                            },
                            "image_config_entry_point": {
                                "default": [],
                                "description": "The ENTRYPOINT for the docker image"
                            },
                            "image_config_working_directory": {
                                "default": null,
                                "description": "The working directory for the docker image"
                            },
                            "image_uri": {
                                "default": null,
                                "description": "The ECR image URI containing the function's deployment package."
                            },
                            "kms_key_arn": {
                                "default": null,
                                "description": "The ARN of KMS key to use by your Lambda Function"
                            },
                            "lambda_at_edge": {
                                "default": false,
                                "description": "Set this to true if using Lambda@Edge, to enable publishing, limit the timeout, and allow edgelambda.amazonaws.com to invoke the function"
                            },
                            "lambda_role": {
                                "default": "",
                                "description": " IAM role ARN attached to the Lambda Function. This governs both who / what can invoke your Lambda Function, as well as what resources our Lambda Function has access to. See Lambda Permission Model for more details."
                            },
                            "layer_name": {
                                "default": "",
                                "description": "Name of Lambda Layer to create"
                            },
                            "layer_skip_destroy": {
                                "default": false,
                                "description": "Whether to retain the old version of a previously deployed Lambda Layer."
                            },
                            "layers": {
                                "default": null,
                                "description": "List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function."
                            },
                            "license_info": {
                                "default": "",
                                "description": "License info for your Lambda Layer. Eg, MIT or full url of a license."
                            },
                            "local_existing_package": {
                                "default": null,
                                "description": "The absolute path to an existing zip-file to use"
                            },
                            "maximum_event_age_in_seconds": {
                                "default": null,
                                "description": "Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600."
                            },
                            "maximum_retry_attempts": {
                                "default": null,
                                "description": "Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2."
                            },
                            "memory_size": {
                                "default": 128,
                                "description": "Amount of memory in MB your Lambda Function can use at runtime. Valid value between 128 MB to 10,240 MB (10 GB), in 64 MB increments."
                            },
                            "number_of_policies": {
                                "default": 0,
                                "description": "Number of policies to attach to IAM role for Lambda Function"
                            },
                            "number_of_policy_jsons": {
                                "default": 0,
                                "description": "Number of policies JSON to attach to IAM role for Lambda Function"
                            },
                            "package_type": {
                                "default": "Zip",
                                "description": "The Lambda deployment package type. Valid options: Zip or Image"
                            },
                            "policies": {
                                "default": [],
                                "description": "List of policy statements ARN to attach to Lambda Function role"
                            },
                            "policy": {
                                "default": null,
                                "description": "An additional policy document ARN to attach to the Lambda Function role"
                            },
                            "policy_json": {
                                "default": null,
                                "description": "An additional policy document as JSON to attach to the Lambda Function role"
                            },
                            "policy_jsons": {
                                "default": [],
                                "description": "List of additional policy documents as JSON to attach to Lambda Function role"
                            },
                            "policy_path": {
                                "default": null,
                                "description": "Path of policies to that should be added to IAM role for Lambda Function"
                            },
                            "policy_statements": {
                                "default": {},
                                "description": "Map of dynamic policy statements to attach to Lambda Function role"
                            },
                            "provisioned_concurrent_executions": {
                                "default": -1,
                                "description": "Amount of capacity to allocate. Set to 1 or greater to enable, or set to 0 to disable provisioned concurrency."
                            },
                            "publish": {
                                "default": false,
                                "description": "Whether to publish creation/change as new Lambda Function Version."
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "recreate_missing_package": {
                                "default": true,
                                "description": "Whether to recreate missing Lambda package if it is missing locally or not"
                            },
                            "reserved_concurrent_executions": {
                                "default": -1,
                                "description": "The amount of reserved concurrent executions for this Lambda Function. A value of 0 disables Lambda Function from being triggered and -1 removes any concurrency limitations. Defaults to Unreserved Concurrency Limits -1."
                            },
                            "role_description": {
                                "default": null,
                                "description": "Description of IAM role to use for Lambda Function"
                            },
                            "role_force_detach_policies": {
                                "default": true,
                                "description": "Specifies to force detaching any policies the IAM role has before destroying it."
                            },
                            "role_name": {
                                "default": null,
                                "description": "Name of IAM role to use for Lambda Function"
                            },
                            "role_path": {
                                "default": null,
                                "description": "Path of IAM role to use for Lambda Function"
                            },
                            "role_permissions_boundary": {
                                "default": null,
                                "description": "The ARN of the policy that is used to set the permissions boundary for the IAM role used by Lambda Function"
                            },
                            "role_tags": {
                                "default": {},
                                "description": "A map of tags to assign to IAM role"
                            },
                            "runtime": {
                                "default": "",
                                "description": "Lambda Function runtime"
                            },
                            "s3_acl": {
                                "default": "private",
                                "description": "The canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private."
                            },
                            "s3_bucket": {
                                "default": null,
                                "description": "S3 bucket to store artifacts"
                            },
                            "s3_existing_package": {
                                "default": null,
                                "description": "The S3 bucket object with keys bucket, key, version pointing to an existing zip-file to use"
                            },
                            "s3_object_storage_class": {
                                "default": "ONEZONE_IA",
                                "description": "Specifies the desired Storage Class for the artifact uploaded to S3. Can be either STANDARD, REDUCED_REDUNDANCY, ONEZONE_IA, INTELLIGENT_TIERING, or STANDARD_IA."
                            },
                            "s3_object_tags": {
                                "default": {},
                                "description": "A map of tags to assign to S3 bucket object."
                            },
                            "s3_object_tags_only": {
                                "default": false,
                                "description": "Set to true to not merge tags with s3_object_tags. Useful to avoid breaching S3 Object 10 tag limit."
                            },
                            "s3_prefix": {
                                "default": null,
                                "description": "Directory name where artifacts should be stored in the S3 bucket. If unset, the path from `artifacts_dir` is used"
                            },
                            "s3_server_side_encryption": {
                                "default": null,
                                "description": "Specifies server-side encryption of the object in S3. Valid values are \"AES256\" and \"aws:kms\"."
                            },
                            "source_path": {
                                "default": null,
                                "description": "The absolute path to a local file or directory containing your Lambda source code"
                            },
                            "store_on_s3": {
                                "default": false,
                                "description": "Whether to store produced artifacts on S3 or locally."
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to assign to resources."
                            },
                            "timeout": {
                                "default": 3,
                                "description": "The amount of time your Lambda Function has to run in seconds."
                            },
                            "tracing_mode": {
                                "default": null,
                                "description": "Tracing mode of the Lambda Function. Valid value can be either PassThrough or Active."
                            },
                            "trusted_entities": {
                                "default": [],
                                "description": "List of additional trusted entities for assuming Lambda Function role (trust relationship)"
                            },
                            "use_existing_cloudwatch_log_group": {
                                "default": false,
                                "description": "Whether to use an existing CloudWatch log group or create new"
                            },
                            "vpc_security_group_ids": {
                                "default": null,
                                "description": "List of security group ids when Lambda Function should run in the VPC."
                            },
                            "vpc_subnet_ids": {
                                "default": null,
                                "description": "List of subnet ids when Lambda Function should run in the VPC. Usually private or intra subnets."
                            }
                        }
                    }
                },
                "create_instrument_lambda": {
                    "source": "terraform-aws-modules/lambda/aws",
                    "expressions": {
                        "assume_role_policy_statements": {
                            "constant_value": {
                                "song_writer": {
                                    "actions": [
                                        "sts:AssumeRole"
                                    ],
                                    "effect": "Allow",
                                    "principals": {
                                        "lambda": {
                                            "identifiers": [
                                                "lambda.amazonaws.com"
                                            ],
                                            "type": "Service"
                                        }
                                    }
                                }
                            }
                        },
                        "attach_policies": {
                            "constant_value": true
                        },
                        "create_package": {
                            "constant_value": false
                        },
                        "environment_variables": {
                            "references": [
                                "module.storage.s3_bucket_id",
                                "module.storage",
                                "module.song_datastore.dynamodb_table_id",
                                "module.song_datastore",
                                "module.instrument_datastore.dynamodb_table_id",
                                "module.instrument_datastore"
                            ]
                        },
                        "function_name": {
                            "references": [
                                "local.stackenv"
                            ]
                        },
                        "handler": {
                            "constant_value": "create_instrument.handler"
                        },
                        "number_of_policies": {
                            "constant_value": 1
                        },
                        "policies": {
                            "references": [
                                "module.instrument_writer_policy.arn",
                                "module.instrument_writer_policy"
                            ]
                        },
                        "publish": {
                            "constant_value": true
                        },
                        "runtime": {
                            "constant_value": "python3.9"
                        },
                        "s3_existing_package": {
                            "references": [
                                "module.storage.s3_bucket_id",
                                "module.storage",
                                "var.env"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "lambda_cloudwatch_log_group_arn": {
                                "expression": {
                                    "references": [
                                        "local.log_group_arn"
                                    ]
                                },
                                "description": "The ARN of the Cloudwatch Log Group"
                            },
                            "lambda_cloudwatch_log_group_name": {
                                "expression": {
                                    "references": [
                                        "local.log_group_name"
                                    ]
                                },
                                "description": "The name of the Cloudwatch Log Group"
                            },
                            "lambda_event_source_mapping_function_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The the ARN of the Lambda function the event source mapping is sending events to"
                            },
                            "lambda_event_source_mapping_state": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The state of the event source mapping"
                            },
                            "lambda_event_source_mapping_state_transition_reason": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The reason the event source mapping is in its current state"
                            },
                            "lambda_event_source_mapping_uuid": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_event_source_mapping.this"
                                    ]
                                },
                                "description": "The UUID of the created event source mapping"
                            },
                            "lambda_function_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The ARN of the Lambda Function"
                            },
                            "lambda_function_invoke_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].invoke_arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The Invoke ARN of the Lambda Function"
                            },
                            "lambda_function_kms_key_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].kms_key_arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The ARN for the KMS encryption key of Lambda Function"
                            },
                            "lambda_function_last_modified": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].last_modified",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The date Lambda Function resource was last modified"
                            },
                            "lambda_function_name": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].function_name",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The name of the Lambda Function"
                            },
                            "lambda_function_qualified_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].qualified_arn",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The ARN identifying your Lambda Function Version"
                            },
                            "lambda_function_source_code_hash": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].source_code_hash",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "Base64-encoded representation of raw SHA-256 sum of the zip file"
                            },
                            "lambda_function_source_code_size": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].source_code_size",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "The size in bytes of the function .zip file"
                            },
                            "lambda_function_url": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function_url.this[0].function_url",
                                        "aws_lambda_function_url.this[0]",
                                        "aws_lambda_function_url.this"
                                    ]
                                },
                                "description": "The URL of the Lambda Function URL"
                            },
                            "lambda_function_url_id": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function_url.this[0].url_id",
                                        "aws_lambda_function_url.this[0]",
                                        "aws_lambda_function_url.this"
                                    ]
                                },
                                "description": "The Lambda Function URL generated id"
                            },
                            "lambda_function_version": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_function.this[0].version",
                                        "aws_lambda_function.this[0]",
                                        "aws_lambda_function.this"
                                    ]
                                },
                                "description": "Latest published version of Lambda Function"
                            },
                            "lambda_layer_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].arn",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The ARN of the Lambda Layer with version"
                            },
                            "lambda_layer_created_date": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].created_date",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The date Lambda Layer resource was created"
                            },
                            "lambda_layer_layer_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].layer_arn",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The ARN of the Lambda Layer without version"
                            },
                            "lambda_layer_source_code_size": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].source_code_size",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The size in bytes of the Lambda Layer .zip file"
                            },
                            "lambda_layer_version": {
                                "expression": {
                                    "references": [
                                        "aws_lambda_layer_version.this[0].version",
                                        "aws_lambda_layer_version.this[0]",
                                        "aws_lambda_layer_version.this"
                                    ]
                                },
                                "description": "The Lambda Layer version"
                            },
                            "lambda_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.lambda[0].arn",
                                        "aws_iam_role.lambda[0]",
                                        "aws_iam_role.lambda"
                                    ]
                                },
                                "description": "The ARN of the IAM role created for the Lambda Function"
                            },
                            "lambda_role_name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.lambda[0].name",
                                        "aws_iam_role.lambda[0]",
                                        "aws_iam_role.lambda"
                                    ]
                                },
                                "description": "The name of the IAM role created for the Lambda Function"
                            },
                            "lambda_role_unique_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.lambda[0].unique_id",
                                        "aws_iam_role.lambda[0]",
                                        "aws_iam_role.lambda"
                                    ]
                                },
                                "description": "The unique id of the IAM role created for the Lambda Function"
                            },
                            "local_filename": {
                                "expression": {
                                    "references": [
                                        "local.filename"
                                    ]
                                },
                                "description": "The filename of zip archive deployed (if deployment was from local)"
                            },
                            "s3_object": {
                                "expression": {
                                    "references": [
                                        "local.s3_bucket",
                                        "local.s3_key",
                                        "local.s3_object_version"
                                    ]
                                },
                                "description": "The map with S3 object data of zip archive deployed (if deployment was from S3)"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_cloudwatch_log_group.lambda",
                                "mode": "managed",
                                "type": "aws_cloudwatch_log_group",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "kms_key_id": {
                                        "references": [
                                            "var.cloudwatch_logs_kms_key_id"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.function_name"
                                        ]
                                    },
                                    "retention_in_days": {
                                        "references": [
                                            "var.cloudwatch_logs_retention_in_days"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.cloudwatch_logs_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.use_existing_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.additional_inline",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "additional_inline",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.additional_inline[0].json",
                                            "data.aws_iam_policy_document.additional_inline[0]",
                                            "data.aws_iam_policy_document.additional_inline"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_statements"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.additional_json",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "additional_json",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "var.policy_json"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_json"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.additional_jsons",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "additional_jsons",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name",
                                            "count.index"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "var.policy_jsons",
                                            "count.index"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_jsons",
                                        "var.number_of_policy_jsons"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.async",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "async",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.async[0].json",
                                            "data.aws_iam_policy_document.async[0]",
                                            "data.aws_iam_policy_document.async"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_async_event_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.dead_letter",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "dead_letter",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.dead_letter[0].json",
                                            "data.aws_iam_policy_document.dead_letter[0]",
                                            "data.aws_iam_policy_document.dead_letter"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_dead_letter_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.logs",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.logs[0].json",
                                            "data.aws_iam_policy_document.logs[0]",
                                            "data.aws_iam_policy_document.logs"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_cloudwatch_logs_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.tracing",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "tracing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy.tracing[0].policy",
                                            "data.aws_iam_policy.tracing[0]",
                                            "data.aws_iam_policy.tracing"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_tracing_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_policy.vpc",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "vpc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.policy_path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy.vpc[0].policy",
                                            "data.aws_iam_policy.vpc[0]",
                                            "data.aws_iam_policy.vpc"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_network_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.lambda",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.assume_role[0].json",
                                            "data.aws_iam_policy_document.assume_role[0]",
                                            "data.aws_iam_policy_document.assume_role"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.role_description"
                                        ]
                                    },
                                    "force_detach_policies": {
                                        "references": [
                                            "var.role_force_detach_policies"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "local.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.role_path"
                                        ]
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.role_permissions_boundary"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.role_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_inline",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_inline",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.additional_inline[0].arn",
                                            "aws_iam_policy.additional_inline[0]",
                                            "aws_iam_policy.additional_inline"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_statements"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_json",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_json",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.additional_json[0].arn",
                                            "aws_iam_policy.additional_json[0]",
                                            "aws_iam_policy.additional_json"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_json"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_jsons",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_jsons",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.additional_jsons",
                                            "count.index"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_jsons",
                                        "var.number_of_policy_jsons"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_many",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_many",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.policies",
                                            "count.index"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policies",
                                        "var.number_of_policies"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.additional_one",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "additional_one",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.policy"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.async",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "async",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.async[0].arn",
                                            "aws_iam_policy.async[0]",
                                            "aws_iam_policy.async"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_async_event_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.dead_letter",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "dead_letter",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.dead_letter[0].arn",
                                            "aws_iam_policy.dead_letter[0]",
                                            "aws_iam_policy.dead_letter"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_dead_letter_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.logs",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.logs[0].arn",
                                            "aws_iam_policy.logs[0]",
                                            "aws_iam_policy.logs"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_cloudwatch_logs_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.tracing",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "tracing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.tracing[0].arn",
                                            "aws_iam_policy.tracing[0]",
                                            "aws_iam_policy.tracing"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_tracing_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.vpc",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "vpc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "aws_iam_policy.vpc[0].arn",
                                            "aws_iam_policy.vpc[0]",
                                            "aws_iam_policy.vpc"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.lambda[0].name",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_network_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_event_source_mapping.this",
                                "mode": "managed",
                                "type": "aws_lambda_event_source_mapping",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "batch_size": {
                                        "references": [
                                            "each.value.batch_size",
                                            "each.value"
                                        ]
                                    },
                                    "bisect_batch_on_function_error": {
                                        "references": [
                                            "each.value.bisect_batch_on_function_error",
                                            "each.value"
                                        ]
                                    },
                                    "enabled": {
                                        "references": [
                                            "each.value.enabled",
                                            "each.value"
                                        ]
                                    },
                                    "event_source_arn": {
                                        "references": [
                                            "each.value.event_source_arn",
                                            "each.value"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].arn",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "function_response_types": {
                                        "references": [
                                            "each.value.function_response_types",
                                            "each.value"
                                        ]
                                    },
                                    "maximum_batching_window_in_seconds": {
                                        "references": [
                                            "each.value.maximum_batching_window_in_seconds",
                                            "each.value"
                                        ]
                                    },
                                    "maximum_record_age_in_seconds": {
                                        "references": [
                                            "each.value.maximum_record_age_in_seconds",
                                            "each.value"
                                        ]
                                    },
                                    "maximum_retry_attempts": {
                                        "references": [
                                            "each.value.maximum_retry_attempts",
                                            "each.value"
                                        ]
                                    },
                                    "parallelization_factor": {
                                        "references": [
                                            "each.value.parallelization_factor",
                                            "each.value"
                                        ]
                                    },
                                    "queues": {
                                        "references": [
                                            "each.value.queues",
                                            "each.value"
                                        ]
                                    },
                                    "starting_position": {
                                        "references": [
                                            "each.value.starting_position",
                                            "each.value"
                                        ]
                                    },
                                    "starting_position_timestamp": {
                                        "references": [
                                            "each.value.starting_position_timestamp",
                                            "each.value"
                                        ]
                                    },
                                    "topics": {
                                        "references": [
                                            "each.value.topics",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.event_source_mapping",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_unqualified_alias_allowed_triggers"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_function.this",
                                "mode": "managed",
                                "type": "aws_lambda_function",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "architectures": {
                                        "references": [
                                            "var.architectures"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "filename": {
                                        "references": [
                                            "local.filename"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "var.function_name"
                                        ]
                                    },
                                    "handler": {
                                        "references": [
                                            "var.package_type",
                                            "var.handler"
                                        ]
                                    },
                                    "image_uri": {
                                        "references": [
                                            "var.image_uri"
                                        ]
                                    },
                                    "kms_key_arn": {
                                        "references": [
                                            "var.kms_key_arn"
                                        ]
                                    },
                                    "layers": {
                                        "references": [
                                            "var.layers"
                                        ]
                                    },
                                    "memory_size": {
                                        "references": [
                                            "var.memory_size"
                                        ]
                                    },
                                    "package_type": {
                                        "references": [
                                            "var.package_type"
                                        ]
                                    },
                                    "publish": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.publish"
                                        ]
                                    },
                                    "reserved_concurrent_executions": {
                                        "references": [
                                            "var.reserved_concurrent_executions"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "var.create_role",
                                            "aws_iam_role.lambda[0].arn",
                                            "aws_iam_role.lambda[0]",
                                            "aws_iam_role.lambda",
                                            "var.lambda_role"
                                        ]
                                    },
                                    "runtime": {
                                        "references": [
                                            "var.package_type",
                                            "var.runtime"
                                        ]
                                    },
                                    "s3_bucket": {
                                        "references": [
                                            "local.s3_bucket"
                                        ]
                                    },
                                    "s3_key": {
                                        "references": [
                                            "local.s3_key"
                                        ]
                                    },
                                    "s3_object_version": {
                                        "references": [
                                            "local.s3_object_version"
                                        ]
                                    },
                                    "source_code_hash": {
                                        "references": [
                                            "var.ignore_source_code_hash",
                                            "local.filename",
                                            "local.filename",
                                            "local.was_missing",
                                            "local.filename"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    },
                                    "timeout": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.timeout",
                                            "var.timeout"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer"
                                    ]
                                },
                                "depends_on": [
                                    "null_resource.archive",
                                    "aws_s3_object.lambda_package",
                                    "aws_cloudwatch_log_group.lambda"
                                ]
                            },
                            {
                                "address": "aws_lambda_function_event_invoke_config.this",
                                "mode": "managed",
                                "type": "aws_lambda_function_event_invoke_config",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "maximum_event_age_in_seconds": {
                                        "references": [
                                            "var.maximum_event_age_in_seconds"
                                        ]
                                    },
                                    "maximum_retry_attempts": {
                                        "references": [
                                            "var.maximum_retry_attempts"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "each.key",
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "local.qualifiers",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_async_event_config"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_function_url.this",
                                "mode": "managed",
                                "type": "aws_lambda_function_url",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "authorization_type": {
                                        "references": [
                                            "var.authorization_type"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "var.create_unqualified_alias_lambda_function_url",
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_lambda_function_url"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_layer_version.this",
                                "mode": "managed",
                                "type": "aws_lambda_layer_version",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "compatible_architectures": {
                                        "references": [
                                            "var.compatible_architectures"
                                        ]
                                    },
                                    "compatible_runtimes": {
                                        "references": [
                                            "var.compatible_runtimes",
                                            "var.compatible_runtimes",
                                            "var.runtime"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "filename": {
                                        "references": [
                                            "local.filename"
                                        ]
                                    },
                                    "layer_name": {
                                        "references": [
                                            "var.layer_name"
                                        ]
                                    },
                                    "license_info": {
                                        "references": [
                                            "var.license_info"
                                        ]
                                    },
                                    "s3_bucket": {
                                        "references": [
                                            "local.s3_bucket"
                                        ]
                                    },
                                    "s3_key": {
                                        "references": [
                                            "local.s3_key"
                                        ]
                                    },
                                    "s3_object_version": {
                                        "references": [
                                            "local.s3_object_version"
                                        ]
                                    },
                                    "skip_destroy": {
                                        "references": [
                                            "var.layer_skip_destroy"
                                        ]
                                    },
                                    "source_code_hash": {
                                        "references": [
                                            "var.ignore_source_code_hash",
                                            "local.filename",
                                            "local.filename",
                                            "local.was_missing",
                                            "local.filename"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_layer"
                                    ]
                                },
                                "depends_on": [
                                    "null_resource.archive",
                                    "aws_s3_object.lambda_package"
                                ]
                            },
                            {
                                "address": "aws_lambda_permission.current_version_triggers",
                                "mode": "managed",
                                "type": "aws_lambda_permission",
                                "name": "current_version_triggers",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "action": {
                                        "references": [
                                            "each.value.action",
                                            "each.value"
                                        ]
                                    },
                                    "event_source_token": {
                                        "references": [
                                            "each.value.event_source_token",
                                            "each.value"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "principal": {
                                        "references": [
                                            "each.value.principal",
                                            "each.value",
                                            "each.value.service",
                                            "each.value"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "source_account": {
                                        "references": [
                                            "each.value.source_account",
                                            "each.value"
                                        ]
                                    },
                                    "source_arn": {
                                        "references": [
                                            "each.value.source_arn",
                                            "each.value"
                                        ]
                                    },
                                    "statement_id": {
                                        "references": [
                                            "each.value.statement_id",
                                            "each.value",
                                            "each.key"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.allowed_triggers",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_current_version_allowed_triggers"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_permission.unqualified_alias_triggers",
                                "mode": "managed",
                                "type": "aws_lambda_permission",
                                "name": "unqualified_alias_triggers",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "action": {
                                        "references": [
                                            "each.value.action",
                                            "each.value"
                                        ]
                                    },
                                    "event_source_token": {
                                        "references": [
                                            "each.value.event_source_token",
                                            "each.value"
                                        ]
                                    },
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "principal": {
                                        "references": [
                                            "each.value.principal",
                                            "each.value",
                                            "each.value.service",
                                            "each.value"
                                        ]
                                    },
                                    "source_account": {
                                        "references": [
                                            "each.value.source_account",
                                            "each.value"
                                        ]
                                    },
                                    "source_arn": {
                                        "references": [
                                            "each.value.source_arn",
                                            "each.value"
                                        ]
                                    },
                                    "statement_id": {
                                        "references": [
                                            "each.value.statement_id",
                                            "each.value",
                                            "each.key"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.allowed_triggers",
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.create_unqualified_alias_allowed_triggers"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lambda_provisioned_concurrency_config.current_version",
                                "mode": "managed",
                                "type": "aws_lambda_provisioned_concurrency_config",
                                "name": "current_version",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "function_name": {
                                        "references": [
                                            "aws_lambda_function.this[0].function_name",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    },
                                    "provisioned_concurrent_executions": {
                                        "references": [
                                            "var.provisioned_concurrent_executions"
                                        ]
                                    },
                                    "qualifier": {
                                        "references": [
                                            "aws_lambda_function.this[0].version",
                                            "aws_lambda_function.this[0]",
                                            "aws_lambda_function.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.provisioned_concurrent_executions"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_object.lambda_package",
                                "mode": "managed",
                                "type": "aws_s3_object",
                                "name": "lambda_package",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "acl": {
                                        "references": [
                                            "var.s3_acl"
                                        ]
                                    },
                                    "bucket": {
                                        "references": [
                                            "var.s3_bucket"
                                        ]
                                    },
                                    "key": {
                                        "references": [
                                            "local.s3_key"
                                        ]
                                    },
                                    "server_side_encryption": {
                                        "references": [
                                            "var.s3_server_side_encryption"
                                        ]
                                    },
                                    "source": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.filename",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    },
                                    "storage_class": {
                                        "references": [
                                            "var.s3_object_storage_class"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.s3_object_tags_only",
                                            "var.s3_object_tags",
                                            "var.tags",
                                            "var.s3_object_tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.store_on_s3",
                                        "var.create_package"
                                    ]
                                },
                                "depends_on": [
                                    "null_resource.archive"
                                ]
                            },
                            {
                                "address": "local_file.archive_plan",
                                "mode": "managed",
                                "type": "local_file",
                                "name": "archive_plan",
                                "provider_config_key": "module.create_instrument_lambda:local",
                                "expressions": {
                                    "content": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.build_plan",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    },
                                    "directory_permission": {
                                        "constant_value": "0755"
                                    },
                                    "file_permission": {
                                        "constant_value": "0644"
                                    },
                                    "filename": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.build_plan_filename",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_package"
                                    ]
                                }
                            },
                            {
                                "address": "null_resource.archive",
                                "mode": "managed",
                                "type": "null_resource",
                                "name": "archive",
                                "provider_config_key": "module.create_instrument_lambda:null",
                                "provisioners": [
                                    {
                                        "type": "local-exec",
                                        "expressions": {
                                            "command": {
                                                "references": [
                                                    "data.external.archive_prepare[0].result.build_plan_filename",
                                                    "data.external.archive_prepare[0].result",
                                                    "data.external.archive_prepare[0]",
                                                    "data.external.archive_prepare"
                                                ]
                                            },
                                            "interpreter": {
                                                "references": [
                                                    "local.python",
                                                    "path.module",
                                                    "data.external.archive_prepare[0].result.timestamp",
                                                    "data.external.archive_prepare[0].result",
                                                    "data.external.archive_prepare[0]",
                                                    "data.external.archive_prepare"
                                                ]
                                            }
                                        }
                                    }
                                ],
                                "expressions": {
                                    "triggers": {
                                        "references": [
                                            "data.external.archive_prepare[0].result.filename",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare",
                                            "data.external.archive_prepare[0].result.timestamp",
                                            "data.external.archive_prepare[0].result",
                                            "data.external.archive_prepare[0]",
                                            "data.external.archive_prepare"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_package"
                                    ]
                                },
                                "depends_on": [
                                    "local_file.archive_plan"
                                ]
                            },
                            {
                                "address": "data.aws_arn.log_group_arn",
                                "mode": "data",
                                "type": "aws_arn",
                                "name": "log_group_arn",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "arn": {
                                        "references": [
                                            "local.log_group_arn_regional"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.lambda_at_edge"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_cloudwatch_log_group.lambda",
                                "mode": "data",
                                "type": "aws_cloudwatch_log_group",
                                "name": "lambda",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.lambda_at_edge",
                                            "var.function_name"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create",
                                        "var.create_function",
                                        "var.create_layer",
                                        "var.use_existing_cloudwatch_log_group"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy.tracing",
                                "mode": "data",
                                "type": "aws_iam_policy",
                                "name": "tracing",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "arn": {
                                        "references": [
                                            "data.aws_partition.current.partition",
                                            "data.aws_partition.current"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_tracing_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy.vpc",
                                "mode": "data",
                                "type": "aws_iam_policy",
                                "name": "vpc",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "arn": {
                                        "references": [
                                            "data.aws_partition.current.partition",
                                            "data.aws_partition.current"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_network_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.additional_inline",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "additional_inline",
                                "provider_config_key": "aws",
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_policy_statements"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.assume_role",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sts:AssumeRole"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "local.trusted_entities_services"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.async",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "async",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sns:Publish",
                                                    "sqs:SendMessage",
                                                    "events:PutEvents",
                                                    "lambda:InvokeFunction"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.destination_on_failure",
                                                    "var.destination_on_success"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_async_event_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.dead_letter",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "dead_letter",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "sns:Publish",
                                                    "sqs:SendMessage"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "var.dead_letter_target_arn"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_dead_letter_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.logs",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "logs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "references": [
                                                    "var.use_existing_cloudwatch_log_group"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "resources": {
                                                "references": [
                                                    "local.log_group_arn"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_role",
                                        "var.attach_cloudwatch_logs_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_partition.current",
                                "mode": "data",
                                "type": "aws_partition",
                                "name": "current",
                                "provider_config_key": "aws",
                                "schema_version": 0
                            },
                            {
                                "address": "data.external.archive_prepare",
                                "mode": "data",
                                "type": "external",
                                "name": "archive_prepare",
                                "provider_config_key": "module.create_instrument_lambda:external",
                                "expressions": {
                                    "program": {
                                        "references": [
                                            "local.python",
                                            "path.module"
                                        ]
                                    },
                                    "query": {
                                        "references": [
                                            "path.module",
                                            "path.root",
                                            "path.cwd",
                                            "var.build_in_docker",
                                            "var.docker_pip_cache",
                                            "var.docker_build_root",
                                            "var.docker_file",
                                            "var.docker_image",
                                            "var.docker_with_ssh_agent",
                                            "var.artifacts_dir",
                                            "var.runtime",
                                            "var.source_path",
                                            "var.hash_extra",
                                            "var.recreate_missing_package"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create",
                                        "var.create_package"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "allowed_triggers": {
                                "default": {},
                                "description": "Map of allowed triggers to create Lambda permissions"
                            },
                            "architectures": {
                                "default": null,
                                "description": "Instruction set architecture for your Lambda function. Valid values are [\"x86_64\"] and [\"arm64\"]."
                            },
                            "artifacts_dir": {
                                "default": "builds",
                                "description": "Directory name where artifacts should be stored"
                            },
                            "assume_role_policy_statements": {
                                "default": {},
                                "description": "Map of dynamic policy statements for assuming Lambda Function role (trust relationship)"
                            },
                            "attach_async_event_policy": {
                                "default": false,
                                "description": "Controls whether async event policy should be added to IAM role for Lambda Function"
                            },
                            "attach_cloudwatch_logs_policy": {
                                "default": true,
                                "description": "Controls whether CloudWatch Logs policy should be added to IAM role for Lambda Function"
                            },
                            "attach_dead_letter_policy": {
                                "default": false,
                                "description": "Controls whether SNS/SQS dead letter notification policy should be added to IAM role for Lambda Function"
                            },
                            "attach_network_policy": {
                                "default": false,
                                "description": "Controls whether VPC/network policy should be added to IAM role for Lambda Function"
                            },
                            "attach_policies": {
                                "default": false,
                                "description": "Controls whether list of policies should be added to IAM role for Lambda Function"
                            },
                            "attach_policy": {
                                "default": false,
                                "description": "Controls whether policy should be added to IAM role for Lambda Function"
                            },
                            "attach_policy_json": {
                                "default": false,
                                "description": "Controls whether policy_json should be added to IAM role for Lambda Function"
                            },
                            "attach_policy_jsons": {
                                "default": false,
                                "description": "Controls whether policy_jsons should be added to IAM role for Lambda Function"
                            },
                            "attach_policy_statements": {
                                "default": false,
                                "description": "Controls whether policy_statements should be added to IAM role for Lambda Function"
                            },
                            "attach_tracing_policy": {
                                "default": false,
                                "description": "Controls whether X-Ray tracing policy should be added to IAM role for Lambda Function"
                            },
                            "authorization_type": {
                                "default": "NONE",
                                "description": "The type of authentication that the Lambda Function URL uses. Set to 'AWS_IAM' to restrict access to authenticated IAM users only. Set to 'NONE' to bypass IAM authentication and create a public endpoint."
                            },
                            "build_in_docker": {
                                "default": false,
                                "description": "Whether to build dependencies in Docker"
                            },
                            "cloudwatch_logs_kms_key_id": {
                                "default": null,
                                "description": "The ARN of the KMS Key to use when encrypting log data."
                            },
                            "cloudwatch_logs_retention_in_days": {
                                "default": null,
                                "description": "Specifies the number of days you want to retain log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653."
                            },
                            "cloudwatch_logs_tags": {
                                "default": {},
                                "description": "A map of tags to assign to the resource."
                            },
                            "compatible_architectures": {
                                "default": null,
                                "description": "A list of Architectures Lambda layer is compatible with. Currently x86_64 and arm64 can be specified."
                            },
                            "compatible_runtimes": {
                                "default": [],
                                "description": "A list of Runtimes this layer is compatible with. Up to 5 runtimes can be specified."
                            },
                            "cors": {
                                "default": {},
                                "description": "CORS settings to be used by the Lambda Function URL"
                            },
                            "create": {
                                "default": true,
                                "description": "Controls whether resources should be created"
                            },
                            "create_async_event_config": {
                                "default": false,
                                "description": "Controls whether async event configuration for Lambda Function/Alias should be created"
                            },
                            "create_current_version_allowed_triggers": {
                                "default": true,
                                "description": "Whether to allow triggers on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
                            },
                            "create_current_version_async_event_config": {
                                "default": true,
                                "description": "Whether to allow async event configuration on current version of Lambda Function (this will revoke permissions from previous version because Terraform manages only current resources)"
                            },
                            "create_function": {
                                "default": true,
                                "description": "Controls whether Lambda Function resource should be created"
                            },
                            "create_lambda_function_url": {
                                "default": false,
                                "description": "Controls whether the Lambda Function URL resource should be created"
                            },
                            "create_layer": {
                                "default": false,
                                "description": "Controls whether Lambda Layer resource should be created"
                            },
                            "create_package": {
                                "default": true,
                                "description": "Controls whether Lambda package should be created"
                            },
                            "create_role": {
                                "default": true,
                                "description": "Controls whether IAM role for Lambda Function should be created"
                            },
                            "create_unqualified_alias_allowed_triggers": {
                                "default": true,
                                "description": "Whether to allow triggers on unqualified alias pointing to $LATEST version"
                            },
                            "create_unqualified_alias_async_event_config": {
                                "default": true,
                                "description": "Whether to allow async event configuration on unqualified alias pointing to $LATEST version"
                            },
                            "create_unqualified_alias_lambda_function_url": {
                                "default": true,
                                "description": "Whether to use unqualified alias pointing to $LATEST version in Lambda Function URL"
                            },
                            "dead_letter_target_arn": {
                                "default": null,
                                "description": "The ARN of an SNS topic or SQS queue to notify when an invocation fails."
                            },
                            "description": {
                                "default": "",
                                "description": "Description of your Lambda Function (or Layer)"
                            },
                            "destination_on_failure": {
                                "default": null,
                                "description": "Amazon Resource Name (ARN) of the destination resource for failed asynchronous invocations"
                            },
                            "destination_on_success": {
                                "default": null,
                                "description": "Amazon Resource Name (ARN) of the destination resource for successful asynchronous invocations"
                            },
                            "docker_build_root": {
                                "default": "",
                                "description": "Root dir where to build in Docker"
                            },
                            "docker_file": {
                                "default": "",
                                "description": "Path to a Dockerfile when building in Docker"
                            },
                            "docker_image": {
                                "default": "",
                                "description": "Docker image to use for the build"
                            },
                            "docker_pip_cache": {
                                "default": null,
                                "description": "Whether to mount a shared pip cache folder into docker environment or not"
                            },
                            "docker_with_ssh_agent": {
                                "default": false,
                                "description": "Whether to pass SSH_AUTH_SOCK into docker environment or not"
                            },
                            "environment_variables": {
                                "default": {},
                                "description": "A map that defines environment variables for the Lambda Function."
                            },
                            "ephemeral_storage_size": {
                                "default": 512,
                                "description": "Amount of ephemeral storage (/tmp) in MB your Lambda Function can use at runtime. Valid value between 512 MB to 10,240 MB (10 GB)."
                            },
                            "event_source_mapping": {
                                "default": {},
                                "description": "Map of event source mapping"
                            },
                            "file_system_arn": {
                                "default": null,
                                "description": "The Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system."
                            },
                            "file_system_local_mount_path": {
                                "default": null,
                                "description": "The path where the function can access the file system, starting with /mnt/."
                            },
                            "function_name": {
                                "default": "",
                                "description": "A unique name for your Lambda Function"
                            },
                            "handler": {
                                "default": "",
                                "description": "Lambda Function entrypoint in your code"
                            },
                            "hash_extra": {
                                "default": "",
                                "description": "The string to add into hashing function. Useful when building same source path for different functions."
                            },
                            "ignore_source_code_hash": {
                                "default": false,
                                "description": "Whether to ignore changes to the function's source code hash. Set to true if you manage infrastructure and code deployments separately."
                            },
                            "image_config_command": {
                                "default": [],
                                "description": "The CMD for the docker image"
                            },
                            "image_config_entry_point": {
                                "default": [],
                                "description": "The ENTRYPOINT for the docker image"
                            },
                            "image_config_working_directory": {
                                "default": null,
                                "description": "The working directory for the docker image"
                            },
                            "image_uri": {
                                "default": null,
                                "description": "The ECR image URI containing the function's deployment package."
                            },
                            "kms_key_arn": {
                                "default": null,
                                "description": "The ARN of KMS key to use by your Lambda Function"
                            },
                            "lambda_at_edge": {
                                "default": false,
                                "description": "Set this to true if using Lambda@Edge, to enable publishing, limit the timeout, and allow edgelambda.amazonaws.com to invoke the function"
                            },
                            "lambda_role": {
                                "default": "",
                                "description": " IAM role ARN attached to the Lambda Function. This governs both who / what can invoke your Lambda Function, as well as what resources our Lambda Function has access to. See Lambda Permission Model for more details."
                            },
                            "layer_name": {
                                "default": "",
                                "description": "Name of Lambda Layer to create"
                            },
                            "layer_skip_destroy": {
                                "default": false,
                                "description": "Whether to retain the old version of a previously deployed Lambda Layer."
                            },
                            "layers": {
                                "default": null,
                                "description": "List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function."
                            },
                            "license_info": {
                                "default": "",
                                "description": "License info for your Lambda Layer. Eg, MIT or full url of a license."
                            },
                            "local_existing_package": {
                                "default": null,
                                "description": "The absolute path to an existing zip-file to use"
                            },
                            "maximum_event_age_in_seconds": {
                                "default": null,
                                "description": "Maximum age of a request that Lambda sends to a function for processing in seconds. Valid values between 60 and 21600."
                            },
                            "maximum_retry_attempts": {
                                "default": null,
                                "description": "Maximum number of times to retry when the function returns an error. Valid values between 0 and 2. Defaults to 2."
                            },
                            "memory_size": {
                                "default": 128,
                                "description": "Amount of memory in MB your Lambda Function can use at runtime. Valid value between 128 MB to 10,240 MB (10 GB), in 64 MB increments."
                            },
                            "number_of_policies": {
                                "default": 0,
                                "description": "Number of policies to attach to IAM role for Lambda Function"
                            },
                            "number_of_policy_jsons": {
                                "default": 0,
                                "description": "Number of policies JSON to attach to IAM role for Lambda Function"
                            },
                            "package_type": {
                                "default": "Zip",
                                "description": "The Lambda deployment package type. Valid options: Zip or Image"
                            },
                            "policies": {
                                "default": [],
                                "description": "List of policy statements ARN to attach to Lambda Function role"
                            },
                            "policy": {
                                "default": null,
                                "description": "An additional policy document ARN to attach to the Lambda Function role"
                            },
                            "policy_json": {
                                "default": null,
                                "description": "An additional policy document as JSON to attach to the Lambda Function role"
                            },
                            "policy_jsons": {
                                "default": [],
                                "description": "List of additional policy documents as JSON to attach to Lambda Function role"
                            },
                            "policy_path": {
                                "default": null,
                                "description": "Path of policies to that should be added to IAM role for Lambda Function"
                            },
                            "policy_statements": {
                                "default": {},
                                "description": "Map of dynamic policy statements to attach to Lambda Function role"
                            },
                            "provisioned_concurrent_executions": {
                                "default": -1,
                                "description": "Amount of capacity to allocate. Set to 1 or greater to enable, or set to 0 to disable provisioned concurrency."
                            },
                            "publish": {
                                "default": false,
                                "description": "Whether to publish creation/change as new Lambda Function Version."
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "recreate_missing_package": {
                                "default": true,
                                "description": "Whether to recreate missing Lambda package if it is missing locally or not"
                            },
                            "reserved_concurrent_executions": {
                                "default": -1,
                                "description": "The amount of reserved concurrent executions for this Lambda Function. A value of 0 disables Lambda Function from being triggered and -1 removes any concurrency limitations. Defaults to Unreserved Concurrency Limits -1."
                            },
                            "role_description": {
                                "default": null,
                                "description": "Description of IAM role to use for Lambda Function"
                            },
                            "role_force_detach_policies": {
                                "default": true,
                                "description": "Specifies to force detaching any policies the IAM role has before destroying it."
                            },
                            "role_name": {
                                "default": null,
                                "description": "Name of IAM role to use for Lambda Function"
                            },
                            "role_path": {
                                "default": null,
                                "description": "Path of IAM role to use for Lambda Function"
                            },
                            "role_permissions_boundary": {
                                "default": null,
                                "description": "The ARN of the policy that is used to set the permissions boundary for the IAM role used by Lambda Function"
                            },
                            "role_tags": {
                                "default": {},
                                "description": "A map of tags to assign to IAM role"
                            },
                            "runtime": {
                                "default": "",
                                "description": "Lambda Function runtime"
                            },
                            "s3_acl": {
                                "default": "private",
                                "description": "The canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, bucket-owner-read, and bucket-owner-full-control. Defaults to private."
                            },
                            "s3_bucket": {
                                "default": null,
                                "description": "S3 bucket to store artifacts"
                            },
                            "s3_existing_package": {
                                "default": null,
                                "description": "The S3 bucket object with keys bucket, key, version pointing to an existing zip-file to use"
                            },
                            "s3_object_storage_class": {
                                "default": "ONEZONE_IA",
                                "description": "Specifies the desired Storage Class for the artifact uploaded to S3. Can be either STANDARD, REDUCED_REDUNDANCY, ONEZONE_IA, INTELLIGENT_TIERING, or STANDARD_IA."
                            },
                            "s3_object_tags": {
                                "default": {},
                                "description": "A map of tags to assign to S3 bucket object."
                            },
                            "s3_object_tags_only": {
                                "default": false,
                                "description": "Set to true to not merge tags with s3_object_tags. Useful to avoid breaching S3 Object 10 tag limit."
                            },
                            "s3_prefix": {
                                "default": null,
                                "description": "Directory name where artifacts should be stored in the S3 bucket. If unset, the path from `artifacts_dir` is used"
                            },
                            "s3_server_side_encryption": {
                                "default": null,
                                "description": "Specifies server-side encryption of the object in S3. Valid values are \"AES256\" and \"aws:kms\"."
                            },
                            "source_path": {
                                "default": null,
                                "description": "The absolute path to a local file or directory containing your Lambda source code"
                            },
                            "store_on_s3": {
                                "default": false,
                                "description": "Whether to store produced artifacts on S3 or locally."
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to assign to resources."
                            },
                            "timeout": {
                                "default": 3,
                                "description": "The amount of time your Lambda Function has to run in seconds."
                            },
                            "tracing_mode": {
                                "default": null,
                                "description": "Tracing mode of the Lambda Function. Valid value can be either PassThrough or Active."
                            },
                            "trusted_entities": {
                                "default": [],
                                "description": "List of additional trusted entities for assuming Lambda Function role (trust relationship)"
                            },
                            "use_existing_cloudwatch_log_group": {
                                "default": false,
                                "description": "Whether to use an existing CloudWatch log group or create new"
                            },
                            "vpc_security_group_ids": {
                                "default": null,
                                "description": "List of security group ids when Lambda Function should run in the VPC."
                            },
                            "vpc_subnet_ids": {
                                "default": null,
                                "description": "List of subnet ids when Lambda Function should run in the VPC. Usually private or intra subnets."
                            }
                        }
                    }
                },
                "instrument_datastore": {
                    "source": "terraform-aws-modules/dynamodb-table/aws",
                    "expressions": {
                        "attributes": {
                            "constant_value": [
                                {
                                    "name": "version",
                                    "type": "S"
                                }
                            ]
                        },
                        "hash_key": {
                            "constant_value": "version"
                        },
                        "name": {
                            "references": [
                                "local.stackenv"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "dynamodb_table_arn": {
                                "expression": {
                                    "references": [
                                        "aws_dynamodb_table.this[0].arn",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].arn",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "ARN of the DynamoDB table"
                            },
                            "dynamodb_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_dynamodb_table.this[0].id",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].id",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "ID of the DynamoDB table"
                            },
                            "dynamodb_table_stream_arn": {
                                "expression": {
                                    "references": [
                                        "var.stream_enabled",
                                        "aws_dynamodb_table.this[0].stream_arn",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].stream_arn",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "The ARN of the Table Stream. Only available when var.stream_enabled is true"
                            },
                            "dynamodb_table_stream_label": {
                                "expression": {
                                    "references": [
                                        "var.stream_enabled",
                                        "aws_dynamodb_table.this[0].stream_label",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].stream_label",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "A timestamp, in ISO 8601 format of the Table Stream. Only available when var.stream_enabled is true"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_appautoscaling_policy.index_read_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "index_read_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBReadCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_policy.index_write_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "index_write_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBWriteCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_policy.table_read_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "table_read_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].resource_id",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].resource_id",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].scalable_dimension",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].service_namespace",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBReadCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_read",
                                                    "var.autoscaling_defaults[\"scale_in_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_read",
                                                    "var.autoscaling_defaults[\"scale_out_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_read",
                                                    "var.autoscaling_defaults[\"target_value\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_read"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_policy.table_write_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "table_write_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].resource_id",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].resource_id",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].scalable_dimension",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].service_namespace",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBWriteCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_write",
                                                    "var.autoscaling_defaults[\"scale_in_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_write",
                                                    "var.autoscaling_defaults[\"scale_out_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_write",
                                                    "var.autoscaling_defaults[\"target_value\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_write"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.index_read",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "index_read",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "each.value[\"read_max_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "each.value[\"read_min_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:index:ReadCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.index_write",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "index_write",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "each.value[\"write_max_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "each.value[\"write_min_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:index:WriteCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.table_read",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "table_read",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "var.autoscaling_read[\"max_capacity\"]",
                                            "var.autoscaling_read"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "var.read_capacity"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:table:ReadCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_read"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.table_write",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "table_write",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "var.autoscaling_write[\"max_capacity\"]",
                                            "var.autoscaling_write"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "var.write_capacity"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:table:WriteCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_write"
                                    ]
                                }
                            },
                            {
                                "address": "aws_dynamodb_table.autoscaled",
                                "mode": "managed",
                                "type": "aws_dynamodb_table",
                                "name": "autoscaled",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "billing_mode": {
                                        "references": [
                                            "var.billing_mode"
                                        ]
                                    },
                                    "hash_key": {
                                        "references": [
                                            "var.hash_key"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "point_in_time_recovery": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.point_in_time_recovery_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "range_key": {
                                        "references": [
                                            "var.range_key"
                                        ]
                                    },
                                    "read_capacity": {
                                        "references": [
                                            "var.read_capacity"
                                        ]
                                    },
                                    "server_side_encryption": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.server_side_encryption_enabled"
                                                ]
                                            },
                                            "kms_key_arn": {
                                                "references": [
                                                    "var.server_side_encryption_kms_key_arn"
                                                ]
                                            }
                                        }
                                    ],
                                    "stream_enabled": {
                                        "references": [
                                            "var.stream_enabled"
                                        ]
                                    },
                                    "stream_view_type": {
                                        "references": [
                                            "var.stream_view_type"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.name"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "update": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        }
                                    },
                                    "ttl": [
                                        {
                                            "attribute_name": {
                                                "references": [
                                                    "var.ttl_attribute_name"
                                                ]
                                            },
                                            "enabled": {
                                                "references": [
                                                    "var.ttl_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "write_capacity": {
                                        "references": [
                                            "var.write_capacity"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled"
                                    ]
                                }
                            },
                            {
                                "address": "aws_dynamodb_table.this",
                                "mode": "managed",
                                "type": "aws_dynamodb_table",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "billing_mode": {
                                        "references": [
                                            "var.billing_mode"
                                        ]
                                    },
                                    "hash_key": {
                                        "references": [
                                            "var.hash_key"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "point_in_time_recovery": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.point_in_time_recovery_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "range_key": {
                                        "references": [
                                            "var.range_key"
                                        ]
                                    },
                                    "read_capacity": {
                                        "references": [
                                            "var.read_capacity"
                                        ]
                                    },
                                    "server_side_encryption": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.server_side_encryption_enabled"
                                                ]
                                            },
                                            "kms_key_arn": {
                                                "references": [
                                                    "var.server_side_encryption_kms_key_arn"
                                                ]
                                            }
                                        }
                                    ],
                                    "stream_enabled": {
                                        "references": [
                                            "var.stream_enabled"
                                        ]
                                    },
                                    "stream_view_type": {
                                        "references": [
                                            "var.stream_view_type"
                                        ]
                                    },
                                    "table_class": {
                                        "references": [
                                            "var.table_class"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.name"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "update": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        }
                                    },
                                    "ttl": [
                                        {
                                            "attribute_name": {
                                                "references": [
                                                    "var.ttl_attribute_name"
                                                ]
                                            },
                                            "enabled": {
                                                "references": [
                                                    "var.ttl_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "write_capacity": {
                                        "references": [
                                            "var.write_capacity"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "attributes": {
                                "default": [],
                                "description": "List of nested attribute definitions. Only required for hash_key and range_key attributes. Each attribute has two properties: name - (Required) The name of the attribute, type - (Required) Attribute type, which must be a scalar type: S, N, or B for (S)tring, (N)umber or (B)inary data"
                            },
                            "autoscaling_defaults": {
                                "default": {
                                    "scale_in_cooldown": "0",
                                    "scale_out_cooldown": "0",
                                    "target_value": "70"
                                },
                                "description": "A map of default autoscaling settings"
                            },
                            "autoscaling_enabled": {
                                "default": false,
                                "description": "Whether or not to enable autoscaling. See note in README about this setting"
                            },
                            "autoscaling_indexes": {
                                "default": {},
                                "description": "A map of index autoscaling configurations. See example in examples/autoscaling"
                            },
                            "autoscaling_read": {
                                "default": {},
                                "description": "A map of read autoscaling settings. `max_capacity` is the only required key. See example in examples/autoscaling"
                            },
                            "autoscaling_write": {
                                "default": {},
                                "description": "A map of write autoscaling settings. `max_capacity` is the only required key. See example in examples/autoscaling"
                            },
                            "billing_mode": {
                                "default": "PAY_PER_REQUEST",
                                "description": "Controls how you are billed for read/write throughput and how you manage capacity. The valid values are PROVISIONED or PAY_PER_REQUEST"
                            },
                            "create_table": {
                                "default": true,
                                "description": "Controls if DynamoDB table and associated resources are created"
                            },
                            "global_secondary_indexes": {
                                "default": [],
                                "description": "Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc."
                            },
                            "hash_key": {
                                "default": null,
                                "description": "The attribute to use as the hash (partition) key. Must also be defined as an attribute"
                            },
                            "local_secondary_indexes": {
                                "default": [],
                                "description": "Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource."
                            },
                            "name": {
                                "default": null,
                                "description": "Name of the DynamoDB table"
                            },
                            "point_in_time_recovery_enabled": {
                                "default": false,
                                "description": "Whether to enable point-in-time recovery"
                            },
                            "range_key": {
                                "default": null,
                                "description": "The attribute to use as the range (sort) key. Must also be defined as an attribute"
                            },
                            "read_capacity": {
                                "default": null,
                                "description": "The number of read units for this table. If the billing_mode is PROVISIONED, this field should be greater than 0"
                            },
                            "replica_regions": {
                                "default": [],
                                "description": "Region names for creating replicas for a global DynamoDB table."
                            },
                            "server_side_encryption_enabled": {
                                "default": false,
                                "description": "Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK)"
                            },
                            "server_side_encryption_kms_key_arn": {
                                "default": null,
                                "description": "The ARN of the CMK that should be used for the AWS KMS encryption. This attribute should only be specified if the key is different from the default DynamoDB CMK, alias/aws/dynamodb."
                            },
                            "stream_enabled": {
                                "default": false,
                                "description": "Indicates whether Streams are to be enabled (true) or disabled (false)."
                            },
                            "stream_view_type": {
                                "default": null,
                                "description": "When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES."
                            },
                            "table_class": {
                                "default": null,
                                "description": "The storage class of the table. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "timeouts": {
                                "default": {
                                    "create": "10m",
                                    "delete": "10m",
                                    "update": "60m"
                                },
                                "description": "Updated Terraform resource management timeouts"
                            },
                            "ttl_attribute_name": {
                                "default": "",
                                "description": "The name of the table attribute to store the TTL timestamp in"
                            },
                            "ttl_enabled": {
                                "default": false,
                                "description": "Indicates whether ttl is enabled"
                            },
                            "write_capacity": {
                                "default": null,
                                "description": "The number of write units for this table. If the billing_mode is PROVISIONED, this field should be greater than 0"
                            }
                        }
                    }
                },
                "instrument_writer_policy": {
                    "source": "terraform-aws-modules/iam/aws//modules/iam-policy",
                    "expressions": {
                        "description": {
                            "constant_value": "Allows writing instrument data to S3"
                        },
                        "name": {
                            "references": [
                                "local.stackenv"
                            ]
                        },
                        "policy": {
                            "references": [
                                "module.storage.s3_bucket_arn",
                                "module.storage"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].arn",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The ARN assigned by AWS to this policy"
                            },
                            "description": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].description",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The description of the policy"
                            },
                            "id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].id",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The policy's ID"
                            },
                            "name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].name",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The name of the policy"
                            },
                            "path": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].path",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The path of the policy in IAM"
                            },
                            "policy": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].policy",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The policy document"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_iam_policy.policy",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "var.policy"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_policy"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "create_policy": {
                                "default": true,
                                "description": "Whether to create the IAM policy"
                            },
                            "description": {
                                "default": "IAM Policy",
                                "description": "The description of the policy"
                            },
                            "name": {
                                "default": "",
                                "description": "The name of the policy"
                            },
                            "path": {
                                "default": "/",
                                "description": "The path of the policy in IAM"
                            },
                            "policy": {
                                "default": "",
                                "description": "The path of the policy in IAM (tpl file)"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources."
                            }
                        }
                    }
                },
                "song_datastore": {
                    "source": "terraform-aws-modules/dynamodb-table/aws",
                    "expressions": {
                        "attributes": {
                            "constant_value": [
                                {
                                    "name": "name",
                                    "type": "S"
                                },
                                {
                                    "name": "instrumentId",
                                    "type": "S"
                                }
                            ]
                        },
                        "hash_key": {
                            "constant_value": "name"
                        },
                        "name": {
                            "references": [
                                "local.stackenv"
                            ]
                        },
                        "range_key": {
                            "constant_value": "instrumentId"
                        }
                    },
                    "module": {
                        "outputs": {
                            "dynamodb_table_arn": {
                                "expression": {
                                    "references": [
                                        "aws_dynamodb_table.this[0].arn",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].arn",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "ARN of the DynamoDB table"
                            },
                            "dynamodb_table_id": {
                                "expression": {
                                    "references": [
                                        "aws_dynamodb_table.this[0].id",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].id",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "ID of the DynamoDB table"
                            },
                            "dynamodb_table_stream_arn": {
                                "expression": {
                                    "references": [
                                        "var.stream_enabled",
                                        "aws_dynamodb_table.this[0].stream_arn",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].stream_arn",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "The ARN of the Table Stream. Only available when var.stream_enabled is true"
                            },
                            "dynamodb_table_stream_label": {
                                "expression": {
                                    "references": [
                                        "var.stream_enabled",
                                        "aws_dynamodb_table.this[0].stream_label",
                                        "aws_dynamodb_table.this[0]",
                                        "aws_dynamodb_table.this",
                                        "aws_dynamodb_table.autoscaled[0].stream_label",
                                        "aws_dynamodb_table.autoscaled[0]",
                                        "aws_dynamodb_table.autoscaled"
                                    ]
                                },
                                "description": "A timestamp, in ISO 8601 format of the Table Stream. Only available when var.stream_enabled is true"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_appautoscaling_policy.index_read_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "index_read_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.index_read",
                                            "each.key"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBReadCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_policy.index_write_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "index_write_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.index_write",
                                            "each.key"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBWriteCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_defaults",
                                                    "each.value"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_policy.table_read_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "table_read_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].resource_id",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].resource_id",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].scalable_dimension",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.table_read[0].service_namespace",
                                            "aws_appautoscaling_target.table_read[0]",
                                            "aws_appautoscaling_target.table_read"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBReadCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_read",
                                                    "var.autoscaling_defaults[\"scale_in_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_read",
                                                    "var.autoscaling_defaults[\"scale_out_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_read",
                                                    "var.autoscaling_defaults[\"target_value\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_read"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_policy.table_write_policy",
                                "mode": "managed",
                                "type": "aws_appautoscaling_policy",
                                "name": "table_write_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].resource_id",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "policy_type": {
                                        "constant_value": "TargetTrackingScaling"
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].resource_id",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].scalable_dimension",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "service_namespace": {
                                        "references": [
                                            "aws_appautoscaling_target.table_write[0].service_namespace",
                                            "aws_appautoscaling_target.table_write[0]",
                                            "aws_appautoscaling_target.table_write"
                                        ]
                                    },
                                    "target_tracking_scaling_policy_configuration": [
                                        {
                                            "predefined_metric_specification": [
                                                {
                                                    "predefined_metric_type": {
                                                        "constant_value": "DynamoDBWriteCapacityUtilization"
                                                    }
                                                }
                                            ],
                                            "scale_in_cooldown": {
                                                "references": [
                                                    "var.autoscaling_write",
                                                    "var.autoscaling_defaults[\"scale_in_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "scale_out_cooldown": {
                                                "references": [
                                                    "var.autoscaling_write",
                                                    "var.autoscaling_defaults[\"scale_out_cooldown\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            },
                                            "target_value": {
                                                "references": [
                                                    "var.autoscaling_write",
                                                    "var.autoscaling_defaults[\"target_value\"]",
                                                    "var.autoscaling_defaults"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_write"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.index_read",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "index_read",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "each.value[\"read_max_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "each.value[\"read_min_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:index:ReadCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.index_write",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "index_write",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "each.value[\"write_max_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "each.value[\"write_min_capacity\"]",
                                            "each.value"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled",
                                            "each.key"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:index:WriteCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_indexes"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.table_read",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "table_read",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "var.autoscaling_read[\"max_capacity\"]",
                                            "var.autoscaling_read"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "var.read_capacity"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:table:ReadCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_read"
                                    ]
                                }
                            },
                            {
                                "address": "aws_appautoscaling_target.table_write",
                                "mode": "managed",
                                "type": "aws_appautoscaling_target",
                                "name": "table_write",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "max_capacity": {
                                        "references": [
                                            "var.autoscaling_write[\"max_capacity\"]",
                                            "var.autoscaling_write"
                                        ]
                                    },
                                    "min_capacity": {
                                        "references": [
                                            "var.write_capacity"
                                        ]
                                    },
                                    "resource_id": {
                                        "references": [
                                            "aws_dynamodb_table.autoscaled[0].name",
                                            "aws_dynamodb_table.autoscaled[0]",
                                            "aws_dynamodb_table.autoscaled"
                                        ]
                                    },
                                    "scalable_dimension": {
                                        "constant_value": "dynamodb:table:WriteCapacityUnits"
                                    },
                                    "service_namespace": {
                                        "constant_value": "dynamodb"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled",
                                        "var.autoscaling_write"
                                    ]
                                }
                            },
                            {
                                "address": "aws_dynamodb_table.autoscaled",
                                "mode": "managed",
                                "type": "aws_dynamodb_table",
                                "name": "autoscaled",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "billing_mode": {
                                        "references": [
                                            "var.billing_mode"
                                        ]
                                    },
                                    "hash_key": {
                                        "references": [
                                            "var.hash_key"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "point_in_time_recovery": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.point_in_time_recovery_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "range_key": {
                                        "references": [
                                            "var.range_key"
                                        ]
                                    },
                                    "read_capacity": {
                                        "references": [
                                            "var.read_capacity"
                                        ]
                                    },
                                    "server_side_encryption": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.server_side_encryption_enabled"
                                                ]
                                            },
                                            "kms_key_arn": {
                                                "references": [
                                                    "var.server_side_encryption_kms_key_arn"
                                                ]
                                            }
                                        }
                                    ],
                                    "stream_enabled": {
                                        "references": [
                                            "var.stream_enabled"
                                        ]
                                    },
                                    "stream_view_type": {
                                        "references": [
                                            "var.stream_view_type"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.name"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "update": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        }
                                    },
                                    "ttl": [
                                        {
                                            "attribute_name": {
                                                "references": [
                                                    "var.ttl_attribute_name"
                                                ]
                                            },
                                            "enabled": {
                                                "references": [
                                                    "var.ttl_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "write_capacity": {
                                        "references": [
                                            "var.write_capacity"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled"
                                    ]
                                }
                            },
                            {
                                "address": "aws_dynamodb_table.this",
                                "mode": "managed",
                                "type": "aws_dynamodb_table",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "billing_mode": {
                                        "references": [
                                            "var.billing_mode"
                                        ]
                                    },
                                    "hash_key": {
                                        "references": [
                                            "var.hash_key"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "point_in_time_recovery": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.point_in_time_recovery_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "range_key": {
                                        "references": [
                                            "var.range_key"
                                        ]
                                    },
                                    "read_capacity": {
                                        "references": [
                                            "var.read_capacity"
                                        ]
                                    },
                                    "server_side_encryption": [
                                        {
                                            "enabled": {
                                                "references": [
                                                    "var.server_side_encryption_enabled"
                                                ]
                                            },
                                            "kms_key_arn": {
                                                "references": [
                                                    "var.server_side_encryption_kms_key_arn"
                                                ]
                                            }
                                        }
                                    ],
                                    "stream_enabled": {
                                        "references": [
                                            "var.stream_enabled"
                                        ]
                                    },
                                    "stream_view_type": {
                                        "references": [
                                            "var.stream_view_type"
                                        ]
                                    },
                                    "table_class": {
                                        "references": [
                                            "var.table_class"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags",
                                            "var.name"
                                        ]
                                    },
                                    "timeouts": {
                                        "create": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "delete": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        },
                                        "update": {
                                            "references": [
                                                "var.timeouts"
                                            ]
                                        }
                                    },
                                    "ttl": [
                                        {
                                            "attribute_name": {
                                                "references": [
                                                    "var.ttl_attribute_name"
                                                ]
                                            },
                                            "enabled": {
                                                "references": [
                                                    "var.ttl_enabled"
                                                ]
                                            }
                                        }
                                    ],
                                    "write_capacity": {
                                        "references": [
                                            "var.write_capacity"
                                        ]
                                    }
                                },
                                "schema_version": 1,
                                "count_expression": {
                                    "references": [
                                        "var.create_table",
                                        "var.autoscaling_enabled"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "attributes": {
                                "default": [],
                                "description": "List of nested attribute definitions. Only required for hash_key and range_key attributes. Each attribute has two properties: name - (Required) The name of the attribute, type - (Required) Attribute type, which must be a scalar type: S, N, or B for (S)tring, (N)umber or (B)inary data"
                            },
                            "autoscaling_defaults": {
                                "default": {
                                    "scale_in_cooldown": "0",
                                    "scale_out_cooldown": "0",
                                    "target_value": "70"
                                },
                                "description": "A map of default autoscaling settings"
                            },
                            "autoscaling_enabled": {
                                "default": false,
                                "description": "Whether or not to enable autoscaling. See note in README about this setting"
                            },
                            "autoscaling_indexes": {
                                "default": {},
                                "description": "A map of index autoscaling configurations. See example in examples/autoscaling"
                            },
                            "autoscaling_read": {
                                "default": {},
                                "description": "A map of read autoscaling settings. `max_capacity` is the only required key. See example in examples/autoscaling"
                            },
                            "autoscaling_write": {
                                "default": {},
                                "description": "A map of write autoscaling settings. `max_capacity` is the only required key. See example in examples/autoscaling"
                            },
                            "billing_mode": {
                                "default": "PAY_PER_REQUEST",
                                "description": "Controls how you are billed for read/write throughput and how you manage capacity. The valid values are PROVISIONED or PAY_PER_REQUEST"
                            },
                            "create_table": {
                                "default": true,
                                "description": "Controls if DynamoDB table and associated resources are created"
                            },
                            "global_secondary_indexes": {
                                "default": [],
                                "description": "Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc."
                            },
                            "hash_key": {
                                "default": null,
                                "description": "The attribute to use as the hash (partition) key. Must also be defined as an attribute"
                            },
                            "local_secondary_indexes": {
                                "default": [],
                                "description": "Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource."
                            },
                            "name": {
                                "default": null,
                                "description": "Name of the DynamoDB table"
                            },
                            "point_in_time_recovery_enabled": {
                                "default": false,
                                "description": "Whether to enable point-in-time recovery"
                            },
                            "range_key": {
                                "default": null,
                                "description": "The attribute to use as the range (sort) key. Must also be defined as an attribute"
                            },
                            "read_capacity": {
                                "default": null,
                                "description": "The number of read units for this table. If the billing_mode is PROVISIONED, this field should be greater than 0"
                            },
                            "replica_regions": {
                                "default": [],
                                "description": "Region names for creating replicas for a global DynamoDB table."
                            },
                            "server_side_encryption_enabled": {
                                "default": false,
                                "description": "Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK)"
                            },
                            "server_side_encryption_kms_key_arn": {
                                "default": null,
                                "description": "The ARN of the CMK that should be used for the AWS KMS encryption. This attribute should only be specified if the key is different from the default DynamoDB CMK, alias/aws/dynamodb."
                            },
                            "stream_enabled": {
                                "default": false,
                                "description": "Indicates whether Streams are to be enabled (true) or disabled (false)."
                            },
                            "stream_view_type": {
                                "default": null,
                                "description": "When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES."
                            },
                            "table_class": {
                                "default": null,
                                "description": "The storage class of the table. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources"
                            },
                            "timeouts": {
                                "default": {
                                    "create": "10m",
                                    "delete": "10m",
                                    "update": "60m"
                                },
                                "description": "Updated Terraform resource management timeouts"
                            },
                            "ttl_attribute_name": {
                                "default": "",
                                "description": "The name of the table attribute to store the TTL timestamp in"
                            },
                            "ttl_enabled": {
                                "default": false,
                                "description": "Indicates whether ttl is enabled"
                            },
                            "write_capacity": {
                                "default": null,
                                "description": "The number of write units for this table. If the billing_mode is PROVISIONED, this field should be greater than 0"
                            }
                        }
                    }
                },
                "song_writer_policy": {
                    "source": "terraform-aws-modules/iam/aws//modules/iam-policy",
                    "expressions": {
                        "description": {
                            "constant_value": "Allows writing Songs to DynamoDB"
                        },
                        "name": {
                            "references": [
                                "local.stackenv"
                            ]
                        },
                        "policy": {
                            "references": [
                                "module.instrument_datastore.dynamodb_table_arn",
                                "module.instrument_datastore",
                                "module.song_datastore.dynamodb_table_arn",
                                "module.song_datastore"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].arn",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The ARN assigned by AWS to this policy"
                            },
                            "description": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].description",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The description of the policy"
                            },
                            "id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].id",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The policy's ID"
                            },
                            "name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].name",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The name of the policy"
                            },
                            "path": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].path",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The path of the policy in IAM"
                            },
                            "policy": {
                                "expression": {
                                    "references": [
                                        "aws_iam_policy.policy[0].policy",
                                        "aws_iam_policy.policy[0]",
                                        "aws_iam_policy.policy"
                                    ]
                                },
                                "description": "The policy document"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_iam_policy.policy",
                                "mode": "managed",
                                "type": "aws_iam_policy",
                                "name": "policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "references": [
                                            "var.description"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.path"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "var.policy"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_policy"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "create_policy": {
                                "default": true,
                                "description": "Whether to create the IAM policy"
                            },
                            "description": {
                                "default": "IAM Policy",
                                "description": "The description of the policy"
                            },
                            "name": {
                                "default": "",
                                "description": "The name of the policy"
                            },
                            "path": {
                                "default": "/",
                                "description": "The path of the policy in IAM"
                            },
                            "policy": {
                                "default": "",
                                "description": "The path of the policy in IAM (tpl file)"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to all resources."
                            }
                        }
                    }
                },
                "song_writer_role": {
                    "source": "terraform-aws-modules/iam/aws//modules/iam-assumable-role",
                    "expressions": {
                        "create_role": {
                            "constant_value": true
                        },
                        "custom_role_policy_arns": {
                            "references": [
                                "module.song_writer_policy.arn",
                                "module.song_writer_policy",
                                "module.instrument_writer_policy.arn",
                                "module.instrument_writer_policy"
                            ]
                        },
                        "custom_role_trust_policy": {},
                        "number_of_custom_role_policy_arns": {
                            "constant_value": 3
                        },
                        "role_name": {
                            "references": [
                                "local.stackenv"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "iam_instance_profile_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].arn",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this"
                                    ]
                                },
                                "description": "ARN of IAM instance profile"
                            },
                            "iam_instance_profile_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].id",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this"
                                    ]
                                },
                                "description": "IAM Instance profile's ID."
                            },
                            "iam_instance_profile_name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].name",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this"
                                    ]
                                },
                                "description": "Name of IAM instance profile"
                            },
                            "iam_instance_profile_path": {
                                "expression": {
                                    "references": [
                                        "aws_iam_instance_profile.this[0].path",
                                        "aws_iam_instance_profile.this[0]",
                                        "aws_iam_instance_profile.this"
                                    ]
                                },
                                "description": "Path of IAM instance profile"
                            },
                            "iam_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].arn",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "ARN of IAM role"
                            },
                            "iam_role_name": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].name",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "Name of IAM role"
                            },
                            "iam_role_path": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].path",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "Path of IAM role"
                            },
                            "iam_role_unique_id": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.this[0].unique_id",
                                        "aws_iam_role.this[0]",
                                        "aws_iam_role.this"
                                    ]
                                },
                                "description": "Unique ID of IAM role"
                            },
                            "role_requires_mfa": {
                                "expression": {
                                    "references": [
                                        "var.role_requires_mfa"
                                    ]
                                },
                                "description": "Whether IAM role requires MFA"
                            },
                            "role_sts_externalid": {
                                "expression": {
                                    "references": [
                                        "var.role_sts_externalid"
                                    ]
                                },
                                "description": "STS ExternalId condition value to use with a role"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_iam_instance_profile.this",
                                "mode": "managed",
                                "type": "aws_iam_instance_profile",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.role_path"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_role",
                                        "var.create_instance_profile"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role.this",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {
                                        "references": [
                                            "var.custom_role_trust_policy",
                                            "data.aws_iam_policy_document.assume_role_with_mfa[0].json",
                                            "data.aws_iam_policy_document.assume_role_with_mfa[0]",
                                            "data.aws_iam_policy_document.assume_role_with_mfa",
                                            "data.aws_iam_policy_document.assume_role[0].json",
                                            "data.aws_iam_policy_document.assume_role[0]",
                                            "data.aws_iam_policy_document.assume_role"
                                        ]
                                    },
                                    "description": {
                                        "references": [
                                            "var.role_description"
                                        ]
                                    },
                                    "force_detach_policies": {
                                        "references": [
                                            "var.force_detach_policies"
                                        ]
                                    },
                                    "max_session_duration": {
                                        "references": [
                                            "var.max_session_duration"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "var.role_name"
                                        ]
                                    },
                                    "path": {
                                        "references": [
                                            "var.role_path"
                                        ]
                                    },
                                    "permissions_boundary": {
                                        "references": [
                                            "var.role_permissions_boundary_arn"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_role"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.admin",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "admin",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.admin_role_policy_arn"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_role",
                                        "var.attach_admin_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.custom",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "custom",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.custom_role_policy_arns",
                                            "count.index"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_role",
                                        "var.number_of_custom_role_policy_arns",
                                        "var.custom_role_policy_arns"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.poweruser",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "poweruser",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.poweruser_role_policy_arn"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_role",
                                        "var.attach_poweruser_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_iam_role_policy_attachment.readonly",
                                "mode": "managed",
                                "type": "aws_iam_role_policy_attachment",
                                "name": "readonly",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "policy_arn": {
                                        "references": [
                                            "var.readonly_role_policy_arn"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "aws_iam_role.this[0].name",
                                            "aws_iam_role.this[0]",
                                            "aws_iam_role.this"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.create_role",
                                        "var.attach_readonly_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.assume_role",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "references": [
                                                    "var.trusted_role_actions"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "var.trusted_role_arns"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "AWS"
                                                    }
                                                },
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "var.trusted_role_services"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.custom_role_trust_policy",
                                        "var.role_requires_mfa"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.assume_role_with_mfa",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "assume_role_with_mfa",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "references": [
                                                    "var.trusted_role_actions"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Bool"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "true"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:MultiFactorAuthPresent"
                                                    }
                                                },
                                                {
                                                    "test": {
                                                        "constant_value": "NumericLessThan"
                                                    },
                                                    "values": {
                                                        "references": [
                                                            "var.mfa_age"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:MultiFactorAuthAge"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "var.trusted_role_arns"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "AWS"
                                                    }
                                                },
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "var.trusted_role_services"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.custom_role_trust_policy",
                                        "var.role_requires_mfa"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "admin_role_policy_arn": {
                                "default": "arn:aws:iam::aws:policy/AdministratorAccess",
                                "description": "Policy ARN to use for admin role"
                            },
                            "attach_admin_policy": {
                                "default": false,
                                "description": "Whether to attach an admin policy to a role"
                            },
                            "attach_poweruser_policy": {
                                "default": false,
                                "description": "Whether to attach a poweruser policy to a role"
                            },
                            "attach_readonly_policy": {
                                "default": false,
                                "description": "Whether to attach a readonly policy to a role"
                            },
                            "create_instance_profile": {
                                "default": false,
                                "description": "Whether to create an instance profile"
                            },
                            "create_role": {
                                "default": false,
                                "description": "Whether to create a role"
                            },
                            "custom_role_policy_arns": {
                                "default": [],
                                "description": "List of ARNs of IAM policies to attach to IAM role"
                            },
                            "custom_role_trust_policy": {
                                "default": "",
                                "description": "A custom role trust policy"
                            },
                            "force_detach_policies": {
                                "default": false,
                                "description": "Whether policies should be detached from this role when destroying"
                            },
                            "max_session_duration": {
                                "default": 3600,
                                "description": "Maximum CLI/API session duration in seconds between 3600 and 43200"
                            },
                            "mfa_age": {
                                "default": 86400,
                                "description": "Max age of valid MFA (in seconds) for roles which require MFA"
                            },
                            "number_of_custom_role_policy_arns": {
                                "default": null,
                                "description": "Number of IAM policies to attach to IAM role"
                            },
                            "poweruser_role_policy_arn": {
                                "default": "arn:aws:iam::aws:policy/PowerUserAccess",
                                "description": "Policy ARN to use for poweruser role"
                            },
                            "readonly_role_policy_arn": {
                                "default": "arn:aws:iam::aws:policy/ReadOnlyAccess",
                                "description": "Policy ARN to use for readonly role"
                            },
                            "role_description": {
                                "default": "",
                                "description": "IAM Role description"
                            },
                            "role_name": {
                                "default": "",
                                "description": "IAM role name"
                            },
                            "role_path": {
                                "default": "/",
                                "description": "Path of IAM role"
                            },
                            "role_permissions_boundary_arn": {
                                "default": "",
                                "description": "Permissions boundary ARN to use for IAM role"
                            },
                            "role_requires_mfa": {
                                "default": true,
                                "description": "Whether role requires MFA"
                            },
                            "role_sts_externalid": {
                                "default": [],
                                "description": "STS ExternalId condition values to use with a role (when MFA is not required)"
                            },
                            "tags": {
                                "default": {},
                                "description": "A map of tags to add to IAM role resources"
                            },
                            "trusted_role_actions": {
                                "default": [
                                    "sts:AssumeRole"
                                ],
                                "description": "Actions of STS"
                            },
                            "trusted_role_arns": {
                                "default": [],
                                "description": "ARNs of AWS entities who can assume these roles"
                            },
                            "trusted_role_services": {
                                "default": [],
                                "description": "AWS Services that can assume these roles"
                            }
                        }
                    }
                },
                "storage": {
                    "source": "terraform-aws-modules/s3-bucket/aws",
                    "expressions": {
                        "bucket": {
                            "references": [
                                "var.stack"
                            ]
                        },
                        "force_destroy": {
                            "constant_value": true
                        },
                        "versioning": {
                            "constant_value": {
                                "status": true
                            }
                        }
                    },
                    "module": {
                        "outputs": {
                            "s3_bucket_arn": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this[0].arn",
                                        "aws_s3_bucket.this[0]",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The ARN of the bucket. Will be of format arn:aws:s3:::bucketname."
                            },
                            "s3_bucket_bucket_domain_name": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this[0].bucket_domain_name",
                                        "aws_s3_bucket.this[0]",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The bucket domain name. Will be of format bucketname.s3.amazonaws.com."
                            },
                            "s3_bucket_bucket_regional_domain_name": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this[0].bucket_regional_domain_name",
                                        "aws_s3_bucket.this[0]",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The bucket region-specific domain name. The bucket domain name including the region name, please refer here for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent redirect issues from CloudFront to S3 Origin URL."
                            },
                            "s3_bucket_hosted_zone_id": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this[0].hosted_zone_id",
                                        "aws_s3_bucket.this[0]",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The Route 53 Hosted Zone ID for this bucket's region."
                            },
                            "s3_bucket_id": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket_policy.this[0].id",
                                        "aws_s3_bucket_policy.this[0]",
                                        "aws_s3_bucket_policy.this",
                                        "aws_s3_bucket.this[0].id",
                                        "aws_s3_bucket.this[0]",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The name of the bucket."
                            },
                            "s3_bucket_region": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.this[0].region",
                                        "aws_s3_bucket.this[0]",
                                        "aws_s3_bucket.this"
                                    ]
                                },
                                "description": "The AWS region this bucket resides in."
                            },
                            "s3_bucket_website_domain": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket_website_configuration.this[0].website_domain",
                                        "aws_s3_bucket_website_configuration.this[0]",
                                        "aws_s3_bucket_website_configuration.this"
                                    ]
                                },
                                "description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records."
                            },
                            "s3_bucket_website_endpoint": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket_website_configuration.this[0].website_endpoint",
                                        "aws_s3_bucket_website_configuration.this[0]",
                                        "aws_s3_bucket_website_configuration.this"
                                    ]
                                },
                                "description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string."
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_s3_bucket.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "var.bucket"
                                        ]
                                    },
                                    "bucket_prefix": {
                                        "references": [
                                            "var.bucket_prefix"
                                        ]
                                    },
                                    "force_destroy": {
                                        "references": [
                                            "var.force_destroy"
                                        ]
                                    },
                                    "object_lock_enabled": {
                                        "references": [
                                            "var.object_lock_enabled"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.tags"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_accelerate_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_accelerate_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    },
                                    "status": {
                                        "references": [
                                            "var.acceleration_status"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.acceleration_status"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_acl.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_acl",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "acl": {
                                        "references": [
                                            "var.acl",
                                            "var.acl"
                                        ]
                                    },
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.acl",
                                        "var.acl",
                                        "local.grants"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_cors_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_cors_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "local.cors_rules"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_intelligent_tiering_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_intelligent_tiering_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "name": {
                                        "references": [
                                            "each.key"
                                        ]
                                    },
                                    "status": {
                                        "references": [
                                            "each.value.status",
                                            "each.value",
                                            "each.value.status",
                                            "each.value"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "for_each_expression": {
                                    "references": [
                                        "local.intelligent_tiering",
                                        "local.create_bucket"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_lifecycle_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_lifecycle_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "local.lifecycle_rules"
                                    ]
                                },
                                "depends_on": [
                                    "aws_s3_bucket_versioning.this"
                                ]
                            },
                            {
                                "address": "aws_s3_bucket_logging.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_logging",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "target_bucket": {
                                        "references": [
                                            "var.logging[\"target_bucket\"]",
                                            "var.logging"
                                        ]
                                    },
                                    "target_prefix": {
                                        "references": [
                                            "var.logging[\"target_prefix\"]",
                                            "var.logging"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.logging"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_object_lock_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_object_lock_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    },
                                    "rule": [
                                        {
                                            "default_retention": [
                                                {
                                                    "days": {
                                                        "references": [
                                                            "var.object_lock_configuration.rule.default_retention.days",
                                                            "var.object_lock_configuration.rule.default_retention",
                                                            "var.object_lock_configuration.rule",
                                                            "var.object_lock_configuration"
                                                        ]
                                                    },
                                                    "mode": {
                                                        "references": [
                                                            "var.object_lock_configuration.rule.default_retention.mode",
                                                            "var.object_lock_configuration.rule.default_retention",
                                                            "var.object_lock_configuration.rule",
                                                            "var.object_lock_configuration"
                                                        ]
                                                    },
                                                    "years": {
                                                        "references": [
                                                            "var.object_lock_configuration.rule.default_retention.years",
                                                            "var.object_lock_configuration.rule.default_retention",
                                                            "var.object_lock_configuration.rule",
                                                            "var.object_lock_configuration"
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    "token": {
                                        "references": [
                                            "var.object_lock_configuration.token",
                                            "var.object_lock_configuration"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.object_lock_enabled",
                                        "var.object_lock_configuration.rule.default_retention",
                                        "var.object_lock_configuration.rule",
                                        "var.object_lock_configuration"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_ownership_controls.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_ownership_controls",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "local.attach_policy",
                                            "aws_s3_bucket_policy.this[0].id",
                                            "aws_s3_bucket_policy.this[0]",
                                            "aws_s3_bucket_policy.this",
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "rule": [
                                        {
                                            "object_ownership": {
                                                "references": [
                                                    "var.object_ownership"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.control_object_ownership"
                                    ]
                                },
                                "depends_on": [
                                    "aws_s3_bucket_policy.this",
                                    "aws_s3_bucket_public_access_block.this",
                                    "aws_s3_bucket.this"
                                ]
                            },
                            {
                                "address": "aws_s3_bucket_policy.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_policy",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "data.aws_iam_policy_document.combined[0].json",
                                            "data.aws_iam_policy_document.combined[0]",
                                            "data.aws_iam_policy_document.combined"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "local.attach_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_public_access_block.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_public_access_block",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "block_public_acls": {
                                        "references": [
                                            "var.block_public_acls"
                                        ]
                                    },
                                    "block_public_policy": {
                                        "references": [
                                            "var.block_public_policy"
                                        ]
                                    },
                                    "bucket": {
                                        "references": [
                                            "local.attach_policy",
                                            "aws_s3_bucket_policy.this[0].id",
                                            "aws_s3_bucket_policy.this[0]",
                                            "aws_s3_bucket_policy.this",
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "ignore_public_acls": {
                                        "references": [
                                            "var.ignore_public_acls"
                                        ]
                                    },
                                    "restrict_public_buckets": {
                                        "references": [
                                            "var.restrict_public_buckets"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.attach_public_policy"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_replication_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_replication_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "role": {
                                        "references": [
                                            "var.replication_configuration[\"role\"]",
                                            "var.replication_configuration"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.replication_configuration"
                                    ]
                                },
                                "depends_on": [
                                    "aws_s3_bucket_versioning.this"
                                ]
                            },
                            {
                                "address": "aws_s3_bucket_request_payment_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_request_payment_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    },
                                    "payer": {
                                        "references": [
                                            "var.request_payer"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.request_payer"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_server_side_encryption_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_server_side_encryption_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.server_side_encryption_configuration"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_versioning.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_versioning",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    },
                                    "mfa": {
                                        "references": [
                                            "var.versioning[\"mfa\"]",
                                            "var.versioning"
                                        ]
                                    },
                                    "versioning_configuration": [
                                        {
                                            "mfa_delete": {
                                                "references": [
                                                    "var.versioning[\"mfa_delete\"]",
                                                    "var.versioning",
                                                    "var.versioning[\"mfa_delete\"]",
                                                    "var.versioning"
                                                ]
                                            },
                                            "status": {
                                                "references": [
                                                    "var.versioning[\"enabled\"]",
                                                    "var.versioning",
                                                    "var.versioning[\"status\"]",
                                                    "var.versioning",
                                                    "var.versioning[\"status\"]",
                                                    "var.versioning"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.versioning"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_website_configuration.this",
                                "mode": "managed",
                                "type": "aws_s3_bucket_website_configuration",
                                "name": "this",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.this[0].id",
                                            "aws_s3_bucket.this[0]",
                                            "aws_s3_bucket.this"
                                        ]
                                    },
                                    "expected_bucket_owner": {
                                        "references": [
                                            "var.expected_bucket_owner"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.website"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_canonical_user_id.this",
                                "mode": "data",
                                "type": "aws_canonical_user_id",
                                "name": "this",
                                "provider_config_key": "aws",
                                "schema_version": 0
                            },
                            {
                                "address": "data.aws_elb_service_account.this",
                                "mode": "data",
                                "type": "aws_elb_service_account",
                                "name": "this",
                                "provider_config_key": "aws",
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.attach_elb_log_delivery_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.combined",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "combined",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "source_policy_documents": {
                                        "references": [
                                            "var.attach_elb_log_delivery_policy",
                                            "data.aws_iam_policy_document.elb_log_delivery[0].json",
                                            "data.aws_iam_policy_document.elb_log_delivery[0]",
                                            "data.aws_iam_policy_document.elb_log_delivery",
                                            "var.attach_lb_log_delivery_policy",
                                            "data.aws_iam_policy_document.lb_log_delivery[0].json",
                                            "data.aws_iam_policy_document.lb_log_delivery[0]",
                                            "data.aws_iam_policy_document.lb_log_delivery",
                                            "var.attach_require_latest_tls_policy",
                                            "data.aws_iam_policy_document.require_latest_tls[0].json",
                                            "data.aws_iam_policy_document.require_latest_tls[0]",
                                            "data.aws_iam_policy_document.require_latest_tls",
                                            "var.attach_deny_insecure_transport_policy",
                                            "data.aws_iam_policy_document.deny_insecure_transport[0].json",
                                            "data.aws_iam_policy_document.deny_insecure_transport[0]",
                                            "data.aws_iam_policy_document.deny_insecure_transport",
                                            "var.attach_policy",
                                            "var.policy"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "local.attach_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.deny_insecure_transport",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "deny_insecure_transport",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:*"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "Bool"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "false"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "aws:SecureTransport"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Deny"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "*"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "*"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this",
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "denyInsecureTransport"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.attach_deny_insecure_transport_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.elb_log_delivery",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "elb_log_delivery",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:PutObject"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "references": [
                                                            "data.aws_elb_service_account.this"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "AWS"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": ""
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.attach_elb_log_delivery_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.lb_log_delivery",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "lb_log_delivery",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:PutObject"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "StringEquals"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "bucket-owner-full-control"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "s3:x-amz-acl"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "delivery.logs.amazonaws.com"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "AWSLogDeliveryWrite"
                                            }
                                        },
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:GetBucketAcl"
                                                ]
                                            },
                                            "effect": {
                                                "constant_value": "Allow"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "delivery.logs.amazonaws.com"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "Service"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "AWSLogDeliveryAclCheck"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.attach_lb_log_delivery_policy"
                                    ]
                                }
                            },
                            {
                                "address": "data.aws_iam_policy_document.require_latest_tls",
                                "mode": "data",
                                "type": "aws_iam_policy_document",
                                "name": "require_latest_tls",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "statement": [
                                        {
                                            "actions": {
                                                "constant_value": [
                                                    "s3:*"
                                                ]
                                            },
                                            "condition": [
                                                {
                                                    "test": {
                                                        "constant_value": "NumericLessThan"
                                                    },
                                                    "values": {
                                                        "constant_value": [
                                                            "1.2"
                                                        ]
                                                    },
                                                    "variable": {
                                                        "constant_value": "s3:TlsVersion"
                                                    }
                                                }
                                            ],
                                            "effect": {
                                                "constant_value": "Deny"
                                            },
                                            "principals": [
                                                {
                                                    "identifiers": {
                                                        "constant_value": [
                                                            "*"
                                                        ]
                                                    },
                                                    "type": {
                                                        "constant_value": "*"
                                                    }
                                                }
                                            ],
                                            "resources": {
                                                "references": [
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this",
                                                    "aws_s3_bucket.this[0].arn",
                                                    "aws_s3_bucket.this[0]",
                                                    "aws_s3_bucket.this"
                                                ]
                                            },
                                            "sid": {
                                                "constant_value": "denyOutdatedTLS"
                                            }
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "local.create_bucket",
                                        "var.attach_require_latest_tls_policy"
                                    ]
                                }
                            }
                        ],
                        "variables": {
                            "acceleration_status": {
                                "default": null,
                                "description": "(Optional) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended."
                            },
                            "acl": {
                                "default": null,
                                "description": "(Optional) The canned ACL to apply. Conflicts with `grant`"
                            },
                            "attach_deny_insecure_transport_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have deny non-SSL transport policy attached"
                            },
                            "attach_elb_log_delivery_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have ELB log delivery policy attached"
                            },
                            "attach_lb_log_delivery_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have ALB/NLB log delivery policy attached"
                            },
                            "attach_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should have bucket policy attached (set to `true` to use value of `policy` as bucket policy)"
                            },
                            "attach_public_policy": {
                                "default": true,
                                "description": "Controls if a user defined public bucket policy will be attached (set to `false` to allow upstream to apply defaults to the bucket)"
                            },
                            "attach_require_latest_tls_policy": {
                                "default": false,
                                "description": "Controls if S3 bucket should require the latest version of TLS"
                            },
                            "block_public_acls": {
                                "default": false,
                                "description": "Whether Amazon S3 should block public ACLs for this bucket."
                            },
                            "block_public_policy": {
                                "default": false,
                                "description": "Whether Amazon S3 should block public bucket policies for this bucket."
                            },
                            "bucket": {
                                "default": null,
                                "description": "(Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name."
                            },
                            "bucket_prefix": {
                                "default": null,
                                "description": "(Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket."
                            },
                            "control_object_ownership": {
                                "default": false,
                                "description": "Whether to manage S3 Bucket Ownership Controls on this bucket."
                            },
                            "cors_rule": {
                                "default": [],
                                "description": "List of maps containing rules for Cross-Origin Resource Sharing."
                            },
                            "create_bucket": {
                                "default": true,
                                "description": "Controls if S3 bucket should be created"
                            },
                            "expected_bucket_owner": {
                                "default": null,
                                "description": "The account ID of the expected bucket owner"
                            },
                            "force_destroy": {
                                "default": false,
                                "description": "(Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable."
                            },
                            "grant": {
                                "default": [],
                                "description": "An ACL policy grant. Conflicts with `acl`"
                            },
                            "ignore_public_acls": {
                                "default": false,
                                "description": "Whether Amazon S3 should ignore public ACLs for this bucket."
                            },
                            "intelligent_tiering": {
                                "default": {},
                                "description": "Map containing intelligent tiering configuration."
                            },
                            "lifecycle_rule": {
                                "default": [],
                                "description": "List of maps containing configuration of object lifecycle management."
                            },
                            "logging": {
                                "default": {},
                                "description": "Map containing access bucket logging configuration."
                            },
                            "object_lock_configuration": {
                                "default": {},
                                "description": "Map containing S3 object locking configuration."
                            },
                            "object_lock_enabled": {
                                "default": false,
                                "description": "Whether S3 bucket should have an Object Lock configuration enabled."
                            },
                            "object_ownership": {
                                "default": "ObjectWriter",
                                "description": "Object ownership. Valid values: BucketOwnerEnforced, BucketOwnerPreferred or ObjectWriter. 'BucketOwnerEnforced': ACLs are disabled, and the bucket owner automatically owns and has full control over every object in the bucket. 'BucketOwnerPreferred': Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL. 'ObjectWriter': The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL."
                            },
                            "owner": {
                                "default": {},
                                "description": "Bucket owner's display name and ID. Conflicts with `acl`"
                            },
                            "policy": {
                                "default": null,
                                "description": "(Optional) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
                            },
                            "putin_khuylo": {
                                "default": true,
                                "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                            },
                            "replication_configuration": {
                                "default": {},
                                "description": "Map containing cross-region replication configuration."
                            },
                            "request_payer": {
                                "default": null,
                                "description": "(Optional) Specifies who should bear the cost of Amazon S3 data transfer. Can be either BucketOwner or Requester. By default, the owner of the S3 bucket would incur the costs of any data transfer. See Requester Pays Buckets developer guide for more information."
                            },
                            "restrict_public_buckets": {
                                "default": false,
                                "description": "Whether Amazon S3 should restrict public bucket policies for this bucket."
                            },
                            "server_side_encryption_configuration": {
                                "default": {},
                                "description": "Map containing server-side encryption configuration."
                            },
                            "tags": {
                                "default": {},
                                "description": "(Optional) A mapping of tags to assign to the bucket."
                            },
                            "versioning": {
                                "default": {},
                                "description": "Map containing versioning configuration."
                            },
                            "website": {
                                "default": {},
                                "description": "Map containing static web-site hosting or redirect configuration."
                            }
                        }
                    },
                    "version_constraint": ">= 3.0"
                }
            },
            "variables": {
                "aws_account": {},
                "aws_region": {},
                "env": {
                    "description": "A container of []Stack"
                },
                "lambda_execution_role": {
                    "default": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                },
                "psk": {},
                "stack": {
                    "description": "Stack identifier"
                }
            }
        }
    },
    "relevant_attributes": [
        {
            "resource": "module.create_instrument_lambda.aws_lambda_layer_version.this[0]",
            "attribute": [
                "version"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_layer_version.this[0]",
            "attribute": [
                "layer_arn"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_role.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "version"
            ]
        },
        {
            "resource": "module.api_authorizer.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "resource"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket.this[0]",
            "attribute": [
                "bucket_domain_name"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket_website_configuration.this[0]",
            "attribute": [
                "website_domain"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "last_modified"
            ]
        },
        {
            "resource": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_role.this[0]",
            "attribute": [
                "unique_id"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_layer_version.this[0]",
            "attribute": [
                "source_code_size"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_layer_version.this[0]",
            "attribute": [
                "layer_arn"
            ]
        },
        {
            "resource": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function_url.this[0]",
            "attribute": [
                "function_url"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "account"
            ]
        },
        {
            "resource": "module.instrument_datastore.aws_dynamodb_table.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.api_authorizer.data.external.archive_prepare[0]",
            "attribute": [
                "result",
                "filename"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_role.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_role.this[0]",
            "attribute": [
                "path"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_iam_role.lambda[0]",
            "attribute": [
                "unique_id"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.external.archive_prepare[0]",
            "attribute": [
                "result",
                "was_missing"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket.this[0]",
            "attribute": [
                "bucket_regional_domain_name"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_instance_profile.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "policy"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "source_code_size"
            ]
        },
        {
            "resource": "module.api_authorizer.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "partition"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_s3_object.lambda_package[0]",
            "attribute": [
                "version_id"
            ]
        },
        {
            "resource": "module.song_datastore.aws_dynamodb_table.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.song_datastore.aws_dynamodb_table.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_iam_role.lambda[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_iam_role.lambda[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "last_modified"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "source_code_size"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket.this[0]",
            "attribute": [
                "region"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket_website_configuration.this[0]",
            "attribute": [
                "website_endpoint"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_iam_role.lambda[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "invoke_arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "function_name"
            ]
        },
        {
            "resource": "module.instrument_datastore.aws_dynamodb_table.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket.this[0]",
            "attribute": [
                "hosted_zone_id"
            ]
        },
        {
            "resource": "module.storage.aws_s3_bucket_policy.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "partition"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_s3_object.lambda_package[0]",
            "attribute": [
                "version_id"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "function_name"
            ]
        },
        {
            "resource": "module.instrument_datastore.aws_dynamodb_table.autoscaled[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "description"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "qualified_arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.api_authorizer.data.external.archive_prepare[0]",
            "attribute": [
                "result",
                "was_missing"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_layer_version.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_layer_version.this[0]",
            "attribute": [
                "created_date"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "kms_key_arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function_url.this[0]",
            "attribute": [
                "url_id"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function_url.this[0]",
            "attribute": [
                "function_url"
            ]
        },
        {
            "resource": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "policy"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_layer_version.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_iam_role.lambda[0]",
            "attribute": [
                "unique_id"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "qualified_arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "invoke_arn"
            ]
        },
        {
            "resource": "module.api_authorizer.data.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "resource"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_layer_version.this[0]",
            "attribute": [
                "source_code_size"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_instance_profile.this[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.external.archive_prepare[0]",
            "attribute": [
                "result",
                "filename"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "source_code_hash"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function_url.this[0]",
            "attribute": [
                "url_id"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "service"
            ]
        },
        {
            "resource": "module.api_authorizer.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "account"
            ]
        },
        {
            "resource": "module.instrument_datastore.aws_dynamodb_table.autoscaled[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_instance_profile.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.song_writer_role.aws_iam_instance_profile.this[0]",
            "attribute": [
                "path"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "kms_key_arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_event_source_mapping.this",
            "attribute": []
        },
        {
            "resource": "module.song_datastore.aws_dynamodb_table.autoscaled[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "description"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_layer_version.this[0]",
            "attribute": [
                "created_date"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_iam_role.lambda[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.api_authorizer.data.aws_arn.log_group_arn[0]",
            "attribute": [
                "service"
            ]
        },
        {
            "resource": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_layer_version.this[0]",
            "attribute": [
                "version"
            ]
        },
        {
            "resource": "module.instrument_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "path"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_event_source_mapping.this",
            "attribute": []
        },
        {
            "resource": "module.api_authorizer.data.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_lambda_function.this[0]",
            "attribute": [
                "version"
            ]
        },
        {
            "resource": "module.song_writer_policy.aws_iam_policy.policy[0]",
            "attribute": [
                "path"
            ]
        },
        {
            "resource": "module.create_instrument_lambda.aws_cloudwatch_log_group.lambda[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.song_datastore.aws_dynamodb_table.autoscaled[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.api_authorizer.aws_lambda_function.this[0]",
            "attribute": [
                "source_code_hash"
            ]
        }
    ]
}